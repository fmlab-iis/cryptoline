gf256mat_prod:
# %rdi = 0x7fffffffd940
# %rsi = 0x7ffff78bbbe0
# %rdx = 0x2c
# %rcx = 0x44
# %r8  = 0x7ffff78bb030
# %r9  = 0x2c
	#! -> SP = 0x7fffffffd8e8
	endbr64                                         #! PC = 0x555555557190
	#jmp    0x555555556ab0 <gf256mat_prod_ref>      #! PC = 0x555555557194
	endbr64                                         #! PC = 0x555555556ab0
	push   %rbp                                     #! EA = L0x7fffffffd8e0; PC = 0x555555556ab4
	mov    %rsp,%rbp                                #! PC = 0x555555556ab5
	push   %r15                                     #! EA = L0x7fffffffd8d8; PC = 0x555555556ab8
	mov    %ecx,%r15d                               #! PC = 0x555555556aba
	push   %r14                                     #! EA = L0x7fffffffd8d0; PC = 0x555555556abd
	mov    %rsi,%r14                                #! PC = 0x555555556abf
	mov    %edx,%esi                                #! PC = 0x555555556ac2
	push   %r13                                     #! EA = L0x7fffffffd8c8; PC = 0x555555556ac4
	mov    %rdi,%r13                                #! PC = 0x555555556ac6
	push   %r12                                     #! EA = L0x7fffffffd8c0; PC = 0x555555556ac9
	mov    %edx,%r12d                               #! PC = 0x555555556acb
	push   %rbx                                     #! EA = L0x7fffffffd8b8; PC = 0x555555556ace
	mov    %r8,%rbx                                 #! PC = 0x555555556acf
	sub    $0x18,%rsp                               #! PC = 0x555555556ad2
	#call   0x555555556760 <gf256v_set_zero>        #! PC = 0x555555556ad6
	#! -> SP = 0x7fffffffd898
	mov    %esi,%edx                                #! PC = 0x555555556760
	mov    %rdi,%rsi                                #! PC = 0x555555556762
	#jmp    0x555555556110 <_gf256v_add_u64>        #! PC = 0x555555556765
	mov    %rdi,%rax                                #! PC = 0x555555556110
	or     %rsi,%rax                                #! PC = 0x555555556113
	test   $0x7,%al                                 #! PC = 0x555555556116
	#jne    0x55555555611f <_gf256v_add_u64+15>     #! PC = 0x555555556118
	cmp    $0x7,%edx                                #! PC = 0x55555555611a
	#ja     0x555555556128 <_gf256v_add_u64+24>     #! PC = 0x55555555611d
	#jmp    0x555555555fe0 <_gf256v_add_u64_aligned>#! PC = 0x555555556128
	mov    %rdi,%rcx                                #! PC = 0x555555555fe0
	cmp    $0x7,%edx                                #! PC = 0x555555555fe3
	#jbe    0x55555555606e <_gf256v_add_u64_aligned+142>#! PC = 0x555555555fe6
	lea    0x8(%rsi),%rax                           #! PC = 0x555555555fec
	lea    -0x8(%rdx),%edi                          #! PC = 0x555555555ff0
	cmp    %rax,%rcx                                #! PC = 0x555555555ff3
	#je     0x5555555560e0 <_gf256v_add_u64_aligned+256>#! PC = 0x555555555ff6
	cmp    $0xf,%edi                                #! PC = 0x555555555ffc
	#jbe    0x5555555560e0 <_gf256v_add_u64_aligned+256>#! PC = 0x555555555fff
	mov    %edi,%r9d                                #! PC = 0x555555556005
	xor    %eax,%eax                                #! PC = 0x555555556008
	shr    $0x3,%r9d                                #! PC = 0x55555555600a
	add    $0x1,%r9d                                #! PC = 0x55555555600e
	mov    %r9d,%r8d                                #! PC = 0x555555556012
	shr    %r8d                                     #! PC = 0x555555556015
	shl    $0x4,%r8                                 #! PC = 0x555555556018
	nopl   0x0(%rax)                                #! EA = L0x0; PC = 0x55555555601c
	movdqu (%rcx,%rax,1),%xmm0                      #! EA = L0x7fffffffd940; Value = 0x00007fffffffda88; PC = 0x555555556020
	movdqu (%rsi,%rax,1),%xmm1                      #! EA = L0x7fffffffd940; Value = 0x00007fffffffda88; PC = 0x555555556025
	pxor   %xmm1,%xmm0                              #! PC = 0x55555555602a
	movups %xmm0,(%rcx,%rax,1)                      #! EA = L0x7fffffffd940; PC = 0x55555555602e
	add    $0x10,%rax                               #! PC = 0x555555556032
	cmp    %rax,%r8                                 #! PC = 0x555555556036
	#jne    0x555555556020 <_gf256v_add_u64_aligned+64>#! PC = 0x555555556039
	movdqu (%rcx,%rax,1),%xmm0                      #! EA = L0x7fffffffd950; Value = 0x00007fffffffd9c0; PC = 0x555555556020
	movdqu (%rsi,%rax,1),%xmm1                      #! EA = L0x7fffffffd950; Value = 0x00007fffffffd9c0; PC = 0x555555556025
	pxor   %xmm1,%xmm0                              #! PC = 0x55555555602a
	movups %xmm0,(%rcx,%rax,1)                      #! EA = L0x7fffffffd950; PC = 0x55555555602e
	add    $0x10,%rax                               #! PC = 0x555555556032
	cmp    %rax,%r8                                 #! PC = 0x555555556036
	#jne    0x555555556020 <_gf256v_add_u64_aligned+64>#! PC = 0x555555556039
	mov    %r9d,%r10d                               #! PC = 0x55555555603b
	and    $0xfffffffe,%r10d                        #! PC = 0x55555555603e
	mov    %r10d,%r8d                               #! PC = 0x555555556042
	shl    $0x3,%r8                                 #! PC = 0x555555556045
	lea    (%rcx,%r8,1),%rax                        #! PC = 0x555555556049
	add    %rsi,%r8                                 #! PC = 0x55555555604d
	cmp    %r10d,%r9d                               #! PC = 0x555555556050
	#je     0x55555555605b <_gf256v_add_u64_aligned+123>#! PC = 0x555555556053
	mov    (%r8),%r8                                #! EA = L0x7fffffffd960; Value = 0x0000000000000000; PC = 0x555555556055
	xor    %r8,(%rax)                               #! EA = L0x7fffffffd960; PC = 0x555555556058
	shr    $0x3,%edi                                #! PC = 0x55555555605b
	and    $0x7,%edx                                #! PC = 0x55555555605e
	lea    0x1(%rdi),%eax                           #! PC = 0x555555556061
	shl    $0x3,%rax                                #! PC = 0x555555556064
	add    %rax,%rcx                                #! PC = 0x555555556068
	add    %rax,%rsi                                #! PC = 0x55555555606b
	test   %edx,%edx                                #! PC = 0x55555555606e
	#je     0x5555555560d6 <_gf256v_add_u64_aligned+246>#! PC = 0x555555556070
	lea    -0x1(%rdx),%eax                          #! PC = 0x555555556072
	movzbl (%rsi,%rax,1),%r8d                       #! EA = L0x7fffffffd96b; Value = 0x0000005639000000; PC = 0x555555556075
	xor    %r8b,(%rcx,%rax,1)                       #! EA = L0x7fffffffd96b; PC = 0x55555555607a
	test   %eax,%eax                                #! PC = 0x55555555607e
	#je     0x5555555560d6 <_gf256v_add_u64_aligned+246>#! PC = 0x555555556080
	lea    -0x2(%rdx),%eax                          #! PC = 0x555555556082
	movzbl (%rsi,%rax,1),%r8d                       #! EA = L0x7fffffffd96a; Value = 0x0000563900000000; PC = 0x555555556085
	xor    %r8b,(%rcx,%rax,1)                       #! EA = L0x7fffffffd96a; PC = 0x55555555608a
	test   %eax,%eax                                #! PC = 0x55555555608e
	#je     0x5555555560d6 <_gf256v_add_u64_aligned+246>#! PC = 0x555555556090
	lea    -0x3(%rdx),%eax                          #! PC = 0x555555556092
	movzbl (%rsi,%rax,1),%r8d                       #! EA = L0x7fffffffd969; Value = 0x0056390000000000; PC = 0x555555556095
	xor    %r8b,(%rcx,%rax,1)                       #! EA = L0x7fffffffd969; PC = 0x55555555609a
	test   %eax,%eax                                #! PC = 0x55555555609e
	#je     0x5555555560d6 <_gf256v_add_u64_aligned+246>#! PC = 0x5555555560a0
	lea    -0x4(%rdx),%eax                          #! PC = 0x5555555560a2
	movzbl (%rsi,%rax,1),%r8d                       #! EA = L0x7fffffffd968; Value = 0x5639000000000000; PC = 0x5555555560a5
	xor    %r8b,(%rcx,%rax,1)                       #! EA = L0x7fffffffd968; PC = 0x5555555560aa
	test   %eax,%eax                                #! PC = 0x5555555560ae
	#je     0x5555555560d6 <_gf256v_add_u64_aligned+246>#! PC = 0x5555555560b0
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555560d6
	test   %r15d,%r15d                              #! PC = 0x555555556adb
	#je     0x555555556b0e <gf256mat_prod_ref+94>   #! PC = 0x555555556ade
	mov    %r12d,%eax                               #! PC = 0x555555556ae0
	lea    -0x1(%r15),%edx                          #! PC = 0x555555556ae3
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd8a8; PC = 0x555555556ae7
	lea    0x1(%rbx,%rdx,1),%r15                    #! PC = 0x555555556aeb
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb030; Value = 0x156fe19775f2e00d; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb031; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbbe0; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbbe0; Value = 0x7c2da1a8198a37e1; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbbe8; Value = 0x1724d589d8b07d96; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbbf0; Value = 0xf6f449ad646db07e; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbbf8; Value = 0x83a84c98625f4119; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc00; Value = 0xe2840004e4c99902; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc08; Value = 0xa7f788730495ab37; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc09; Value = 0x2aa7f788730495ab; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc0a; Value = 0x4b2aa7f788730495; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc0b; Value = 0x834b2aa7f7887304; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x6a0011220495ab37; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x0495ab370000000d; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00a400dda134331e; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500a400dda13433; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500a400dda134; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb031; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbbe0; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb031; Value = 0x68156fe19775f2e0; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc0c; Value = 0x4b834b2aa7f78873; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x5aea6c09b5a84801; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc14; Value = 0x87fbfdc5770835ae; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xf38f5ebf0fb15724; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc1c; Value = 0x6f8ab164744c987f; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xf2e80830e287b140; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc24; Value = 0x7565dfe80fdcb5f9; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xcd093162ccf660b5; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc2c; Value = 0x65fc1652104f28ae; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x16ee003438d26f1a; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc34; Value = 0xb3fc6751ece21bc0; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc35; Value = 0xe2b3fc6751ece21b; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc36; Value = 0xe3e2b3fc6751ece2; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc37; Value = 0x10e3e2b3fc6751ec; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x6c33f467ece21bc0; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00cda672b7b186f8; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500cda672b7b186; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500cda672b7b1; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb032; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbc0c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb032; Value = 0xb568156fe19775f2; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb033; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbc38; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc38; Value = 0x8d10e3e2b3fc6751; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc40; Value = 0x8df8500ce3acab01; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc48; Value = 0x51527914482be504; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc50; Value = 0x2a3b1dbadbe558c7; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc58; Value = 0x192e513ca3697f9f; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc60; Value = 0x81af54b307db51f2; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc61; Value = 0x6581af54b307db51; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc62; Value = 0xfd6581af54b307db; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc63; Value = 0x82fd6581af54b307; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xcda672b707db51f2; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x07db51f2000000f2; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00abccfd87e80899; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500abccfd87e808; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500abccfd87e8; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb033; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbc38; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb033; Value = 0x83b568156fe19775; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc64; Value = 0xc282fd6581af54b3; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x6714217722682600; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc6c; Value = 0x812e5689406dd7c8; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x6046e68433128d82; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc74; Value = 0x35694e65d7c44912; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x9d9a28e0efe01dd1; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc7c; Value = 0xdc4ae37aa7c187d3; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x6469593f13c9764e; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbc84; Value = 0xfdc7227ccfeb4704; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xe07f6db761a30a71; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc8c; Value = 0x205d47f5f1b2ff4d; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc8d; Value = 0x61205d47f5f1b2ff; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc8e; Value = 0x2e61205d47f5f1b2; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbc8f; Value = 0x002e61205d47f5f1; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xc09cc83df1b2ff4d; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00ccd3490c8a512a; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500ccd3490c8a51; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500ccd3490c8a; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb034; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbc64; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb034; Value = 0xc283b568156fe197; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb035; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbc90; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc90; Value = 0x78002e61205d47f5; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbc98; Value = 0x347f35fc5a15bd70; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbca0; Value = 0x085c1fbf9abe9d88; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbca8; Value = 0x698f3f199be84f3d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbcb0; Value = 0x91dd5e87117b7727; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbcb8; Value = 0xe049ba83f4088d23; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbcb9; Value = 0x13e049ba83f4088d; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbcba; Value = 0xd313e049ba83f408; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbcbb; Value = 0x44d313e049ba83f4; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xccd3490cf4088d23; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xf4088d2300000097; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00ab04b9beb1d4c6; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500ab04b9beb1d4; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500ab04b9beb1; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb035; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbc90; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb035; Value = 0x86c283b568156fe1; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbcbc; Value = 0xc944d313e049ba83; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xa17617bba2778e02; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbcc4; Value = 0x15c7fa0719a953c2; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x39eca599df0508ff; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbccc; Value = 0xa8554aec36b53a4c; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xc0fb6301df49dc11; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbcd4; Value = 0x60912cd8ea71d5da; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x37b1fad7c3cc48eb; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbcdc; Value = 0xc799870ffebe31be; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xeb6c67ad5c15e20b; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbce4; Value = 0xf26e09969d76c6ab; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbce5; Value = 0x58f26e09969d76c6; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbce6; Value = 0x2358f26e09969d76; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbce7; Value = 0x412358f26e09969d; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x13c66dd89d76c6ab; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00aaf240596fa3f2; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500aaf240596fa3; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500aaf240596f; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb036; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbcbc; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb036; Value = 0x2786c283b568156f; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb037; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbce8; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbce8; Value = 0x86412358f26e0996; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbcf0; Value = 0xdf8afbc70525de24; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbcf8; Value = 0x145fa65f1892072f; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbd00; Value = 0xbd32cb01187abc81; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbd08; Value = 0x564f5cce35a75432; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd10; Value = 0x0a956937e3b7bd80; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd11; Value = 0xc30a956937e3b7bd; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd12; Value = 0x56c30a956937e3b7; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd13; Value = 0x0b56c30a956937e3; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xaaf24059e3b7bd80; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xe3b7bd800000006f; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00e3829e0e47d45f; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500e3829e0e47d4; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500e3829e0e47; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb037; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbce8; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb037; Value = 0x722786c283b56815; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd14; Value = 0xcc0b56c30a956937; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xd550c1709d5c7532; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd1c; Value = 0xe68fa4f8fbd9b3cc; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xb353a2a72de9e34c; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd24; Value = 0x7b7629c05bbc262f; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x47289c2bfd03f783; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd2c; Value = 0xf94437cd0a520fb8; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x290578e1110e2023; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd34; Value = 0x4cabe50d3682b755; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xb577cce067033d58; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd3c; Value = 0x8f77f6ac49a9c81a; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd3d; Value = 0x108f77f6ac49a9c8; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd3e; Value = 0xbf108f77f6ac49a9; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd3f; Value = 0xcfbf108f77f6ac49; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xcb6f8ee949a9c81a; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00ce62b8728a45f1; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500ce62b8728a45; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500ce62b8728a; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb038; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbd14; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb038; Value = 0xe4722786c283b568; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb039; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbd40; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbd40; Value = 0x93cfbf108f77f6ac; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbd48; Value = 0x192b4b39325ed407; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbd50; Value = 0x24d3dc739f6b8301; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbd58; Value = 0x288b7decf1bdbb81; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbd60; Value = 0xf71d19d36ebf321c; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd68; Value = 0x1596d9073eab02d6; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd69; Value = 0x2d1596d9073eab02; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd6a; Value = 0x4c2d1596d9073eab; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd6b; Value = 0x094c2d1596d9073e; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xce62b8723eab02d6; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x3eab02d600000068; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00c93a92e073f0d0; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500c93a92e073f0; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500c93a92e073; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb039; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbd40; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb039; Value = 0x8ae4722786c283b5; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd6c; Value = 0xed094c2d1596d907; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x986652ccfb0bb877; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd74; Value = 0x104f5ab3552cd062; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xdd849efb9bdfc1ea; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd7c; Value = 0x0054dd3a7cddee72; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x2e1174fa28732dbe; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd84; Value = 0x66569a60d41a7069; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xd23940e74119c9da; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbd8c; Value = 0x889246903ed4f0ec; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xc77c9da428d64069; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd94; Value = 0x2d87d179afe978fd; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd95; Value = 0xf52d87d179afe978; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd96; Value = 0xc8f52d87d179afe9; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbd97; Value = 0x4cc8f52d87d179af; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x808b31faafe978fd; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x005f4441a7f7c689; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25005f4441a7f7c6; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25005f4441a7f7; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03a; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbd6c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb03a; Value = 0x828ae4722786c283; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03b; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbd98; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbd98; Value = 0x584cc8f52d87d179; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbda0; Value = 0x81bd81b5c97d6a3f; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbda8; Value = 0xfcc2beff2621f56d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbdb0; Value = 0xbb7e3a795bc2dae6; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbdb8; Value = 0x23c1ad4b79f07c17; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbdc0; Value = 0x9fd80bea653ac095; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbdc1; Value = 0x0d9fd80bea653ac0; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbdc2; Value = 0x0a0d9fd80bea653a; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbdc3; Value = 0xaa0a0d9fd80bea65; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x5f4441a7653ac095; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x653ac09500000083; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00b5b70e6eff4a8c; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500b5b70e6eff4a; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500b5b70e6eff; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03b; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbd98; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb03b; Value = 0xce828ae4722786c2; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbdc4; Value = 0x56aa0a0d9fd80bea; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xadcf35030fc76d08; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbdcc; Value = 0x5baffab8b3e12d60; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xfa30b50fb0d0b69b; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbdd4; Value = 0xf515b94adb636cef; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xcf65d5dfafebdb12; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbddc; Value = 0xaa0a5b5665bbf474; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x7a505e4d74839223; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbde4; Value = 0x71bf4c78d12ef87f; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x12f8ab39c9c3a9b4; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbdec; Value = 0x2d0abb83db90e28a; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbded; Value = 0x6d2d0abb83db90e2; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbdee; Value = 0x096d2d0abb83db90; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbdef; Value = 0xee096d2d0abb83db; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x0359098bdb90e28a; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x005d7a88db295806; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25005d7a88db2958; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25005d7a88db29; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03c; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbdc4; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb03c; Value = 0x44ce828ae4722786; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03d; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbdf0; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbdf0; Value = 0x47ee096d2d0abb83; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbdf8; Value = 0x44e8f18b64b23291; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbe00; Value = 0x84bafc412c421844; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbe08; Value = 0x1cda98cc6bcc1b88; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbe10; Value = 0xe16b3527d32641ae; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe18; Value = 0xa2dcb006d9d2e201; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe19; Value = 0x40a2dcb006d9d2e2; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe1a; Value = 0xb540a2dcb006d9d2; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe1b; Value = 0x1bb540a2dcb006d9; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x5d7a88dbd9d2e201; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xd9d2e20100000086; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x009a4eeb1403ce1d; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25009a4eeb1403ce; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25009a4eeb1403; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03d; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbdf0; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb03d; Value = 0x0a44ce828ae47227; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe1c; Value = 0xda1bb540a2dcb006; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x8c8a3ae7faf8d362; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe24; Value = 0x9fc4197655f09185; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xe7ab595415f8ec47; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe2c; Value = 0xe1f0cd1844274f5a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xbc39f63c9f220541; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe34; Value = 0x5b535dc6a903337c; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x9a17e816b6eccf2c; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe3c; Value = 0xfb41311043c8dccf; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x9dd1d9667d52befe; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe44; Value = 0x6395438ddcb3980d; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe45; Value = 0x7e6395438ddcb398; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe46; Value = 0x5a7e6395438ddcb3; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe47; Value = 0xd85a7e6395438ddc; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x8524ed46dcb3980d; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00bd1011d1fca563; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500bd1011d1fca5; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500bd1011d1fc; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03e; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbe1c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb03e; Value = 0x4e0a44ce828ae472; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03f; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbe48; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbe48; Value = 0xccd85a7e6395438d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbe50; Value = 0x09eafe1bbf8f6aeb; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbe58; Value = 0x5582015cf5123d5f; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbe60; Value = 0x39c65a1ad1e90cba; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbe68; Value = 0xae9cda62c5ba065d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe70; Value = 0x02d77dc519d77f6b; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe71; Value = 0x3302d77dc519d77f; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe72; Value = 0xf23302d77dc519d7; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe73; Value = 0x8ff23302d77dc519; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xbd1011d119d77f6b; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x19d77f6b00000072; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x009a6113a9ae9ec4; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25009a6113a9ae9e; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25009a6113a9ae; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb03f; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbe48; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb03f; Value = 0xa84e0a44ce828ae4; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe74; Value = 0x668ff23302d77dc5; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x76e0ea52f5e11689; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe7c; Value = 0xef797e67a7e04c49; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xbe13880595ea8fa9; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe84; Value = 0x46b5376a55e6eb44; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x4d3719c9b8de6f6f; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe8c; Value = 0x335b11bea9e49c72; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xf9b692f991320285; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbe94; Value = 0x25b7a305e16f7754; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x75dfb6990cab75cf; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe9c; Value = 0xecf572a438737efd; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe9d; Value = 0x19ecf572a438737e; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe9e; Value = 0x0c19ecf572a43873; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbe9f; Value = 0x490c19ecf572a438; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xc69de25938737efd; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x0001b023623c4f77; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x250001b023623c4f; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b250001b023623c; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb040; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbe74; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb040; Value = 0xc4a84e0a44ce828a; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb041; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbea0; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbea0; Value = 0x06490c19ecf572a4; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbea8; Value = 0x850706f69864b6f5; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbeb0; Value = 0x4ef53b339c1e028d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbeb8; Value = 0x68c630f0fff18bca; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbec0; Value = 0xb889a88fa398d0bc; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbec8; Value = 0x3ac578661d3b20e8; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbec9; Value = 0x6d3ac578661d3b20; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbeca; Value = 0x3a6d3ac578661d3b; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbecb; Value = 0x9a3a6d3ac578661d; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x01b023621d3b20e8; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x1d3b20e80000008a; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x008a657504d031f0; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25008a657504d031; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25008a657504d0; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb041; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbea0; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb041; Value = 0xbcc4a84e0a44ce82; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbecc; Value = 0xd89a3a6d3ac57866; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xb30c29f6e2cc2abc; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbed4; Value = 0xcb2bccafae68da1a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xdc75eeba630f0203; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbedc; Value = 0xfa8f86ec463f0664; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xd073ffccb115c6b2; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbee4; Value = 0xd5564c1382bb1358; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xa4003c7ff86b020b; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbeec; Value = 0xb7da41c8b99578cf; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xea19758a8053e9d2; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbef4; Value = 0xe6ec99e63b6574df; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbef5; Value = 0x2ce6ec99e63b6574; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbef6; Value = 0xe52ce6ec99e63b65; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbef7; Value = 0x87e52ce6ec99e63b; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x31d74f303b6574df; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x0091171213f29ae0; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x250091171213f29a; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b250091171213f2; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb042; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbecc; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb042; Value = 0xbebcc4a84e0a44ce; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb043; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbef8; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbef8; Value = 0xcb87e52ce6ec99e6; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf00; Value = 0x835119c51d9df879; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf08; Value = 0x8d164291bc528155; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf10; Value = 0x4c564e5af72c3a6f; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf18; Value = 0x43bc566c51e91f55; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf20; Value = 0x89699236a7faff8c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf21; Value = 0xbd89699236a7faff; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf22; Value = 0x4dbd89699236a7fa; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf23; Value = 0x9b4dbd89699236a7; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x91171213a7faff8c; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xa7faff8c000000ce; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x000c08d31d628c57; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25000c08d31d628c; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25000c08d31d62; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb043; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbef8; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb043; Value = 0x84bebcc4a84e0a44; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf24; Value = 0x0d9b4dbd89699236; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xc5dcf7877576ae5c; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf2c; Value = 0x98b0c51c4690b552; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xaeae5009f166decb; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf34; Value = 0x8d59211a473c8c84; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x8beb93250841bf6e; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf3c; Value = 0x46380d1cf0ff05c5; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xd89940a81b8f36d7; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf44; Value = 0x1308bf6ebbd0f307; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xd99bb7663d076985; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf4c; Value = 0xf784bda4ddfebf53; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf4d; Value = 0xf9f784bda4ddfebf; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf4e; Value = 0xacf9f784bda4ddfe; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf4f; Value = 0xc8acf9f784bda4dd; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xe016de7dddfebf53; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x0093af729dbe2ade; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x250093af729dbe2a; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b250093af729dbe; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb044; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbf24; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb044; Value = 0x3a84bebcc4a84e0a; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb045; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbf50; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf50; Value = 0xc4c8acf9f784bda4; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf58; Value = 0x6f4b8ea6592d412e; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf60; Value = 0xbc352df8887d9ef7; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf68; Value = 0xa35e554350f280fa; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbf70; Value = 0x8f70ccfc008b1156; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf78; Value = 0x0b9579a5aa590c75; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf79; Value = 0xcf0b9579a5aa590c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf7a; Value = 0x70cf0b9579a5aa59; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbf7b; Value = 0xa370cf0b9579a5aa; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x93af729daa590c75; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xaa590c750000000a; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00c94a59a5684c78; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500c94a59a5684c; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500c94a59a568; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb045; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbf50; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb045; Value = 0x3e3a84bebcc4a84e; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf7c; Value = 0x19a370cf0b9579a5; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x75c04ab150938faf; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf84; Value = 0x5745e079d4878a4c; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x6459cf288e1822e8; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf8c; Value = 0x05157ec40de131f3; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x5dfca6fd58176212; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf94; Value = 0xf7d2289765e1bd6c; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xd9812d31b2cf0e2d; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbf9c; Value = 0xcf06845afb253c4a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x28c0d059e8d9b068; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfa4; Value = 0x18ed9ae6766d8ff0; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfa5; Value = 0xf018ed9ae6766d8f; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfa6; Value = 0x08f018ed9ae6766d; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfa7; Value = 0x4b08f018ed9ae676; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xbdbf2f50766d8ff0; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00a834b48a362ebb; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500a834b48a362e; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500a834b48a36; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb046; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbf7c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb046; Value = 0x2f3e3a84bebcc4a8; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb047; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbfa8; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbfa8; Value = 0xc04b08f018ed9ae6; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbfb0; Value = 0x3cfadabe38417959; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbfb8; Value = 0xaee79c8762f94ec1; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbfc0; Value = 0x6146e63127762c81; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bbfc8; Value = 0x258a94f0a518deca; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfd0; Value = 0x360ee66f84322c3c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfd1; Value = 0x6c360ee66f84322c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfd2; Value = 0x436c360ee66f8432; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfd3; Value = 0xfe436c360ee66f84; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xa834b48a84322c3c; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x84322c3c000000a8; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00b6247921cbf97d; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500b6247921cbf9; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500b6247921cb; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb047; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbfa8; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb047; Value = 0x322f3e3a84bebcc4; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbfd4; Value = 0x0efe436c360ee66f; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x0f6af4409d554132; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbfdc; Value = 0x64f932b844617e1d; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x0c022aacaeee7ad9; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbfe4; Value = 0xceb362590ca2db87; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x5b4a44fc4783ea13; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbfec; Value = 0xf49185f903c19449; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x7ae5975a7344dbb8; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bbff4; Value = 0x3b2961d37d738f4c; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x775e5a4546ee2036; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbffc; Value = 0x75115840b95c2ce7; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbffd; Value = 0xd475115840b95c2c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbffe; Value = 0xc6d475115840b95c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bbfff; Value = 0x09c6d475115840b9; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x2a4dcabfb95c2ce7; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x001a7ef5f6584eb4; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25001a7ef5f6584e; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25001a7ef5f658; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb048; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bbfd4; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb048; Value = 0xa3322f3e3a84bebc; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb049; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc000; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc000; Value = 0xb409c6d475115840; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc008; Value = 0xc317cf99429f2025; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc010; Value = 0xadb0b245ab1f4f9a; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc018; Value = 0x91da6b4625a8c7bb; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc020; Value = 0x8b759b497810dc71; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc028; Value = 0x086cb1a04ff26946; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc029; Value = 0x67086cb1a04ff269; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc02a; Value = 0xb467086cb1a04ff2; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc02b; Value = 0xbeb467086cb1a04f; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x1a7ef5f64ff26946; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x4ff26946000000bc; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00c1b9429d5a5b95; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500c1b9429d5a5b; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500c1b9429d5a; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb049; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc000; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb049; Value = 0x90a3322f3e3a84be; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc02c; Value = 0x60beb467086cb1a0; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xf18e9c9dc50876f8; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc034; Value = 0x6d323fd470b14cea; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x878b579dd92c3ebe; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc03c; Value = 0xd68c6e2205ce5f13; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xa71756e591b975ea; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc044; Value = 0xffd2e7f3fec6581a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x6692798e34d28d5f; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc04c; Value = 0xf9643c8b29f8d197; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xa6e25e052376d2bb; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc054; Value = 0x06fcbcb45b1e87e9; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc055; Value = 0x0e06fcbcb45b1e87; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc056; Value = 0x8e0e06fcbcb45b1e; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc057; Value = 0xc48e0e06fcbcb45b; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xfab076f65b1e87e9; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x002397c26a1f3bbf; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25002397c26a1f3b; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25002397c26a1f; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04a; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc02c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb04a; Value = 0x4590a3322f3e3a84; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04b; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc058; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc058; Value = 0x34c48e0e06fcbcb4; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc060; Value = 0xb87b5b9d0aec2d12; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc068; Value = 0x5fd3e7fbd1807574; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc070; Value = 0x585536da16765c59; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc078; Value = 0x3a40fadfbeb33bbf; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc080; Value = 0x52a896b300449fab; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc081; Value = 0xf652a896b300449f; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc082; Value = 0xcaf652a896b30044; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc083; Value = 0xcccaf652a896b300; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x2397c26a00449fab; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x00449fab00000084; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00bc85e9220070c9; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500bc85e9220070; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500bc85e92200; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04b; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc058; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb04b; Value = 0xd14590a3322f3e3a; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc084; Value = 0x33cccaf652a896b3; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x1aeb108d771c2a43; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc08c; Value = 0xb34080e16a7c2283; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x5deded60edbee603; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc094; Value = 0x55d8476369ca2d5a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xd403663a07c7e3e5; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc09c; Value = 0x34925439333ddbd4; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xb7703ea97457efac; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc0a4; Value = 0xfed9938a1ac61fd0; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xb0043e6c56baedf3; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc0ac; Value = 0x8304976382fc3454; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc0ad; Value = 0x698304976382fc34; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc0ae; Value = 0x33698304976382fc; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc0af; Value = 0x7e33698304976382; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xdd7ac7bb82fc3454; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x009231a00d70a964; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25009231a00d70a9; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25009231a00d70; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04c; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc084; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb04c; Value = 0xa9d14590a3322f3e; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04d; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc0b0; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc0b0; Value = 0x777e336983049763; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc0b8; Value = 0x6240430a7b6f7535; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc0c0; Value = 0x1eaa804a9b6fe698; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc0c8; Value = 0x78467821007e397e; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc0d0; Value = 0xcaa133d2152171e8; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc0d8; Value = 0x6d5d6271ef830c0f; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc0d9; Value = 0xa66d5d6271ef830c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc0da; Value = 0xdda66d5d6271ef83; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc0db; Value = 0x28dda66d5d6271ef; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x9231a00def830c0f; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xef830c0f0000003e; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x008372b32dfb7013; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25008372b32dfb70; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25008372b32dfb; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04d; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc0b0; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb04d; Value = 0x41a9d14590a3322f; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc0dc; Value = 0x0e28dda66d5d6271; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x37f4a7d6fc2a7a5f; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc0e4; Value = 0xbe8a47eb029a0c9a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x7ff6b2caadda00c3; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc0ec; Value = 0x3bcc93739920d826; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x2b67f0f9a3b7d5c1; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc0f4; Value = 0x52092644bbaa2ef6; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x6d10e76bb6f878f5; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc0fc; Value = 0x30cbbab6facfec95; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xd1f3f74d6f9f6639; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc104; Value = 0x76f540f84fb76af2; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc105; Value = 0xff76f540f84fb76a; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc106; Value = 0x2aff76f540f84fb7; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc107; Value = 0xce2aff76f540f84f; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x514d06d94fb76af2; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00dcc5e2d59bf69f; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500dcc5e2d59bf6; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500dcc5e2d59b; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04e; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc0dc; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb04e; Value = 0xd441a9d14590a332; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04f; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc108; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc108; Value = 0x46ce2aff76f540f8; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc110; Value = 0x7e310a03bcec6112; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc118; Value = 0xe929965642d23483; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc120; Value = 0xa815968c301a0b49; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc128; Value = 0x0460ecfa2ac24688; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc130; Value = 0xf0b7b2a35b6af029; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc131; Value = 0x31f0b7b2a35b6af0; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc132; Value = 0x6031f0b7b2a35b6a; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc133; Value = 0x216031f0b7b2a35b; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xdcc5e2d55b6af029; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x5b6af02900000032; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x0012a622abe4c14b; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x250012a622abe4c1; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b250012a622abe4; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb04f; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc108; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb04f; Value = 0x74d441a9d14590a3; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc134; Value = 0x35216031f0b7b2a3; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x2e7b3b972198b2d4; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc13c; Value = 0xe410b5fe345a4f41; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xc184a546cf4ec33b; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc144; Value = 0x94b7e5584c5e2d82; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x9744e4791315f08a; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc14c; Value = 0x1b1304d1a49b37eb; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x39ab5bc988dab394; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc154; Value = 0x89fbe8d1e8c5ce95; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x4890f430a956e9e5; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc15c; Value = 0xe676f8ab7e92e96e; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc15d; Value = 0xb2e676f8ab7e92e9; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc15e; Value = 0xbcb2e676f8ab7e92; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc15f; Value = 0xf9bcb2e676f8ab7e; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x661737827e92e96e; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00159a3df7a42994; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500159a3df7a429; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500159a3df7a4; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb050; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc134; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb050; Value = 0x6c74d441a9d14590; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb051; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc160; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc160; Value = 0x34f9bcb2e676f8ab; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc168; Value = 0x076105da3c069265; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc170; Value = 0x37e3aa3bfc7ffa32; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc178; Value = 0x75e8412d86d49ed0; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc180; Value = 0x8e24dfeb4678e16d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc188; Value = 0x1eadaed05200630a; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc189; Value = 0x681eadaed0520063; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc18a; Value = 0xa9681eadaed05200; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc18b; Value = 0x82a9681eadaed052; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x159a3df75200630a; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x5200630a00000090; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00255654e0d90017; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500255654e0d900; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500255654e0d9; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb051; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc160; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb051; Value = 0x236c74d441a9d145; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc18c; Value = 0x4382a9681eadaed0; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x663e4f6a143dedbf; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc194; Value = 0xc0cc74f8cf001a73; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xfe76893fc8ba0797; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc19c; Value = 0xa19701b0da5cba35; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xda86ad843458cb18; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc1a4; Value = 0xeb43b345d5185973; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xef9950dc30e9aefd; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc1ac; Value = 0x35eca0551bc07071; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xcd6c520bf223f03e; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc1b4; Value = 0xb2c5cbcf4c1206de; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc1b5; Value = 0x09b2c5cbcf4c1206; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc1b6; Value = 0x5d09b2c5cbcf4c12; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc1b7; Value = 0xd35d09b2c5cbcf4c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x0e6283864c1206de; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x009b02347ee1b685; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25009b02347ee1b6; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25009b02347ee1; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb052; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc18c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb052; Value = 0xc9236c74d441a9d1; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb053; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc1b8; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc1b8; Value = 0x8bd35d09b2c5cbcf; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc1c0; Value = 0xf56d50860cde016c; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc1c8; Value = 0x9f53865302d6269c; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc1d0; Value = 0xca7d8e91bde11024; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc1d8; Value = 0x29e31e6022673f36; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc1e0; Value = 0x349222a3e8caaf33; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc1e1; Value = 0x44349222a3e8caaf; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc1e2; Value = 0x0b44349222a3e8ca; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc1e3; Value = 0x760b44349222a3e8; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x9b02347ee8caaf33; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xe8caaf33000000d1; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x008ab9b312f22e39; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25008ab9b312f22e; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25008ab9b312f2; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb053; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc1b8; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb053; Value = 0x9fc9236c74d441a9; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc1e4; Value = 0x93760b44349222a3; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x6cdd88ff5f170a1e; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc1ec; Value = 0x7ec887259b617fda; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xd2a94731a6427ef8; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc1f4; Value = 0xe2192830408ad815; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xff9cb7262eaf559d; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc1fc; Value = 0xf934c16a0b60606b; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x63dcad87723a868a; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc204; Value = 0x287b3e664c335166; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xa5466c22c3864dc5; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc20c; Value = 0x7d7cd0ab914d6789; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc20d; Value = 0xd27d7cd0ab914d67; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc20e; Value = 0xc3d27d7cd0ab914d; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc20f; Value = 0x40c3d27d7cd0ab91; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xc3be66c4914d6789; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00debbc4ac0ae76d; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500debbc4ac0ae7; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500debbc4ac0a; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb054; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc1e4; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb054; Value = 0xd29fc9236c74d441; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb055; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc210; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc210; Value = 0x0040c3d27d7cd0ab; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc218; Value = 0x5b664831a862f0f7; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc220; Value = 0xa3da1523a3a299fc; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc228; Value = 0xf3f080aa76025035; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc230; Value = 0x74fdc534b9d41229; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc238; Value = 0x39e97ec4c6f1ad20; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc239; Value = 0xa739e97ec4c6f1ad; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc23a; Value = 0x1fa739e97ec4c6f1; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc23b; Value = 0xa81fa739e97ec4c6; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xdebbc4acc6f1ad20; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xc6f1ad2000000041; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00f9b43914bbe355; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500f9b43914bbe3; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500f9b43914bb; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb055; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc210; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb055; Value = 0xa0d29fc9236c74d4; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc23c; Value = 0x8aa81fa739e97ec4; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x2f8cb25640b3e517; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc244; Value = 0x6f954bd8dd274676; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x3d263d33d165f0b0; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc24c; Value = 0x7ca296e27e2c4946; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x8292569f3bb3e45b; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc254; Value = 0xb865480905000793; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x286ef7675fa70e90; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc25c; Value = 0xe3f4e8c6430dccdd; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x163a727dbba18786; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc264; Value = 0xec0fbec62cfabdec; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc265; Value = 0x09ec0fbec62cfabd; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc266; Value = 0x6709ec0fbec62cfa; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc267; Value = 0x106709ec0fbec62c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x0aff97662cfabdec; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x004962cc9a42cb40; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25004962cc9a42cb; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25004962cc9a42; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb056; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc23c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb056; Value = 0x60a0d29fc9236c74; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb057; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc268; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc268; Value = 0x61106709ec0fbec6; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc270; Value = 0xf5a088c188bb736c; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc278; Value = 0xe990828bc0d1cbd3; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc280; Value = 0xe2ef5287b30fe173; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc288; Value = 0xd5d231fb1365da69; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc290; Value = 0xdcfb98faf03a57cb; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc291; Value = 0xcadcfb98faf03a57; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc292; Value = 0x31cadcfb98faf03a; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc293; Value = 0x1b31cadcfb98faf0; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x4962cc9af03a57cb; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xf03a57cb00000074; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00fdee4a6c0f6652; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500fdee4a6c0f66; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500fdee4a6c0f; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb057; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc268; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb057; Value = 0x1c60a0d29fc9236c; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc294; Value = 0x191b31cadcfb98fa; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x2d8bec490c2acfed; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc29c; Value = 0x4f2782286cbeac3d; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x3953b4f640a03485; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc2a4; Value = 0x26d2dbb4b309ba1b; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x49d4ae58b8884695; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc2ac; Value = 0x35d12c3b9f609c22; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x27477116617d6eba; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc2b4; Value = 0x2c60119d765e7045; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xae209205d04bc06d; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc2bc; Value = 0x616bb5ce3b3b2057; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc2bd; Value = 0x87616bb5ce3b3b20; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc2be; Value = 0xc087616bb5ce3b3b; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc2bf; Value = 0xd6c087616bb5ce3b; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xc971f6ac3b3b2057; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00c38724754c4c2f; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500c38724754c4c; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500c38724754c; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb058; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc294; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb058; Value = 0xd11c60a0d29fc923; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb059; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc2c0; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc2c0; Value = 0xf5d6c087616bb5ce; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc2c8; Value = 0x02241d26ee5b0da7; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc2d0; Value = 0xb87d0ceb866582eb; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc2d8; Value = 0x8950e0f1f8bc49ae; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc2e0; Value = 0x84fd6a150e5b9d77; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc2e8; Value = 0xaf2062c6c12ac6ba; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc2e9; Value = 0xe1af2062c6c12ac6; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc2ea; Value = 0xbbe1af2062c6c12a; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc2eb; Value = 0xfabbe1af2062c6c1; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xc3872475c12ac6ba; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xc12ac6ba00000023; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x004dd980bd0b49e2; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25004dd980bd0b49; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25004dd980bd0b; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb059; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc2c0; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb059; Value = 0xbdd11c60a0d29fc9; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc2ec; Value = 0x9dfabbe1af2062c6; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x1b0c1de7a5f631ce; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc2f4; Value = 0xeb43b7c99534e3db; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x73e37a523aefed6f; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc2fc; Value = 0x1233a88cf00899d5; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x2ccaa0b8ff12acb4; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc304; Value = 0x02ee67cb934c25d6; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x454d9c5b34b996b8; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc30c; Value = 0xd7204dee1fb875e3; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xdbdf350081c9b10f; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc314; Value = 0xc159f1c0cf179eca; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc315; Value = 0x32c159f1c0cf179e; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc316; Value = 0x1b32c159f1c0cf17; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc317; Value = 0x2e1b32c159f1c0cf; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xc6484271cf179eca; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x002b821935f06d8d; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25002b821935f06d; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25002b821935f0; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05a; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc2ec; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb05a; Value = 0xf2bdd11c60a0d29f; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05b; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc318; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc318; Value = 0x032e1b32c159f1c0; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc320; Value = 0x9b3b966774589cba; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc328; Value = 0xa3831a511239cfc7; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc330; Value = 0x4f72961244ed7717; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc338; Value = 0x49f8cd7a9447535d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc340; Value = 0x775cf6ebc70cc292; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc341; Value = 0x20775cf6ebc70cc2; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc342; Value = 0x8220775cf6ebc70c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc343; Value = 0xae8220775cf6ebc7; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x2b821935c70cc292; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xc70cc2920000009f; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x0048a63880bfde6a; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x250048a63880bfde; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b250048a63880bf; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05b; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc318; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb05b; Value = 0xf8f2bdd11c60a0d2; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc344; Value = 0xafae8220775cf6eb; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x6ccd05bd5d4ae5aa; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc34c; Value = 0x0157576eb4b64183; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x5c48bb7836e120d5; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc354; Value = 0x947963ea8c66b44b; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xdedf43f82e5e4344; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc35c; Value = 0xd40b3850d776fcdc; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x6480d2b4ed5a7774; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc364; Value = 0x36a045ec33772490; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xda19795904b0c812; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc36c; Value = 0xbc7d278519882b12; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc36d; Value = 0xa9bc7d278519882b; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc36e; Value = 0x91a9bc7d27851988; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc36f; Value = 0xfd91a9bc7d278519; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x5011bdb419882b12; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00855de3fb97dea2; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500855de3fb97de; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500855de3fb97; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05c; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc344; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb05c; Value = 0x03f8f2bdd11c60a0; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05d; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc370; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc370; Value = 0x58fd91a9bc7d2785; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc378; Value = 0xfbeb1df530a5dc3a; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc380; Value = 0x10d62b5f5b59395d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc388; Value = 0xec67e1eb4e964684; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc390; Value = 0x0543f9ded208629d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc398; Value = 0xc836de7bbb61b5af; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc399; Value = 0x5ec836de7bbb61b5; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc39a; Value = 0x7d5ec836de7bbb61; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc39b; Value = 0x1a7d5ec836de7bbb; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x855de3fbbb61b5af; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xbb61b5af000000a0; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00271a980194f20e; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500271a980194f2; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500271a980194; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05d; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc370; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb05d; Value = 0x9b03f8f2bdd11c60; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc39c; Value = 0xd21a7d5ec836de7b; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xb320d1990cbd2131; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc3a4; Value = 0x2431fe1fbafd3d5c; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x8f2ab9fce44573a9; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc3ac; Value = 0x2e6799cd8aeaea6c; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xcee06ad7622746f3; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc3b4; Value = 0xd28adae70c0262e0; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x323851de7b3234cd; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc3bc; Value = 0x43512d6f99e6e793; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x9c669e3df24fa137; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc3c4; Value = 0x2dca2d08ccc33942; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc3c5; Value = 0xc22dca2d08ccc339; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc3c6; Value = 0x7dc22dca2d08ccc3; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc3c7; Value = 0xde7dc22dca2d08cc; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xd34962d1ccc33942; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x006f3e07af2335a3; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25006f3e07af2335; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25006f3e07af23; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05e; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc39c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb05e; Value = 0x919b03f8f2bdd11c; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05f; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc3c8; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc3c8; Value = 0xcfde7dc22dca2d08; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc3d0; Value = 0xc0e47abe75b1668b; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc3d8; Value = 0xbcd8f922c2576b69; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc3e0; Value = 0x22f8735ef632af9b; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc3e8; Value = 0x4bc02bbcd2571352; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc3f0; Value = 0x4bf23008edb39bfa; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc3f1; Value = 0xfc4bf23008edb39b; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc3f2; Value = 0x1efc4bf23008edb3; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc3f3; Value = 0xe51efc4bf23008ed; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x6f3e07afedb39bfa; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xedb39bfa0000001c; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x0058de549be2d09d; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x250058de549be2d0; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b250058de549be2; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb05f; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc3c8; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb05f; Value = 0xad919b03f8f2bdd1; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc3f4; Value = 0x16e51efc4bf23008; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xcb27213d9513b9c1; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc3fc; Value = 0xb86b4e788413a9be; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x63ba5bec5a00ef70; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc404; Value = 0x10c61d08700adf39; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x68e4d2019225a292; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc40c; Value = 0x20323098d3faa608; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xa86660f630bca871; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc414; Value = 0x896cedbfd3de41a0; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xcaec958823fb4489; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc41c; Value = 0xa52f5a05fb0ffd15; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc41d; Value = 0x81a52f5a05fb0ffd; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc41e; Value = 0x9381a52f5a05fb0f; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc41f; Value = 0x4f9381a52f5a05fb; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x8c144a86fb0ffd15; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x0034d6a15f25d3f5; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x250034d6a15f25d3; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b250034d6a15f25; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb060; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc3f4; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb060; Value = 0x79ad919b03f8f2bd; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb061; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc420; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc420; Value = 0xa94f9381a52f5a05; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc428; Value = 0xd8943970d4fc4562; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc430; Value = 0xb84bf478b779d354; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc438; Value = 0x8a45a3779164942b; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc440; Value = 0x9bfb4c35aad60ae8; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc448; Value = 0x8fde83b50b97bde8; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc449; Value = 0xce8fde83b50b97bd; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc44a; Value = 0x45ce8fde83b50b97; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc44b; Value = 0xff45ce8fde83b50b; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x34d6a15f0b97bde8; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x0b97bde8000000bd; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00ad21c4304308bc; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500ad21c4304308; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500ad21c43043; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb061; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc420; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb061; Value = 0xf279ad919b03f8f2; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc44c; Value = 0xeaff45ce8fde83b5; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xffaa5697e3fe2c6c; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc454; Value = 0x6543e567c43e5fae; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xf97bded5fc42ed98; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc45c; Value = 0x1893335e6ba15c42; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x14a60db7c097d538; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc464; Value = 0x45b28e39707a7b77; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x00ee1ff1095446aa; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc46c; Value = 0x6532b32c30088e5a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x1373161e3622a111; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc474; Value = 0xe79b027e5a62eb87; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc475; Value = 0x0fe79b027e5a62eb; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc476; Value = 0x290fe79b027e5a62; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc477; Value = 0xf3290fe79b027e5a; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xac2f625d5a62eb87; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00e25044ad4544d8; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500e25044ad4544; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500e25044ad45; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb062; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc44c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb062; Value = 0x49f279ad919b03f8; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb063; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc478; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc478; Value = 0x8af3290fe79b027e; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc480; Value = 0xa585dc085dfe5e9a; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc488; Value = 0x29e680272178752e; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc490; Value = 0x0a81f859835573fd; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc498; Value = 0x19fa0adbe60ba593; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4a0; Value = 0x143e37d4b1edc050; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4a1; Value = 0x20143e37d4b1edc0; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4a2; Value = 0x6a20143e37d4b1ed; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4a3; Value = 0x736a20143e37d4b1; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xe25044adb1edc050; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xb1edc050000000f8; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00757da94e1b2aac; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500757da94e1b2a; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500757da94e1b; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb063; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc478; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb063; Value = 0x3649f279ad919b03; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc4a4; Value = 0x3b736a20143e37d4; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x77bad86e25a275fc; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc4ac; Value = 0xffffcd10557cbb58; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x9a593407bd79653e; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc4b4; Value = 0x61d420bb988dcba4; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x371518fb6d7df080; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc4bc; Value = 0xf469098b7e5fc14a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xaf4e6d06d030c473; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc4c4; Value = 0xea957ecae7a5d3e7; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xdfb11e645e611a96; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4cc; Value = 0xb0ba23b68ad9ea16; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4cd; Value = 0xeeb0ba23b68ad9ea; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4ce; Value = 0x49eeb0ba23b68ad9; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4cf; Value = 0x6e49eeb0ba23b68a; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x25a482458ad9ea16; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x006ff79dcf857025; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25006ff79dcf8570; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25006ff79dcf85; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb064; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc4a4; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb064; Value = 0xf53649f279ad919b; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb065; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc4d0; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc4d0; Value = 0x586e49eeb0ba23b6; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc4d8; Value = 0x38dd54636311198e; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc4e0; Value = 0x8820a91f17def44c; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc4e8; Value = 0xf92cab678021f143; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc4f0; Value = 0x51a56b469af3681d; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4f8; Value = 0xed78d59ea97a3e4d; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4f9; Value = 0x49ed78d59ea97a3e; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4fa; Value = 0xba49ed78d59ea97a; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc4fb; Value = 0xd7ba49ed78d59ea9; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x6ff79dcfa97a3e4d; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xa97a3e4d0000009b; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00691bb33a7cdb56; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500691bb33a7cdb; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500691bb33a7c; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb065; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc4d0; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb065; Value = 0x1ef53649f279ad91; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc4fc; Value = 0x2bd7ba49ed78d59e; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x2add9e4939597ccc; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc504; Value = 0xf05ac12d65cd97a9; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xa12786b0c515efa0; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc50c; Value = 0x3929a8ce82698a22; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x9594040641231b4e; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc514; Value = 0xeca58660bda1a50e; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x70fd275de7acf0cc; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc51c; Value = 0x3a2b7e4cc30e625d; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xc587af8133d4f1a2; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc524; Value = 0xc21fdfa11ca32ec6; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc525; Value = 0x5dc21fdfa11ca32e; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc526; Value = 0x425dc21fdfa11ca3; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc527; Value = 0xdf425dc21fdfa11c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xb3f1a0f71ca32ec6; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00045c7f1745d712; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500045c7f1745d7; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500045c7f1745; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb066; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc4fc; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb066; Value = 0x181ef53649f279ad; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb067; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc528; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc528; Value = 0x8fdf425dc21fdfa1; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc530; Value = 0xeb2b13d06a30ea41; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc538; Value = 0x6e818c483104f0c2; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc540; Value = 0x6525261a750d9035; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc548; Value = 0x3c9c861f3842e31e; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc550; Value = 0x2b18b294ee7b25e3; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc551; Value = 0x452b18b294ee7b25; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc552; Value = 0x51452b18b294ee7b; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc553; Value = 0xb651452b18b294ee; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x045c7f17ee7b25e3; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xee7b25e3000000ad; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00825bcb50b34953; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500825bcb50b349; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500825bcb50b3; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb067; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc528; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb067; Value = 0xc9181ef53649f279; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc554; Value = 0x4bb651452b18b294; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x412b56ab72fdb348; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc55c; Value = 0x590fc89ae131c2da; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xf0c7662720f315ff; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc564; Value = 0x1e1165db109f5727; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xd61ae9ed55085598; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc56c; Value = 0xdf81e9d4b2261ee5; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x533211e1d972b90e; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc574; Value = 0x8a7de080ce6b8a62; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xa93e273965c297f5; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc57c; Value = 0x608de4288349c21b; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc57d; Value = 0xab608de4288349c2; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc57e; Value = 0xf6ab608de4288349; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc57f; Value = 0x91f6ab608de42883; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xc56202d28349c21b; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x003d22f29859f549; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25003d22f29859f5; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25003d22f29859; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb068; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc554; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb068; Value = 0xfac9181ef53649f2; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb069; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc580; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc580; Value = 0x3291f6ab608de428; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc588; Value = 0x2de78f5cecd4bc36; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc590; Value = 0xde74b13de3b444cb; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc598; Value = 0xc024a717dfdb1dc4; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc5a0; Value = 0xa5ad426ce86e0591; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc5a8; Value = 0xb56503429b0fb005; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc5a9; Value = 0x9fb56503429b0fb0; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc5aa; Value = 0x609fb56503429b0f; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc5ab; Value = 0xc0609fb56503429b; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x3d22f2989b0fb005; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0x9b0fb005000000f2; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00169642d7da396f; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500169642d7da39; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500169642d7da; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb069; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc580; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb069; Value = 0xd1fac9181ef53649; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc5ac; Value = 0xaac0609fb5650342; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x6968304e1eb01a0c; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc5b4; Value = 0x0e5ff11e22378c76; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x7bbabe6c6bd30748; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc5bc; Value = 0xb5dba04e5fced996; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xf05522ff8d10aee4; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc5c4; Value = 0x8ef201728461ba19; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0xc515b1257cceff02; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc5cc; Value = 0xb2e73feba0726380; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0xad4c0864e30c4523; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc5d4; Value = 0x88766699487308b6; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc5d5; Value = 0xbe88766699487308; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc5d6; Value = 0xd1be887666994873; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc5d7; Value = 0x26d1be8876669948; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x2c7b853a487308b6; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00a267d7f3a3197e; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500a267d7f3a319; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500a267d7f3a3; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06a; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc5ac; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb06a; Value = 0x8dd1fac9181ef536; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06b; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc5d8; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc5d8; Value = 0x8326d1be88766699; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc5e0; Value = 0x8fcd73296d57672f; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc5e8; Value = 0x78c61e3796c9686a; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc5f0; Value = 0xb6e88dcaee1e2ca0; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc5f8; Value = 0xfdcda823a9e241b2; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc600; Value = 0xd02ccc05cd545c16; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc601; Value = 0x4ed02ccc05cd545c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc602; Value = 0xc14ed02ccc05cd54; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc603; Value = 0xf3c14ed02ccc05cd; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xa267d7f3cd545c16; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xcd545c1600000036; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00a837befc34ba11; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500a837befc34ba; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500a837befc34; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06b; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc5d8; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb06b; Value = 0x468dd1fac9181ef5; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc604; Value = 0xf5f3c14ed02ccc05; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xc33a041f23b4c0cd; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc60c; Value = 0x3bf2a0f2be9d9827; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xdf353644eac8d094; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc614; Value = 0x7bbe8ee9e48eb9ef; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x6bb532a491530766; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc61c; Value = 0xd47fb4e43cbaa4be; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x8aa4e3c316eb440d; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc624; Value = 0xc84cc3c6885c0d8e; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x6203e29ef8dbb967; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc62c; Value = 0xd8d70d126ad96c6e; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc62d; Value = 0x75d8d70d126ad96c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc62e; Value = 0x2e75d8d70d126ad9; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc62f; Value = 0xdf2e75d8d70d126a; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xf2191f136ad96c6e; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00aad5ddcd98ce90; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500aad5ddcd98ce; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500aad5ddcd98; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06c; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc604; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb06c; Value = 0x9b468dd1fac9181e; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06d; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc630; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc630; Value = 0x24df2e75d8d70d12; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc638; Value = 0xdd22d7f48c56d647; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc640; Value = 0x34f5eade143110f5; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc648; Value = 0xd709bcaadaa87169; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc650; Value = 0x3f69bb9d320af9a6; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc658; Value = 0x719b26a8ab1d0cbd; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc659; Value = 0x53719b26a8ab1d0c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc65a; Value = 0x3453719b26a8ab1d; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc65b; Value = 0x8c3453719b26a8ab; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xaad5ddcdab1d0cbd; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xab1d0cbd0000001e; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00b8c535cea66d88; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500b8c535cea66d; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500b8c535cea6; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06d; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc630; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb06d; Value = 0x329b468dd1fac918; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc65c; Value = 0x078c3453719b26a8; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x016cb346a2d45d06; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc664; Value = 0x4eccdc540e03b973; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x474e54d84888057b; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc66c; Value = 0x57e442c5bfc5a772; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xa12eb83d79a8b2c8; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc674; Value = 0x4e67815bc140706b; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x58174f102925ef7c; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc67c; Value = 0x3ee2c62fa1c25df3; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x2cd8a07929c7fca4; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc684; Value = 0xa52a32e6ffdcfd2c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc685; Value = 0x08a52a32e6ffdcfd; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc686; Value = 0x9708a52a32e6ffdc; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc687; Value = 0xcd9708a52a32e6ff; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x26f3bea5ffdcfd2c; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x007d7092e1d0d5e0; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25007d7092e1d0d5; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25007d7092e1d0; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06e; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc65c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb06e; Value = 0xe0329b468dd1fac9; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06f; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc688; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc688; Value = 0xdecd9708a52a32e6; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc690; Value = 0xf7d7027a050d6d55; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc698; Value = 0x330ecfacce86b1f4; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc6a0; Value = 0xc06fc4c1cd19815c; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc6a8; Value = 0x45d32233f5c9f6a4; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc6b0; Value = 0xc6b5b290fd67c5a4; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc6b1; Value = 0x9bc6b5b290fd67c5; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc6b2; Value = 0x869bc6b5b290fd67; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc6b3; Value = 0x06869bc6b5b290fd; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x7d7092e1fd67c5a4; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xfd67c5a4000000c9; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x002efc962a15916b; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25002efc962a1591; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25002efc962a15; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb06f; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc688; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb06f; Value = 0x51e0329b468dd1fa; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc6b4; Value = 0xbf06869bc6b5b290; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x540133bde5c0c53c; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc6bc; Value = 0x144387ffc2455670; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x03c6081e1872d5cb; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc6c4; Value = 0xde4755e095ce8aca; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0x041f22c3ca85fdda; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc6cc; Value = 0xaed36b22a4f4203c; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x39ab415ba680f14c; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc6d4; Value = 0x29057f3ae71e045d; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x5ae4dff0af69c2ae; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc6dc; Value = 0xd4c87ca64e92971c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc6dd; Value = 0x4dd4c87ca64e9297; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc6de; Value = 0x214dd4c87ca64e92; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc6df; Value = 0x9d214dd4c87ca64e; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x193fee354e92971c; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00520afe745f053a; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500520afe745f05; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500520afe745f; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb070; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc6b4; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb070; Value = 0xeb51e0329b468dd1; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb071; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc6e0; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc6e0; Value = 0x279d214dd4c87ca6; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc6e8; Value = 0xdb511f73b3cf7a9e; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc6f0; Value = 0x622afeba4ae2749b; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc6f8; Value = 0xbd2cfe8f584646e2; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc700; Value = 0x81a4ba039e59e6e3; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc708; Value = 0x3586f86fdc54b1c5; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc709; Value = 0x793586f86fdc54b1; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc70a; Value = 0x6e793586f86fdc54; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc70b; Value = 0x036e793586f86fdc; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x520afe74dc54b1c5; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xdc54b1c5000000d1; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00cc6b9d79411c84; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500cc6b9d79411c; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500cc6b9d7941; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb071; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc6e0; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb071; Value = 0x39eb51e0329b468d; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc70c; Value = 0x7a036e793586f86f; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0xe9717e736bf019ec; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc714; Value = 0x7c0eb5de8c18b2cc; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0xbf93675bfd3f5956; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc71c; Value = 0x6ab7bcb193b26e47; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xa7255db8be902919; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc724; Value = 0xd6e641e88eb6af2b; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x1c6ece9a652399ca; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc72c; Value = 0x2160b413cf39bdff; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x1d580fad089df795; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc734; Value = 0x42dd02d25482db88; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc735; Value = 0x3742dd02d25482db; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc736; Value = 0x643742dd02d25482; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc737; Value = 0x75643742dd02d254; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x9d305a845482db88; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x00c3182d422a41e0; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x2500c3182d422a41; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b2500c3182d422a; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb072; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc70c; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb072; Value = 0x9839eb51e0329b46; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	mov    %rsi,%r11                                #! PC = 0x55555555671e
	cmp    $0x7,%ecx                                #! PC = 0x555555556721
	#jbe    0x555555556670 <_gf256v_madd_u64+160>   #! PC = 0x555555556724
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x55555555672a
	sub    %fs:0x28,%rax                            #! PC = 0x55555555672e
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x555555556737
	add    $0x28,%rsp                               #! PC = 0x555555556739
	movzbl %dl,%edx                                 #! PC = 0x55555555673d
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb073; PC = 0x555555556740
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556741
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556743
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc738; PC = 0x555555556745
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x555555556747
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x555555556749
	#jmp    0x5555555564a0 <_gf256v_madd_u64_aligned>#! PC = 0x55555555674a
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555564a0
	mov    %rsi,%r10                                #! PC = 0x5555555564a1
	mov    %ecx,%r11d                               #! PC = 0x5555555564a4
	mov    %rsp,%rbp                                #! PC = 0x5555555564a7
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555564aa
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555564ac
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555564ae
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555564b0
	mov    %rdi,%r12                                #! PC = 0x5555555564b2
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555564b5
	sub    $0x28,%rsp                               #! PC = 0x5555555564b6
	mov    %edx,-0x44(%rbp)                         #! EA = L0x7fffffffd84c; PC = 0x5555555564ba
	mov    %fs:0x28,%rax                            #! PC = 0x5555555564bd
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555564c6
	xor    %eax,%eax                                #! PC = 0x5555555564ca
	cmp    $0x7,%ecx                                #! PC = 0x5555555564cc
	#jbe    0x5555555565c0 <_gf256v_madd_u64_aligned+288>#! PC = 0x5555555564cf
	lea    -0x8(%rcx),%r13d                         #! PC = 0x5555555564d5
	movzbl %dl,%r14d                                #! PC = 0x5555555564d9
	mov    %rdi,%r15                                #! PC = 0x5555555564dd
	shr    $0x3,%r13d                               #! PC = 0x5555555564e0
	add    $0x1,%r13d                               #! PC = 0x5555555564e4
	shl    $0x3,%r13                                #! PC = 0x5555555564e8
	lea    (%rsi,%r13,1),%rbx                       #! PC = 0x5555555564ec
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc738; Value = 0x7275643742dd02d2; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd940; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc740; Value = 0x202691d16a33053c; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd948; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc748; Value = 0x19f2e18f6de09e4c; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd950; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc750; Value = 0x2d81d7e07fb48e22; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd958; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	mov    (%r10),%rdi                              #! EA = L0x7ffff78bc758; Value = 0x6e895874108b0e46; PC = 0x5555555564f0
	mov    %r14d,%esi                               #! PC = 0x5555555564f3
	add    $0x8,%r10                                #! PC = 0x5555555564f6
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x5555555564fa
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %rax,(%r15)                              #! EA = L0x7fffffffd960; PC = 0x5555555564ff
	add    $0x8,%r15                                #! PC = 0x555555556502
	cmp    %rbx,%r10                                #! PC = 0x555555556506
	#jne    0x5555555564f0 <_gf256v_madd_u64_aligned+80>#! PC = 0x555555556509
	add    %r13,%r12                                #! PC = 0x55555555650b
	and    $0x7,%r11d                               #! PC = 0x55555555650e
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556512
	xor    %eax,%eax                                #! PC = 0x555555556516
	test   %r11d,%r11d                              #! PC = 0x555555556518
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555651b
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc760; Value = 0x80e7c79af8a79f7c; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc761; Value = 0xcd80e7c79af8a79f; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc762; Value = 0xc5cd80e7c79af8a7; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    %eax,%edx                                #! PC = 0x555555556521
	add    $0x1,%eax                                #! PC = 0x555555556523
	movzbl (%rbx,%rdx,1),%ecx                       #! EA = L0x7ffff78bc763; Value = 0x2fc5cd80e7c79af8; PC = 0x555555556526
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x55555555652a
	cmp    %r11d,%eax                               #! PC = 0x55555555652d
	#jb     0x555555556521 <_gf256v_madd_u64_aligned+129>#! PC = 0x555555556530
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0xc3182d42f8a79f7c; PC = 0x555555556532
	movzbl -0x44(%rbp),%esi                         #! EA = L0x7fffffffd84c; Value = 0xf8a79f7c00000046; PC = 0x555555556536
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x55555555653a
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555653f
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556543
	cmp    $0x1,%r11d                               #! PC = 0x555555556547
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555654b
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x009a0a5bbc42b1a3; PC = 0x55555555654d
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x555555556551
	cmp    $0x2,%r11d                               #! PC = 0x555555556556
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x55555555655a
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25009a0a5bbc42b1; PC = 0x55555555655c
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x555555556560
	cmp    $0x3,%r11d                               #! PC = 0x555555556565
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556569
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25009a0a5bbc42; PC = 0x55555555656b
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x55555555656f
	cmp    $0x4,%r11d                               #! PC = 0x555555556574
	#je     0x5555555565a1 <_gf256v_madd_u64_aligned+257>#! PC = 0x555555556578
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x5555555565a1
	sub    %fs:0x28,%rax                            #! PC = 0x5555555565a5
	#jne    0x5555555565c8 <_gf256v_madd_u64_aligned+296>#! PC = 0x5555555565ae
	add    $0x28,%rsp                               #! PC = 0x5555555565b0
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb073; PC = 0x5555555565b4
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x5555555565b5
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x5555555565b7
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc738; PC = 0x5555555565b9
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x5555555565bb
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x5555555565bd
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x5555555565be
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	movzbl (%rbx),%edx                              #! EA = L0x7ffff78bb073; Value = 0x729839eb51e0329b; PC = 0x555555556af0
	mov    %r14,%rsi                                #! PC = 0x555555556af3
	mov    %r12d,%ecx                               #! PC = 0x555555556af6
	mov    %r13,%rdi                                #! PC = 0x555555556af9
	add    $0x1,%rbx                                #! PC = 0x555555556afc
	#call   0x5555555565d0 <_gf256v_madd_u64>       #! PC = 0x555555556b00
	#! -> SP = 0x7fffffffd898
	push   %rbp                                     #! EA = L0x7fffffffd890; PC = 0x5555555565d0
	mov    %ecx,%r10d                               #! PC = 0x5555555565d1
	mov    %rsp,%rbp                                #! PC = 0x5555555565d4
	push   %r15                                     #! EA = L0x7fffffffd888; PC = 0x5555555565d7
	mov    %rsi,%r15                                #! PC = 0x5555555565d9
	push   %r14                                     #! EA = L0x7fffffffd880; PC = 0x5555555565dc
	mov    %edx,%r14d                               #! PC = 0x5555555565de
	push   %r13                                     #! EA = L0x7fffffffd878; PC = 0x5555555565e1
	push   %r12                                     #! EA = L0x7fffffffd870; PC = 0x5555555565e3
	mov    %rdi,%r12                                #! PC = 0x5555555565e5
	push   %rbx                                     #! EA = L0x7fffffffd868; PC = 0x5555555565e8
	sub    $0x28,%rsp                               #! PC = 0x5555555565e9
	mov    %fs:0x28,%rax                            #! PC = 0x5555555565ed
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffd858; PC = 0x5555555565f6
	mov    %rsi,%rax                                #! PC = 0x5555555565fa
	or     %rdi,%rax                                #! PC = 0x5555555565fd
	test   $0x7,%al                                 #! PC = 0x555555556600
	#je     0x55555555671e <_gf256v_madd_u64+334>   #! PC = 0x555555556602
	cmp    $0x7,%ecx                                #! PC = 0x555555556608
	#jbe    0x55555555674f <_gf256v_madd_u64+383>   #! PC = 0x55555555660b
	lea    -0x8(%rcx),%r13d                         #! PC = 0x555555556611
	movzbl %dl,%ebx                                 #! PC = 0x555555556615
	shr    $0x3,%r13d                               #! PC = 0x555555556618
	add    $0x1,%r13d                               #! PC = 0x55555555661c
	lea    0x0(,%r13,8),%rax                        #! PC = 0x555555556620
	mov    %rdi,%r13                                #! PC = 0x555555556628
	mov    %rax,-0x48(%rbp)                         #! EA = L0x7fffffffd848; PC = 0x55555555662b
	lea    (%rsi,%rax,1),%r11                       #! PC = 0x55555555662f
	nopl   0x0(%rax,%rax,1)                         #! EA = L0x50; PC = 0x555555556633
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc764; Value = 0x0e2fc5cd80e7c79a; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd940; Value = 0x7c9c621f40ace986; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd940; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc76c; Value = 0x00953b0f5d679938; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd948; Value = 0x99039a2e19ed4521; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd948; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc774; Value = 0x2bd026067eda8359; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd950; Value = 0xde3b0dc21181fb82; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd950; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc77c; Value = 0xd229f9962403a7fb; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd958; Value = 0x2c3bf6a6c90faac6; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd958; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	mov    (%r15),%rdi                              #! EA = L0x7ffff78bc784; Value = 0x7e9614191303bd6e; PC = 0x555555556638
	mov    %ebx,%esi                                #! PC = 0x55555555663b
	add    $0x8,%r15                                #! PC = 0x55555555663d
	add    $0x8,%r13                                #! PC = 0x555555556641
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556645
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	movq   -0x8(%r13),%xmm0                         #! EA = L0x7fffffffd960; Value = 0x21486f0eeea0add8; PC = 0x55555555664a
	movq   %rax,%xmm1                               #! PC = 0x555555556650
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x555555556655
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556659
	movq   %xmm0,-0x8(%r13)                         #! EA = L0x7fffffffd960; PC = 0x55555555665d
	cmp    %r11,%r15                                #! PC = 0x555555556663
	#jne    0x555555556638 <_gf256v_madd_u64+104>   #! PC = 0x555555556666
	add    -0x48(%rbp),%r12                         #! EA = L0x7fffffffd848; Value = 0x0000000000000028; PC = 0x555555556668
	and    $0x7,%r10d                               #! PC = 0x55555555666c
	test   %r10d,%r10d                              #! PC = 0x555555556670
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x555555556673
	lea    -0x40(%rbp),%rsi                         #! PC = 0x555555556679
	xor    %eax,%eax                                #! PC = 0x55555555667d
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc78c; Value = 0x0558365f073ca981; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd850; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc78d; Value = 0xa10558365f073ca9; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd851; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc78e; Value = 0xfda10558365f073c; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd852; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    %eax,%edx                                #! PC = 0x55555555667f
	add    $0x1,%eax                                #! PC = 0x555555556681
	movzbl (%r11,%rdx,1),%ecx                       #! EA = L0x7ffff78bc78f; Value = 0x2dfda10558365f07; PC = 0x555555556684
	mov    %cl,(%rsi,%rdx,1)                        #! EA = L0x7fffffffd853; PC = 0x555555556689
	cmp    %r10d,%eax                               #! PC = 0x55555555668c
	#jb     0x55555555667f <_gf256v_madd_u64+175>   #! PC = 0x55555555668f
	mov    -0x40(%rbp),%rdi                         #! EA = L0x7fffffffd850; Value = 0x81b1295c073ca981; PC = 0x555555556691
	movzbl %r14b,%esi                               #! PC = 0x555555556695
	#call   0x555555555b30 <gf256v_mul_u64>         #! PC = 0x555555556699
	#! -> SP = 0x7fffffffd838
	movzbl %sil,%eax                                #! PC = 0x555555555b30
	and    $0x1,%esi                                #! PC = 0x555555555b34
	mov    %rdi,%rdx                                #! PC = 0x555555555b37
	movabs $0x101010101010101,%r8                   #! PC = 0x555555555b3a
	imul   %rdi,%rsi                                #! PC = 0x555555555b44
	add    %rdx,%rdx                                #! PC = 0x555555555b48
	movabs $0xfefefefefefefefe,%r9                  #! PC = 0x555555555b4b
	and    %r9,%rdx                                 #! PC = 0x555555555b55
	mov    %rsi,%rcx                                #! PC = 0x555555555b58
	mov    %rdi,%rsi                                #! PC = 0x555555555b5b
	shr    $0x7,%rsi                                #! PC = 0x555555555b5e
	and    %r8,%rsi                                 #! PC = 0x555555555b62
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x555555555b65
	lea    (%rsi,%rsi,8),%rdi                       #! PC = 0x555555555b69
	mov    %rax,%rsi                                #! PC = 0x555555555b6d
	shr    %rsi                                     #! PC = 0x555555555b70
	xor    %rdx,%rdi                                #! PC = 0x555555555b73
	and    $0x1,%esi                                #! PC = 0x555555555b76
	lea    (%rdi,%rdi,1),%rdx                       #! PC = 0x555555555b79
	imul   %rdi,%rsi                                #! PC = 0x555555555b7d
	shr    $0x7,%rdi                                #! PC = 0x555555555b81
	and    %r9,%rdx                                 #! PC = 0x555555555b85
	and    %r8,%rdi                                 #! PC = 0x555555555b88
	xor    %rcx,%rsi                                #! PC = 0x555555555b8b
	lea    (%rdi,%rdi,2),%rcx                       #! PC = 0x555555555b8e
	mov    %rax,%rdi                                #! PC = 0x555555555b92
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555b95
	shr    $0x2,%rdi                                #! PC = 0x555555555b99
	xor    %rcx,%rdx                                #! PC = 0x555555555b9d
	and    $0x1,%edi                                #! PC = 0x555555555ba0
	imul   %rdx,%rdi                                #! PC = 0x555555555ba3
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555ba7
	shr    $0x7,%rdx                                #! PC = 0x555555555bab
	and    %r8,%rdx                                 #! PC = 0x555555555baf
	and    %r9,%rcx                                 #! PC = 0x555555555bb2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555bb5
	xor    %rsi,%rdi                                #! PC = 0x555555555bb9
	mov    %rax,%rsi                                #! PC = 0x555555555bbc
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555bbf
	shr    $0x3,%rsi                                #! PC = 0x555555555bc3
	xor    %rdx,%rcx                                #! PC = 0x555555555bc7
	and    $0x1,%esi                                #! PC = 0x555555555bca
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555bcd
	imul   %rcx,%rsi                                #! PC = 0x555555555bd1
	shr    $0x7,%rcx                                #! PC = 0x555555555bd5
	and    %r9,%rdx                                 #! PC = 0x555555555bd9
	and    %r8,%rcx                                 #! PC = 0x555555555bdc
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555bdf
	xor    %rdi,%rsi                                #! PC = 0x555555555be3
	mov    %rax,%rdi                                #! PC = 0x555555555be6
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555be9
	shr    $0x4,%rdi                                #! PC = 0x555555555bed
	xor    %rcx,%rdx                                #! PC = 0x555555555bf1
	and    $0x1,%edi                                #! PC = 0x555555555bf4
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x555555555bf7
	imul   %rdx,%rdi                                #! PC = 0x555555555bfb
	shr    $0x7,%rdx                                #! PC = 0x555555555bff
	and    %r9,%rcx                                 #! PC = 0x555555555c03
	and    %r8,%rdx                                 #! PC = 0x555555555c06
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c09
	xor    %rsi,%rdi                                #! PC = 0x555555555c0d
	mov    %rax,%rsi                                #! PC = 0x555555555c10
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c13
	shr    $0x5,%rsi                                #! PC = 0x555555555c17
	xor    %rdx,%rcx                                #! PC = 0x555555555c1b
	and    $0x1,%esi                                #! PC = 0x555555555c1e
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x555555555c21
	imul   %rcx,%rsi                                #! PC = 0x555555555c25
	shr    $0x7,%rcx                                #! PC = 0x555555555c29
	and    %r9,%rdx                                 #! PC = 0x555555555c2d
	and    %r8,%rcx                                 #! PC = 0x555555555c30
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x555555555c33
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x555555555c37
	xor    %rdi,%rsi                                #! PC = 0x555555555c3b
	xor    %rcx,%rdx                                #! PC = 0x555555555c3e
	mov    %rax,%rcx                                #! PC = 0x555555555c41
	shr    $0x7,%rax                                #! PC = 0x555555555c44
	shr    $0x6,%rcx                                #! PC = 0x555555555c48
	and    $0x1,%ecx                                #! PC = 0x555555555c4c
	imul   %rdx,%rcx                                #! PC = 0x555555555c4f
	xor    %rsi,%rcx                                #! PC = 0x555555555c53
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x555555555c56
	shr    $0x7,%rdx                                #! PC = 0x555555555c5a
	and    %r8,%rdx                                 #! PC = 0x555555555c5e
	and    %r9,%rsi                                 #! PC = 0x555555555c61
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x555555555c64
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x555555555c68
	xor    %rsi,%rdx                                #! PC = 0x555555555c6c
	imul   %rdx,%rax                                #! PC = 0x555555555c6f
	xor    %rcx,%rax                                #! PC = 0x555555555c73
	#! <- SP = 0x7fffffffd838
	#ret                                            #! PC = 0x555555555c76
	xor    %al,(%r12)                               #! EA = L0x7fffffffd968; PC = 0x55555555669e
	mov    %rax,-0x40(%rbp)                         #! EA = L0x7fffffffd850; PC = 0x5555555566a2
	cmp    $0x1,%r10d                               #! PC = 0x5555555566a6
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566aa
	movzbl -0x3f(%rbp),%eax                         #! EA = L0x7fffffffd851; Value = 0x002ebbc94aec7b7c; PC = 0x5555555566ac
	xor    %al,0x1(%r12)                            #! EA = L0x7fffffffd969; PC = 0x5555555566b0
	cmp    $0x2,%r10d                               #! PC = 0x5555555566b5
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566b9
	movzbl -0x3e(%rbp),%eax                         #! EA = L0x7fffffffd852; Value = 0x25002ebbc94aec7b; PC = 0x5555555566bb
	xor    %al,0x2(%r12)                            #! EA = L0x7fffffffd96a; PC = 0x5555555566bf
	cmp    $0x3,%r10d                               #! PC = 0x5555555566c4
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566c8
	movzbl -0x3d(%rbp),%eax                         #! EA = L0x7fffffffd853; Value = 0x6b25002ebbc94aec; PC = 0x5555555566ca
	xor    %al,0x3(%r12)                            #! EA = L0x7fffffffd96b; PC = 0x5555555566ce
	cmp    $0x4,%r10d                               #! PC = 0x5555555566d3
	#je     0x555555556700 <_gf256v_madd_u64+304>   #! PC = 0x5555555566d7
	mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffd858; Value = 0xcd284c24af6b2500; PC = 0x555555556700
	sub    %fs:0x28,%rax                            #! PC = 0x555555556704
	#jne    0x555555556757 <_gf256v_madd_u64+391>   #! PC = 0x55555555670d
	add    $0x28,%rsp                               #! PC = 0x55555555670f
	pop    %rbx                                     #! EA = L0x7fffffffd868; Value = 0x00007ffff78bb074; PC = 0x555555556713
	pop    %r12                                     #! EA = L0x7fffffffd870; Value = 0x000000000000002c; PC = 0x555555556714
	pop    %r13                                     #! EA = L0x7fffffffd878; Value = 0x00007fffffffd940; PC = 0x555555556716
	pop    %r14                                     #! EA = L0x7fffffffd880; Value = 0x00007ffff78bc764; PC = 0x555555556718
	pop    %r15                                     #! EA = L0x7fffffffd888; Value = 0x00007ffff78bb074; PC = 0x55555555671a
	pop    %rbp                                     #! EA = L0x7fffffffd890; Value = 0x00007fffffffd8e0; PC = 0x55555555671c
	#! <- SP = 0x7fffffffd898
	#ret                                            #! PC = 0x55555555671d
	add    -0x38(%rbp),%r14                         #! EA = L0x7fffffffd8a8; Value = 0x000000000000002c; PC = 0x555555556b05
	cmp    %rbx,%r15                                #! PC = 0x555555556b09
	#jne    0x555555556af0 <gf256mat_prod_ref+64>   #! PC = 0x555555556b0c
	add    $0x18,%rsp                               #! PC = 0x555555556b0e
	pop    %rbx                                     #! EA = L0x7fffffffd8b8; Value = 0x00007ffff78d4f18; PC = 0x555555556b12
	pop    %r12                                     #! EA = L0x7fffffffd8c0; Value = 0x000000000000002c; PC = 0x555555556b13
	pop    %r13                                     #! EA = L0x7fffffffd8c8; Value = 0x00007fffffffd940; PC = 0x555555556b15
	pop    %r14                                     #! EA = L0x7fffffffd8d0; Value = 0x0000000000000000; PC = 0x555555556b17
	pop    %r15                                     #! EA = L0x7fffffffd8d8; Value = 0x0000000000000001; PC = 0x555555556b19
	pop    %rbp                                     #! EA = L0x7fffffffd8e0; Value = 0x00007fffffffd9e0; PC = 0x555555556b1b
	#! <- SP = 0x7fffffffd8e8
	#ret                                            #! PC = 0x555555556b1c
