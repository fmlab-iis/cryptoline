#! %sil = %rsi
#! %esi = %rsi
#! %eax = %rax
#! %edx = %rdx
#! %ecx = %rcx
#! %rax = %%rax
#! %rcx = %%rcx
#! %rdi = %%rdi
#! %rdx = %%rdx
#! %rsi = %%rsi
#! %r$1cd = %r$1c
#! %r$1c = %%r$1c

#! add $1v, $1v -> mov [l00,l01,l02,l03,l04,l05,l06,l07,l08,l09,l0a,l0b,l0c,l0d,l0e,l0f,\n     l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l1a,l1b,l1c,l1d,l1e,l1f,\n     l20,l21,l22,l23,l24,l25,l26,l27,l28,l29,l2a,l2b,l2c,l2d,l2e,l2f,\n     l30,l31,l32,l33,l34,l35,l36,l37,l38,l39,l3a,l3b,l3c,l3d,l3e,l3f] %$1v;\nmov %$1v [0@bit,l00,l01,l02,l03,l04,l05,l06,l07,l08,l09,l0a,l0b,l0c,l0d,l0e,l0f,\n          l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l1a,l1b,l1c,l1d,l1e,l1f,\n          l20,l21,l22,l23,l24,l25,l26,l27,l28,l29,l2a,l2b,l2c,l2d,l2e,l2f,\n          l30,l31,l32,l33,l34,l35,l36,l37,l38,l39,l3a,l3b,l3c,l3d,l3e]
#! and $1v, $2v -> mul %$2v %$2v %$1v
#! and \$0x1, $1v -> mov [t00,t01,t02,t03,t04,t05,t06,t07,t08,t09,t0a,t0b,t0c,t0d,t0e,t0f,\n     t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t1a,t1b,t1c,t1d,t1e,t1f,\n     t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t2a,t2b,t2c,t2d,t2e,t2f,\n     t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t3a,t3b,t3c,t3d,t3e,t3f] %$1v;\nmov %$1v [t00, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit,\n          0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit,\n          0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit,\n          0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit,\n          0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit,\n          0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit,\n          0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit,\n          0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit, 0@bit]
#! imul $1v, $2v -> mov [i00,i01,i02,i03,i04,i05,i06,i07,i08,i09,i0a,i0b,i0c,i0d,i0e,i0f,\n     i10,i11,i12,i13,i14,i15,i16,i17,i18,i19,i1a,i1b,i1c,i1d,i1e,i1f,\n     i20,i21,i22,i23,i24,i25,i26,i27,i28,i29,i2a,i2b,i2c,i2d,i2e,i2f,\n     i30,i31,i32,i33,i34,i35,i36,i37,i38,i39,i3a,i3b,i3c,i3d,i3e,i3f] %$2v;\nassert and [i01=0,i02=0,i03=0,i04=0,i05=0,i06=0,i07=0,\n            i08=0,i09=0,i0a=0,i0b=0,i0c=0,i0d=0,i0e=0,i0f=0,\n            i10=0,i11=0,i12=0,i13=0,i14=0,i15=0,i16=0,i17=0,\n            i18=0,i19=0,i1a=0,i1b=0,i1c=0,i1d=0,i1e=0,i1f=0,\n            i20=0,i21=0,i22=0,i23=0,i24=0,i25=0,i26=0,i27=0,\n            i28=0,i29=0,i2a=0,i2b=0,i2c=0,i2d=0,i2e=0,i2f=0,\n            i30=0,i31=0,i32=0,i33=0,i34=0,i35=0,i36=0,i37=0,\n            i38=0,i39=0,i3a=0,i3b=0,i3c=0,i3d=0,i3e=0,i3f=0] && true;\nmov %imul [i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,\n           i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,\n           i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,\n           i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00,i00];\nmul %$2v %$1v %imul
#! lea \($1v, $1v, 2\), $2v -> (* lea ($1v, $1v, 2), $2v) *)\nnop
#! lea \($1v, $1v, 8\), $2v -> mov [l00,l01,l02,l03,l04,l05,l06,l07,l08,l09,l0a,l0b,l0c,l0d,l0e,l0f,\n     l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l1a,l1b,l1c,l1d,l1e,l1f,\n     l20,l21,l22,l23,l24,l25,l26,l27,l28,l29,l2a,l2b,l2c,l2d,l2e,l2f,\n     l30,l31,l32,l33,l34,l35,l36,l37,l38,l39,l3a,l3b,l3c,l3d,l3e,l3f] %$1v;\nassert and [l01=0,l02=0,l03=0,l04=0,l05=0,l06=0,l07=0,\n            l09=0,l0a=0,l0b=0,l0c=0,l0d=0,l0e=0,l0f=0,\n            l11=0,l12=0,l13=0,l14=0,l15=0,l16=0,l17=0,\n            l19=0,l1a=0,l1b=0,l1c=0,l1d=0,l1e=0,l1f=0,\n            l21=0,l22=0,l23=0,l24=0,l25=0,l26=0,l27=0,\n            l29=0,l2a=0,l2b=0,l2c=0,l2d=0,l2e=0,l2f=0,\n            l31=0,l32=0,l33=0,l34=0,l35=0,l36=0,l37=0,\n            l39=0,l3a=0,l3b=0,l3c=0,l3d=0,l3e=0,l3f=0] && true;\nmov %$2v [l00, l00, 0@bit, l00, l00, 0@bit, 0@bit, 0@bit,\n          l08, l08, 0@bit, l08, l08, 0@bit, 0@bit, 0@bit,\n          l10, l10, 0@bit, l10, l10, 0@bit, 0@bit, 0@bit,\n          l18, l18, 0@bit, l18, l18, 0@bit, 0@bit, 0@bit,\n          l20, l20, 0@bit, l20, l20, 0@bit, 0@bit, 0@bit,\n          l28, l28, 0@bit, l28, l28, 0@bit, 0@bit, 0@bit,\n          l30, l30, 0@bit, l30, l30, 0@bit, 0@bit, 0@bit,\n          l38, l38, 0@bit, l38, l38, 0@bit, 0@bit, 0@bit]
#! lea \($1v, $1v, 1\), $2v -> mov [l00,l01,l02,l03,l04,l05,l06,l07,l08,l09,l0a,l0b,l0c,l0d,l0e,l0f,\n     l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l1a,l1b,l1c,l1d,l1e,l1f,\n     l20,l21,l22,l23,l24,l25,l26,l27,l28,l29,l2a,l2b,l2c,l2d,l2e,l2f,\n     l30,l31,l32,l33,l34,l35,l36,l37,l38,l39,l3a,l3b,l3c,l3d,l3e,l3f] %$1v;\nmov %$2v [0@bit, l00,l01,l02,l03,l04,l05,l06,l07,l08,l09,l0a,l0b,l0c,l0d,l0e,l0f,\n     l10,l11,l12,l13,l14,l15,l16,l17,l18,l19,l1a,l1b,l1c,l1d,l1e,l1f,\n     l20,l21,l22,l23,l24,l25,l26,l27,l28,l29,l2a,l2b,l2c,l2d,l2e,l2f,\n     l30,l31,l32,l33,l34,l35,l36,l37,l38,l39,l3a,l3b,l3c,l3d,l3e]
#! mov $1v, $2v -> mov %$2v %$1v
#! movabs  \$0x101010101010101, $1v -> mov %$1v [1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,\n          1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,\n          1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,\n          1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,\n          1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,\n          1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,\n          1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,\n          1@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit]
#! movabs \$0xfefefefefefefefe, $1v -> mov %$1v [0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,\n          0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,\n          0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,\n          0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,\n          0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,\n          0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,\n          0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,\n          0@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit,1@bit]
#! movzbl $1v, $2v -> mov %$2v %$1v
#! shr $1v -> mov [s00,s01,s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n     s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n     s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n     s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f] %$1v;\nmov %$1v [s01,s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n          s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n          s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n          s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f,\n          0@bit]
#! shr \$0x2, $1v -> mov [s00,s01,s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n     s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n     s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n     s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f] %$1v;\nmov %$1v [s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n          s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n          s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n          s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f,\n          0@bit,0@bit]
#! shr \$0x3, $1v -> mov [s00,s01,s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n     s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n     s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n     s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f] %$1v;\nmov %$1v [s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n          s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n          s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n          s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f,\n          0@bit,0@bit,0@bit]
#! shr \$0x4, $1v -> mov [s00,s01,s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n     s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n     s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n     s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f] %$1v;\nmov %$1v [s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n          s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n          s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n          s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f,\n          0@bit,0@bit,0@bit,0@bit]
#! shr \$0x5, $1v -> mov [s00,s01,s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n     s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n     s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n     s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f] %$1v;\nmov %$1v [s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n          s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n          s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n          s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f,\n          0@bit,0@bit,0@bit,0@bit,0@bit]
#! shr \$0x6, $1v -> mov [s00,s01,s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n     s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n     s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n     s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f] %$1v;\nmov %$1v [s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n          s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n          s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n          s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f,\n          0@bit,0@bit,0@bit,0@bit,0@bit,0@bit]
#! shr \$0x7, $1v -> mov [s00,s01,s02,s03,s04,s05,s06,s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n     s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n     s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n     s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f] %$1v;\nmov %$1v [s07,s08,s09,s0a,s0b,s0c,s0d,s0e,s0f,\n          s10,s11,s12,s13,s14,s15,s16,s17,s18,s19,s1a,s1b,s1c,s1d,s1e,s1f,\n          s20,s21,s22,s23,s24,s25,s26,s27,s28,s29,s2a,s2b,s2c,s2d,s2e,s2f,\n          s30,s31,s32,s33,s34,s35,s36,s37,s38,s39,s3a,s3b,s3c,s3d,s3e,s3f,\n          0@bit,0@bit,0@bit,0@bit,0@bit,0@bit,0@bit]
#! xor $1v, $2v -> adds %dc %$2v %$2v %$1v

#gf256v_mul_u64:
# %rdi = 0x28726c8ba1bd4fe0
# %rsi = 0xe0
# %rdx = 0x0
# %rcx = 0x44
# %r8  = 0xe0
# %r9  = 0x7fffffffc190
	#! -> SP = 0x7fffffffc0e8
	movzbl %sil,%eax                                #! PC = 0x55555555c430
	mov    %rdi,%rdx                                #! PC = 0x55555555c434
	and    $0x1,%esi                                #! PC = 0x55555555c437
	mov    %rdi,%rcx                                #! PC = 0x55555555c43a
	imul   %rdi,%rsi                                #! PC = 0x55555555c43d
	shr    $0x7,%rdx                                #! PC = 0x55555555c441
	add    %rcx,%rcx                                #! PC = 0x55555555c445
	mov    %rax,%r10                                #! PC = 0x55555555c448
	movabs $0x101010101010101,%rdi                  #! PC = 0x55555555c44b
	shr    %r10                                     #! PC = 0x55555555c455
	mov    %rax,%r9                                 #! PC = 0x55555555c458
	movabs $0xfefefefefefefefe,%r8                  #! PC = 0x55555555c45b
	and    %rdi,%rdx                                #! PC = 0x55555555c465
	and    %r8,%rcx                                 #! PC = 0x55555555c468
	and    $0x1,%r10d                               #! PC = 0x55555555c46b
	shr    $0x2,%r9                                 #! PC = 0x55555555c46f
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x55555555c473
	and    $0x1,%r9d                                #! PC = 0x55555555c477
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x55555555c47b
	xor    %rcx,%rdx                                #! PC = 0x55555555c47f
	imul   %rdx,%r10                                #! PC = 0x55555555c482
	lea    (%rdx,%rdx,1),%rcx                       #! PC = 0x55555555c486
	shr    $0x7,%rdx                                #! PC = 0x55555555c48a
	and    %rdi,%rdx                                #! PC = 0x55555555c48e
	and    %r8,%rcx                                 #! PC = 0x55555555c491
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x55555555c494
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x55555555c498
	mov    %r10,%r11                                #! PC = 0x55555555c49c
	xor    %rdx,%rcx                                #! PC = 0x55555555c49f
	xor    %rsi,%r11                                #! PC = 0x55555555c4a2
	imul   %rcx,%r9                                 #! PC = 0x55555555c4a5
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x55555555c4a9
	shr    $0x7,%rcx                                #! PC = 0x55555555c4ad
	and    %rdi,%rcx                                #! PC = 0x55555555c4b1
	and    %r8,%rdx                                 #! PC = 0x55555555c4b4
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x55555555c4b7
	mov    %r9,%r10                                 #! PC = 0x55555555c4bb
	mov    %rax,%r9                                 #! PC = 0x55555555c4be
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x55555555c4c1
	shr    $0x3,%r9                                 #! PC = 0x55555555c4c5
	xor    %rcx,%rdx                                #! PC = 0x55555555c4c9
	xor    %r11,%r10                                #! PC = 0x55555555c4cc
	and    $0x1,%r9d                                #! PC = 0x55555555c4cf
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x55555555c4d3
	imul   %rdx,%r9                                 #! PC = 0x55555555c4d7
	shr    $0x7,%rdx                                #! PC = 0x55555555c4db
	and    %r8,%rsi                                 #! PC = 0x55555555c4df
	and    %rdi,%rdx                                #! PC = 0x55555555c4e2
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x55555555c4e5
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x55555555c4e9
	xor    %r10,%r9                                 #! PC = 0x55555555c4ed
	xor    %rdx,%rsi                                #! PC = 0x55555555c4f0
	mov    %rax,%rdx                                #! PC = 0x55555555c4f3
	shr    $0x4,%rdx                                #! PC = 0x55555555c4f6
	lea    (%rsi,%rsi,1),%rcx                       #! PC = 0x55555555c4fa
	and    $0x1,%edx                                #! PC = 0x55555555c4fe
	and    %r8,%rcx                                 #! PC = 0x55555555c501
	imul   %rsi,%rdx                                #! PC = 0x55555555c504
	shr    $0x7,%rsi                                #! PC = 0x55555555c508
	and    %rdi,%rsi                                #! PC = 0x55555555c50c
	lea    (%rsi,%rsi,2),%rsi                       #! PC = 0x55555555c50f
	lea    (%rsi,%rsi,8),%rsi                       #! PC = 0x55555555c513
	xor    %r9,%rdx                                 #! PC = 0x55555555c517
	xor    %rsi,%rcx                                #! PC = 0x55555555c51a
	mov    %rax,%rsi                                #! PC = 0x55555555c51d
	shr    $0x5,%rsi                                #! PC = 0x55555555c520
	and    $0x1,%esi                                #! PC = 0x55555555c524
	imul   %rcx,%rsi                                #! PC = 0x55555555c527
	xor    %rdx,%rsi                                #! PC = 0x55555555c52b
	lea    (%rcx,%rcx,1),%rdx                       #! PC = 0x55555555c52e
	shr    $0x7,%rcx                                #! PC = 0x55555555c532
	and    %rdi,%rcx                                #! PC = 0x55555555c536
	and    %r8,%rdx                                 #! PC = 0x55555555c539
	lea    (%rcx,%rcx,2),%rcx                       #! PC = 0x55555555c53c
	lea    (%rcx,%rcx,8),%rcx                       #! PC = 0x55555555c540
	xor    %rcx,%rdx                                #! PC = 0x55555555c544
	mov    %rax,%rcx                                #! PC = 0x55555555c547
	shr    $0x7,%rax                                #! PC = 0x55555555c54a
	shr    $0x6,%rcx                                #! PC = 0x55555555c54e
	and    $0x1,%ecx                                #! PC = 0x55555555c552
	imul   %rdx,%rcx                                #! PC = 0x55555555c555
	xor    %rsi,%rcx                                #! PC = 0x55555555c559
	lea    (%rdx,%rdx,1),%rsi                       #! PC = 0x55555555c55c
	shr    $0x7,%rdx                                #! PC = 0x55555555c560
	and    %rdi,%rdx                                #! PC = 0x55555555c564
	and    %rsi,%r8                                 #! PC = 0x55555555c567
	lea    (%rdx,%rdx,2),%rdx                       #! PC = 0x55555555c56a
	lea    (%rdx,%rdx,8),%rdx                       #! PC = 0x55555555c56e
	xor    %rdx,%r8                                 #! PC = 0x55555555c572
	imul   %r8,%rax                                 #! PC = 0x55555555c575
	xor    %rcx,%rax                                #! PC = 0x55555555c579
	#! <- SP = 0x7fffffffc0e8
	#retq                                           #! PC = 0x55555555c57c
