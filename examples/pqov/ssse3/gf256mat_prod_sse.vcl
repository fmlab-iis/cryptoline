(* popper: cv_cec.exe -v -jobs 72 -ov c00#c01#c02#c03#c04#c05#c06#c07#c08#c09#c0a#c0b#c0c#c0d#c0e#c0f#c10#c11#c12#c13#c14#c15#c16#c17#c18#c19#c1a#c1b#c1c#c1d#c1e#c1f#c20#c21#c22#c23#c24#c25#c26#c27#c28#c29#c2a#c2b#c2c#c2d#c2e#c2f#c30#c31#c32#c33#c34#c35#c36#c37#c38#c39#c3a#c3b#c3c#c3d#c3e#c3f#c40#c41#c42#c43 gf256_prod.vcl gf256mat_prod_sse.vcl
Parsing CryptoLine file:                [OK]            0.603370 seconds
Checking well-formedness:               [OK]            0.509933 seconds
Parsing CryptoLine file:                [OK]            4.924434 seconds
Checking well-formedness:               [OK]            0.355972 seconds
Equivalence of output group #58:        [OK]            99.079808 seconds
Equivalence of output group #57:        [OK]            110.106911 seconds
Equivalence of output group #56:        [OK]            121.210856 seconds
Equivalence of output group #55:        [OK]            132.173047 seconds
Equivalence of output group #54:        [OK]            143.890201 seconds
Equivalence of output group #53:        [OK]            156.540277 seconds
Equivalence of output group #52:        [OK]            169.736242 seconds
Equivalence of output group #51:        [OK]            182.581815 seconds
Equivalence of output group #50:        [OK]            195.202699 seconds
Equivalence of output group #49:        [OK]            208.350258 seconds
Equivalence of output group #48:        [OK]            220.137798 seconds
Equivalence of output group #47:        [OK]            232.092030 seconds
Equivalence of output group #46:        [OK]            244.321132 seconds
Equivalence of output group #45:        [OK]            256.624037 seconds
Equivalence of output group #44:        [OK]            269.391846 seconds
Equivalence of output group #43:        [OK]            281.851099 seconds
Equivalence of output group #42:        [OK]            293.739526 seconds
Equivalence of output group #41:        [OK]            305.693353 seconds
Equivalence of output group #40:        [OK]            317.742818 seconds
Equivalence of output group #39:        [OK]            329.882825 seconds
Equivalence of output group #38:        [OK]            342.051836 seconds
Equivalence of output group #37:        [OK]            354.050732 seconds
Equivalence of output group #36:        [OK]            365.998970 seconds
Equivalence of output group #35:        [OK]            378.167204 seconds
Equivalence of output group #34:        [OK]            390.136268 seconds
Equivalence of output group #33:        [OK]            403.099501 seconds
Equivalence of output group #32:        [OK]            415.057014 seconds
Equivalence of output group #31:        [OK]            427.229298 seconds
Equivalence of output group #30:        [OK]            439.095326 seconds
Equivalence of output group #29:        [OK]            451.302020 seconds
Equivalence of output group #28:        [OK]            463.077136 seconds
Equivalence of output group #27:        [OK]            474.718509 seconds
Equivalence of output group #26:        [OK]            487.663233 seconds
Equivalence of output group #25:        [OK]            499.104338 seconds
Equivalence of output group #24:        [OK]            510.937015 seconds
Equivalence of output group #23:        [OK]            522.583332 seconds
Equivalence of output group #22:        [OK]            534.359783 seconds
Equivalence of output group #21:        [OK]            545.914084 seconds
Equivalence of output group #20:        [OK]            557.603663 seconds
Equivalence of output group #19:        [OK]            569.704500 seconds
Equivalence of output group #18:        [OK]            581.619582 seconds
Equivalence of output group #17:        [OK]            593.421266 seconds
Equivalence of output group #16:        [OK]            604.714936 seconds
Equivalence of output group #15:        [OK]            616.741828 seconds
Equivalence of output group #14:        [OK]            628.311071 seconds
Equivalence of output group #13:        [OK]            640.059573 seconds
Equivalence of output group #12:        [OK]            651.274440 seconds
Equivalence of output group #11:        [OK]            662.712183 seconds
Equivalence of output group #10:        [OK]            673.972544 seconds
Equivalence of output group #9:         [OK]            684.860178 seconds
Equivalence of output group #8:         [OK]            695.762743 seconds
Equivalence of output group #7:         [OK]            707.332603 seconds
Equivalence of output group #6:         [OK]            718.013670 seconds
Equivalence of output group #5:         [OK]            729.021256 seconds
Equivalence of output group #4:         [OK]            739.623627 seconds
Equivalence of output group #3:         [OK]            750.355249 seconds
Equivalence of output group #2:         [OK]            760.990406 seconds
Equivalence of output group #1:         [OK]            771.728977 seconds
Equivalence of output group #0:         [OK]            782.749113 seconds
Equivalence of output group #59:        [OK]            92.257535 seconds
Equivalence of output group #60:        [OK]            92.778756 seconds
Equivalence of output group #61:        [OK]            93.072789 seconds
Equivalence of output group #62:        [OK]            95.281765 seconds
Equivalence of output group #63:        [OK]            92.271876 seconds
Equivalence of output group #64:        [OK]            94.593461 seconds
Equivalence of output group #65:        [OK]            92.894918 seconds
Equivalence of output group #66:        [OK]            92.211694 seconds
Equivalence of output group #67:        [OK]            93.234020 seconds
Final result:                           [OK]            886.882528 seconds
*)

proc sel128 (uint128 src, uint8 idx; uint8 dst) =
{ true && true }
spl idx_7 dontcare idx 7;
cast idx_7@bit idx_7;
spl dontcare idx_0t4 idx 4;
cast idx_0t4@uint128 idx_0t4;
shr tmp src idx_0t4;
shr tmp tmp idx_0t4;
shr tmp tmp idx_0t4;
shr tmp tmp idx_0t4;
shr tmp tmp idx_0t4;
shr tmp tmp idx_0t4;
shr tmp tmp idx_0t4;
shr tmp tmp idx_0t4;
spl dontcare dst tmp 8;
cmov dst idx_7 0@uint8 dst;
{ true && true }

proc vpshufb128 (uint8 src0, uint8 src1, uint8 src2, uint8 src3,
                 uint8 src4, uint8 src5, uint8 src6, uint8 src7,
                 uint8 src8, uint8 src9, uint8 srca, uint8 srcb,
                 uint8 srcc, uint8 srcd, uint8 srce, uint8 srcf,
                 uint8 idx0, uint8 idx1, uint8 idx2, uint8 idx3,
                 uint8 idx4, uint8 idx5, uint8 idx6, uint8 idx7,
                 uint8 idx8, uint8 idx9, uint8 idxa, uint8 idxb,
                 uint8 idxc, uint8 idxd, uint8 idxe, uint8 idxf;
                 uint8 dst0, uint8 dst1, uint8 dst2, uint8 dst3,
                 uint8 dst4, uint8 dst5, uint8 dst6, uint8 dst7,
                 uint8 dst8, uint8 dst9, uint8 dsta, uint8 dstb,
                 uint8 dstc, uint8 dstd, uint8 dste, uint8 dstf) =
{ true && true }
join src128 src1 src0;   join src128 src2 src128; join src128 src3 src128;
join src128 src4 src128; join src128 src5 src128; join src128 src6 src128;
join src128 src7 src128; join src128 src8 src128; join src128 src9 src128;
join src128 srca src128; join src128 srcb src128; join src128 srcc src128;
join src128 srcd src128; join src128 srce src128; join src128 srcf src128;
inline sel128 (src128, idx0, dst0); inline sel128 (src128, idx1, dst1);
inline sel128 (src128, idx2, dst2); inline sel128 (src128, idx3, dst3);
inline sel128 (src128, idx4, dst4); inline sel128 (src128, idx5, dst5);
inline sel128 (src128, idx6, dst6); inline sel128 (src128, idx7, dst7);
inline sel128 (src128, idx8, dst8); inline sel128 (src128, idx9, dst9);
inline sel128 (src128, idxa, dsta); inline sel128 (src128, idxb, dstb);
inline sel128 (src128, idxc, dstc); inline sel128 (src128, idxd, dstd);
inline sel128 (src128, idxe, dste); inline sel128 (src128, idxf, dstf);
{ true && true }

proc main (
uint8 A0000,uint8 A0001,uint8 A0002,uint8 A0003,uint8 A0004,uint8 A0005,
uint8 A0006,uint8 A0007,uint8 A0008,uint8 A0009,uint8 A000a,uint8 A000b,
uint8 A000c,uint8 A000d,uint8 A000e,uint8 A000f,uint8 A0010,uint8 A0011,
uint8 A0012,uint8 A0013,uint8 A0014,uint8 A0015,uint8 A0016,uint8 A0017,
uint8 A0018,uint8 A0019,uint8 A001a,uint8 A001b,uint8 A001c,uint8 A001d,
uint8 A001e,uint8 A001f,uint8 A0020,uint8 A0021,uint8 A0022,uint8 A0023,
uint8 A0024,uint8 A0025,uint8 A0026,uint8 A0027,uint8 A0028,uint8 A0029,
uint8 A002a,uint8 A002b,
uint8 A0100,uint8 A0101,uint8 A0102,uint8 A0103,uint8 A0104,uint8 A0105,
uint8 A0106,uint8 A0107,uint8 A0108,uint8 A0109,uint8 A010a,uint8 A010b,
uint8 A010c,uint8 A010d,uint8 A010e,uint8 A010f,uint8 A0110,uint8 A0111,
uint8 A0112,uint8 A0113,uint8 A0114,uint8 A0115,uint8 A0116,uint8 A0117,
uint8 A0118,uint8 A0119,uint8 A011a,uint8 A011b,uint8 A011c,uint8 A011d,
uint8 A011e,uint8 A011f,uint8 A0120,uint8 A0121,uint8 A0122,uint8 A0123,
uint8 A0124,uint8 A0125,uint8 A0126,uint8 A0127,uint8 A0128,uint8 A0129,
uint8 A012a,uint8 A012b,
uint8 A0200,uint8 A0201,uint8 A0202,uint8 A0203,uint8 A0204,uint8 A0205,
uint8 A0206,uint8 A0207,uint8 A0208,uint8 A0209,uint8 A020a,uint8 A020b,
uint8 A020c,uint8 A020d,uint8 A020e,uint8 A020f,uint8 A0210,uint8 A0211,
uint8 A0212,uint8 A0213,uint8 A0214,uint8 A0215,uint8 A0216,uint8 A0217,
uint8 A0218,uint8 A0219,uint8 A021a,uint8 A021b,uint8 A021c,uint8 A021d,
uint8 A021e,uint8 A021f,uint8 A0220,uint8 A0221,uint8 A0222,uint8 A0223,
uint8 A0224,uint8 A0225,uint8 A0226,uint8 A0227,uint8 A0228,uint8 A0229,
uint8 A022a,uint8 A022b,
uint8 A0300,uint8 A0301,uint8 A0302,uint8 A0303,uint8 A0304,uint8 A0305,
uint8 A0306,uint8 A0307,uint8 A0308,uint8 A0309,uint8 A030a,uint8 A030b,
uint8 A030c,uint8 A030d,uint8 A030e,uint8 A030f,uint8 A0310,uint8 A0311,
uint8 A0312,uint8 A0313,uint8 A0314,uint8 A0315,uint8 A0316,uint8 A0317,
uint8 A0318,uint8 A0319,uint8 A031a,uint8 A031b,uint8 A031c,uint8 A031d,
uint8 A031e,uint8 A031f,uint8 A0320,uint8 A0321,uint8 A0322,uint8 A0323,
uint8 A0324,uint8 A0325,uint8 A0326,uint8 A0327,uint8 A0328,uint8 A0329,
uint8 A032a,uint8 A032b,
uint8 A0400,uint8 A0401,uint8 A0402,uint8 A0403,uint8 A0404,uint8 A0405,
uint8 A0406,uint8 A0407,uint8 A0408,uint8 A0409,uint8 A040a,uint8 A040b,
uint8 A040c,uint8 A040d,uint8 A040e,uint8 A040f,uint8 A0410,uint8 A0411,
uint8 A0412,uint8 A0413,uint8 A0414,uint8 A0415,uint8 A0416,uint8 A0417,
uint8 A0418,uint8 A0419,uint8 A041a,uint8 A041b,uint8 A041c,uint8 A041d,
uint8 A041e,uint8 A041f,uint8 A0420,uint8 A0421,uint8 A0422,uint8 A0423,
uint8 A0424,uint8 A0425,uint8 A0426,uint8 A0427,uint8 A0428,uint8 A0429,
uint8 A042a,uint8 A042b,
uint8 A0500,uint8 A0501,uint8 A0502,uint8 A0503,uint8 A0504,uint8 A0505,
uint8 A0506,uint8 A0507,uint8 A0508,uint8 A0509,uint8 A050a,uint8 A050b,
uint8 A050c,uint8 A050d,uint8 A050e,uint8 A050f,uint8 A0510,uint8 A0511,
uint8 A0512,uint8 A0513,uint8 A0514,uint8 A0515,uint8 A0516,uint8 A0517,
uint8 A0518,uint8 A0519,uint8 A051a,uint8 A051b,uint8 A051c,uint8 A051d,
uint8 A051e,uint8 A051f,uint8 A0520,uint8 A0521,uint8 A0522,uint8 A0523,
uint8 A0524,uint8 A0525,uint8 A0526,uint8 A0527,uint8 A0528,uint8 A0529,
uint8 A052a,uint8 A052b,
uint8 A0600,uint8 A0601,uint8 A0602,uint8 A0603,uint8 A0604,uint8 A0605,
uint8 A0606,uint8 A0607,uint8 A0608,uint8 A0609,uint8 A060a,uint8 A060b,
uint8 A060c,uint8 A060d,uint8 A060e,uint8 A060f,uint8 A0610,uint8 A0611,
uint8 A0612,uint8 A0613,uint8 A0614,uint8 A0615,uint8 A0616,uint8 A0617,
uint8 A0618,uint8 A0619,uint8 A061a,uint8 A061b,uint8 A061c,uint8 A061d,
uint8 A061e,uint8 A061f,uint8 A0620,uint8 A0621,uint8 A0622,uint8 A0623,
uint8 A0624,uint8 A0625,uint8 A0626,uint8 A0627,uint8 A0628,uint8 A0629,
uint8 A062a,uint8 A062b,
uint8 A0700,uint8 A0701,uint8 A0702,uint8 A0703,uint8 A0704,uint8 A0705,
uint8 A0706,uint8 A0707,uint8 A0708,uint8 A0709,uint8 A070a,uint8 A070b,
uint8 A070c,uint8 A070d,uint8 A070e,uint8 A070f,uint8 A0710,uint8 A0711,
uint8 A0712,uint8 A0713,uint8 A0714,uint8 A0715,uint8 A0716,uint8 A0717,
uint8 A0718,uint8 A0719,uint8 A071a,uint8 A071b,uint8 A071c,uint8 A071d,
uint8 A071e,uint8 A071f,uint8 A0720,uint8 A0721,uint8 A0722,uint8 A0723,
uint8 A0724,uint8 A0725,uint8 A0726,uint8 A0727,uint8 A0728,uint8 A0729,
uint8 A072a,uint8 A072b,
uint8 A0800,uint8 A0801,uint8 A0802,uint8 A0803,uint8 A0804,uint8 A0805,
uint8 A0806,uint8 A0807,uint8 A0808,uint8 A0809,uint8 A080a,uint8 A080b,
uint8 A080c,uint8 A080d,uint8 A080e,uint8 A080f,uint8 A0810,uint8 A0811,
uint8 A0812,uint8 A0813,uint8 A0814,uint8 A0815,uint8 A0816,uint8 A0817,
uint8 A0818,uint8 A0819,uint8 A081a,uint8 A081b,uint8 A081c,uint8 A081d,
uint8 A081e,uint8 A081f,uint8 A0820,uint8 A0821,uint8 A0822,uint8 A0823,
uint8 A0824,uint8 A0825,uint8 A0826,uint8 A0827,uint8 A0828,uint8 A0829,
uint8 A082a,uint8 A082b,
uint8 A0900,uint8 A0901,uint8 A0902,uint8 A0903,uint8 A0904,uint8 A0905,
uint8 A0906,uint8 A0907,uint8 A0908,uint8 A0909,uint8 A090a,uint8 A090b,
uint8 A090c,uint8 A090d,uint8 A090e,uint8 A090f,uint8 A0910,uint8 A0911,
uint8 A0912,uint8 A0913,uint8 A0914,uint8 A0915,uint8 A0916,uint8 A0917,
uint8 A0918,uint8 A0919,uint8 A091a,uint8 A091b,uint8 A091c,uint8 A091d,
uint8 A091e,uint8 A091f,uint8 A0920,uint8 A0921,uint8 A0922,uint8 A0923,
uint8 A0924,uint8 A0925,uint8 A0926,uint8 A0927,uint8 A0928,uint8 A0929,
uint8 A092a,uint8 A092b,
uint8 A0a00,uint8 A0a01,uint8 A0a02,uint8 A0a03,uint8 A0a04,uint8 A0a05,
uint8 A0a06,uint8 A0a07,uint8 A0a08,uint8 A0a09,uint8 A0a0a,uint8 A0a0b,
uint8 A0a0c,uint8 A0a0d,uint8 A0a0e,uint8 A0a0f,uint8 A0a10,uint8 A0a11,
uint8 A0a12,uint8 A0a13,uint8 A0a14,uint8 A0a15,uint8 A0a16,uint8 A0a17,
uint8 A0a18,uint8 A0a19,uint8 A0a1a,uint8 A0a1b,uint8 A0a1c,uint8 A0a1d,
uint8 A0a1e,uint8 A0a1f,uint8 A0a20,uint8 A0a21,uint8 A0a22,uint8 A0a23,
uint8 A0a24,uint8 A0a25,uint8 A0a26,uint8 A0a27,uint8 A0a28,uint8 A0a29,
uint8 A0a2a,uint8 A0a2b,
uint8 A0b00,uint8 A0b01,uint8 A0b02,uint8 A0b03,uint8 A0b04,uint8 A0b05,
uint8 A0b06,uint8 A0b07,uint8 A0b08,uint8 A0b09,uint8 A0b0a,uint8 A0b0b,
uint8 A0b0c,uint8 A0b0d,uint8 A0b0e,uint8 A0b0f,uint8 A0b10,uint8 A0b11,
uint8 A0b12,uint8 A0b13,uint8 A0b14,uint8 A0b15,uint8 A0b16,uint8 A0b17,
uint8 A0b18,uint8 A0b19,uint8 A0b1a,uint8 A0b1b,uint8 A0b1c,uint8 A0b1d,
uint8 A0b1e,uint8 A0b1f,uint8 A0b20,uint8 A0b21,uint8 A0b22,uint8 A0b23,
uint8 A0b24,uint8 A0b25,uint8 A0b26,uint8 A0b27,uint8 A0b28,uint8 A0b29,
uint8 A0b2a,uint8 A0b2b,
uint8 A0c00,uint8 A0c01,uint8 A0c02,uint8 A0c03,uint8 A0c04,uint8 A0c05,
uint8 A0c06,uint8 A0c07,uint8 A0c08,uint8 A0c09,uint8 A0c0a,uint8 A0c0b,
uint8 A0c0c,uint8 A0c0d,uint8 A0c0e,uint8 A0c0f,uint8 A0c10,uint8 A0c11,
uint8 A0c12,uint8 A0c13,uint8 A0c14,uint8 A0c15,uint8 A0c16,uint8 A0c17,
uint8 A0c18,uint8 A0c19,uint8 A0c1a,uint8 A0c1b,uint8 A0c1c,uint8 A0c1d,
uint8 A0c1e,uint8 A0c1f,uint8 A0c20,uint8 A0c21,uint8 A0c22,uint8 A0c23,
uint8 A0c24,uint8 A0c25,uint8 A0c26,uint8 A0c27,uint8 A0c28,uint8 A0c29,
uint8 A0c2a,uint8 A0c2b,
uint8 A0d00,uint8 A0d01,uint8 A0d02,uint8 A0d03,uint8 A0d04,uint8 A0d05,
uint8 A0d06,uint8 A0d07,uint8 A0d08,uint8 A0d09,uint8 A0d0a,uint8 A0d0b,
uint8 A0d0c,uint8 A0d0d,uint8 A0d0e,uint8 A0d0f,uint8 A0d10,uint8 A0d11,
uint8 A0d12,uint8 A0d13,uint8 A0d14,uint8 A0d15,uint8 A0d16,uint8 A0d17,
uint8 A0d18,uint8 A0d19,uint8 A0d1a,uint8 A0d1b,uint8 A0d1c,uint8 A0d1d,
uint8 A0d1e,uint8 A0d1f,uint8 A0d20,uint8 A0d21,uint8 A0d22,uint8 A0d23,
uint8 A0d24,uint8 A0d25,uint8 A0d26,uint8 A0d27,uint8 A0d28,uint8 A0d29,
uint8 A0d2a,uint8 A0d2b,
uint8 A0e00,uint8 A0e01,uint8 A0e02,uint8 A0e03,uint8 A0e04,uint8 A0e05,
uint8 A0e06,uint8 A0e07,uint8 A0e08,uint8 A0e09,uint8 A0e0a,uint8 A0e0b,
uint8 A0e0c,uint8 A0e0d,uint8 A0e0e,uint8 A0e0f,uint8 A0e10,uint8 A0e11,
uint8 A0e12,uint8 A0e13,uint8 A0e14,uint8 A0e15,uint8 A0e16,uint8 A0e17,
uint8 A0e18,uint8 A0e19,uint8 A0e1a,uint8 A0e1b,uint8 A0e1c,uint8 A0e1d,
uint8 A0e1e,uint8 A0e1f,uint8 A0e20,uint8 A0e21,uint8 A0e22,uint8 A0e23,
uint8 A0e24,uint8 A0e25,uint8 A0e26,uint8 A0e27,uint8 A0e28,uint8 A0e29,
uint8 A0e2a,uint8 A0e2b,
uint8 A0f00,uint8 A0f01,uint8 A0f02,uint8 A0f03,uint8 A0f04,uint8 A0f05,
uint8 A0f06,uint8 A0f07,uint8 A0f08,uint8 A0f09,uint8 A0f0a,uint8 A0f0b,
uint8 A0f0c,uint8 A0f0d,uint8 A0f0e,uint8 A0f0f,uint8 A0f10,uint8 A0f11,
uint8 A0f12,uint8 A0f13,uint8 A0f14,uint8 A0f15,uint8 A0f16,uint8 A0f17,
uint8 A0f18,uint8 A0f19,uint8 A0f1a,uint8 A0f1b,uint8 A0f1c,uint8 A0f1d,
uint8 A0f1e,uint8 A0f1f,uint8 A0f20,uint8 A0f21,uint8 A0f22,uint8 A0f23,
uint8 A0f24,uint8 A0f25,uint8 A0f26,uint8 A0f27,uint8 A0f28,uint8 A0f29,
uint8 A0f2a,uint8 A0f2b,
uint8 A1000,uint8 A1001,uint8 A1002,uint8 A1003,uint8 A1004,uint8 A1005,
uint8 A1006,uint8 A1007,uint8 A1008,uint8 A1009,uint8 A100a,uint8 A100b,
uint8 A100c,uint8 A100d,uint8 A100e,uint8 A100f,uint8 A1010,uint8 A1011,
uint8 A1012,uint8 A1013,uint8 A1014,uint8 A1015,uint8 A1016,uint8 A1017,
uint8 A1018,uint8 A1019,uint8 A101a,uint8 A101b,uint8 A101c,uint8 A101d,
uint8 A101e,uint8 A101f,uint8 A1020,uint8 A1021,uint8 A1022,uint8 A1023,
uint8 A1024,uint8 A1025,uint8 A1026,uint8 A1027,uint8 A1028,uint8 A1029,
uint8 A102a,uint8 A102b,
uint8 A1100,uint8 A1101,uint8 A1102,uint8 A1103,uint8 A1104,uint8 A1105,
uint8 A1106,uint8 A1107,uint8 A1108,uint8 A1109,uint8 A110a,uint8 A110b,
uint8 A110c,uint8 A110d,uint8 A110e,uint8 A110f,uint8 A1110,uint8 A1111,
uint8 A1112,uint8 A1113,uint8 A1114,uint8 A1115,uint8 A1116,uint8 A1117,
uint8 A1118,uint8 A1119,uint8 A111a,uint8 A111b,uint8 A111c,uint8 A111d,
uint8 A111e,uint8 A111f,uint8 A1120,uint8 A1121,uint8 A1122,uint8 A1123,
uint8 A1124,uint8 A1125,uint8 A1126,uint8 A1127,uint8 A1128,uint8 A1129,
uint8 A112a,uint8 A112b,
uint8 A1200,uint8 A1201,uint8 A1202,uint8 A1203,uint8 A1204,uint8 A1205,
uint8 A1206,uint8 A1207,uint8 A1208,uint8 A1209,uint8 A120a,uint8 A120b,
uint8 A120c,uint8 A120d,uint8 A120e,uint8 A120f,uint8 A1210,uint8 A1211,
uint8 A1212,uint8 A1213,uint8 A1214,uint8 A1215,uint8 A1216,uint8 A1217,
uint8 A1218,uint8 A1219,uint8 A121a,uint8 A121b,uint8 A121c,uint8 A121d,
uint8 A121e,uint8 A121f,uint8 A1220,uint8 A1221,uint8 A1222,uint8 A1223,
uint8 A1224,uint8 A1225,uint8 A1226,uint8 A1227,uint8 A1228,uint8 A1229,
uint8 A122a,uint8 A122b,
uint8 A1300,uint8 A1301,uint8 A1302,uint8 A1303,uint8 A1304,uint8 A1305,
uint8 A1306,uint8 A1307,uint8 A1308,uint8 A1309,uint8 A130a,uint8 A130b,
uint8 A130c,uint8 A130d,uint8 A130e,uint8 A130f,uint8 A1310,uint8 A1311,
uint8 A1312,uint8 A1313,uint8 A1314,uint8 A1315,uint8 A1316,uint8 A1317,
uint8 A1318,uint8 A1319,uint8 A131a,uint8 A131b,uint8 A131c,uint8 A131d,
uint8 A131e,uint8 A131f,uint8 A1320,uint8 A1321,uint8 A1322,uint8 A1323,
uint8 A1324,uint8 A1325,uint8 A1326,uint8 A1327,uint8 A1328,uint8 A1329,
uint8 A132a,uint8 A132b,
uint8 A1400,uint8 A1401,uint8 A1402,uint8 A1403,uint8 A1404,uint8 A1405,
uint8 A1406,uint8 A1407,uint8 A1408,uint8 A1409,uint8 A140a,uint8 A140b,
uint8 A140c,uint8 A140d,uint8 A140e,uint8 A140f,uint8 A1410,uint8 A1411,
uint8 A1412,uint8 A1413,uint8 A1414,uint8 A1415,uint8 A1416,uint8 A1417,
uint8 A1418,uint8 A1419,uint8 A141a,uint8 A141b,uint8 A141c,uint8 A141d,
uint8 A141e,uint8 A141f,uint8 A1420,uint8 A1421,uint8 A1422,uint8 A1423,
uint8 A1424,uint8 A1425,uint8 A1426,uint8 A1427,uint8 A1428,uint8 A1429,
uint8 A142a,uint8 A142b,
uint8 A1500,uint8 A1501,uint8 A1502,uint8 A1503,uint8 A1504,uint8 A1505,
uint8 A1506,uint8 A1507,uint8 A1508,uint8 A1509,uint8 A150a,uint8 A150b,
uint8 A150c,uint8 A150d,uint8 A150e,uint8 A150f,uint8 A1510,uint8 A1511,
uint8 A1512,uint8 A1513,uint8 A1514,uint8 A1515,uint8 A1516,uint8 A1517,
uint8 A1518,uint8 A1519,uint8 A151a,uint8 A151b,uint8 A151c,uint8 A151d,
uint8 A151e,uint8 A151f,uint8 A1520,uint8 A1521,uint8 A1522,uint8 A1523,
uint8 A1524,uint8 A1525,uint8 A1526,uint8 A1527,uint8 A1528,uint8 A1529,
uint8 A152a,uint8 A152b,
uint8 A1600,uint8 A1601,uint8 A1602,uint8 A1603,uint8 A1604,uint8 A1605,
uint8 A1606,uint8 A1607,uint8 A1608,uint8 A1609,uint8 A160a,uint8 A160b,
uint8 A160c,uint8 A160d,uint8 A160e,uint8 A160f,uint8 A1610,uint8 A1611,
uint8 A1612,uint8 A1613,uint8 A1614,uint8 A1615,uint8 A1616,uint8 A1617,
uint8 A1618,uint8 A1619,uint8 A161a,uint8 A161b,uint8 A161c,uint8 A161d,
uint8 A161e,uint8 A161f,uint8 A1620,uint8 A1621,uint8 A1622,uint8 A1623,
uint8 A1624,uint8 A1625,uint8 A1626,uint8 A1627,uint8 A1628,uint8 A1629,
uint8 A162a,uint8 A162b,
uint8 A1700,uint8 A1701,uint8 A1702,uint8 A1703,uint8 A1704,uint8 A1705,
uint8 A1706,uint8 A1707,uint8 A1708,uint8 A1709,uint8 A170a,uint8 A170b,
uint8 A170c,uint8 A170d,uint8 A170e,uint8 A170f,uint8 A1710,uint8 A1711,
uint8 A1712,uint8 A1713,uint8 A1714,uint8 A1715,uint8 A1716,uint8 A1717,
uint8 A1718,uint8 A1719,uint8 A171a,uint8 A171b,uint8 A171c,uint8 A171d,
uint8 A171e,uint8 A171f,uint8 A1720,uint8 A1721,uint8 A1722,uint8 A1723,
uint8 A1724,uint8 A1725,uint8 A1726,uint8 A1727,uint8 A1728,uint8 A1729,
uint8 A172a,uint8 A172b,
uint8 A1800,uint8 A1801,uint8 A1802,uint8 A1803,uint8 A1804,uint8 A1805,
uint8 A1806,uint8 A1807,uint8 A1808,uint8 A1809,uint8 A180a,uint8 A180b,
uint8 A180c,uint8 A180d,uint8 A180e,uint8 A180f,uint8 A1810,uint8 A1811,
uint8 A1812,uint8 A1813,uint8 A1814,uint8 A1815,uint8 A1816,uint8 A1817,
uint8 A1818,uint8 A1819,uint8 A181a,uint8 A181b,uint8 A181c,uint8 A181d,
uint8 A181e,uint8 A181f,uint8 A1820,uint8 A1821,uint8 A1822,uint8 A1823,
uint8 A1824,uint8 A1825,uint8 A1826,uint8 A1827,uint8 A1828,uint8 A1829,
uint8 A182a,uint8 A182b,
uint8 A1900,uint8 A1901,uint8 A1902,uint8 A1903,uint8 A1904,uint8 A1905,
uint8 A1906,uint8 A1907,uint8 A1908,uint8 A1909,uint8 A190a,uint8 A190b,
uint8 A190c,uint8 A190d,uint8 A190e,uint8 A190f,uint8 A1910,uint8 A1911,
uint8 A1912,uint8 A1913,uint8 A1914,uint8 A1915,uint8 A1916,uint8 A1917,
uint8 A1918,uint8 A1919,uint8 A191a,uint8 A191b,uint8 A191c,uint8 A191d,
uint8 A191e,uint8 A191f,uint8 A1920,uint8 A1921,uint8 A1922,uint8 A1923,
uint8 A1924,uint8 A1925,uint8 A1926,uint8 A1927,uint8 A1928,uint8 A1929,
uint8 A192a,uint8 A192b,
uint8 A1a00,uint8 A1a01,uint8 A1a02,uint8 A1a03,uint8 A1a04,uint8 A1a05,
uint8 A1a06,uint8 A1a07,uint8 A1a08,uint8 A1a09,uint8 A1a0a,uint8 A1a0b,
uint8 A1a0c,uint8 A1a0d,uint8 A1a0e,uint8 A1a0f,uint8 A1a10,uint8 A1a11,
uint8 A1a12,uint8 A1a13,uint8 A1a14,uint8 A1a15,uint8 A1a16,uint8 A1a17,
uint8 A1a18,uint8 A1a19,uint8 A1a1a,uint8 A1a1b,uint8 A1a1c,uint8 A1a1d,
uint8 A1a1e,uint8 A1a1f,uint8 A1a20,uint8 A1a21,uint8 A1a22,uint8 A1a23,
uint8 A1a24,uint8 A1a25,uint8 A1a26,uint8 A1a27,uint8 A1a28,uint8 A1a29,
uint8 A1a2a,uint8 A1a2b,
uint8 A1b00,uint8 A1b01,uint8 A1b02,uint8 A1b03,uint8 A1b04,uint8 A1b05,
uint8 A1b06,uint8 A1b07,uint8 A1b08,uint8 A1b09,uint8 A1b0a,uint8 A1b0b,
uint8 A1b0c,uint8 A1b0d,uint8 A1b0e,uint8 A1b0f,uint8 A1b10,uint8 A1b11,
uint8 A1b12,uint8 A1b13,uint8 A1b14,uint8 A1b15,uint8 A1b16,uint8 A1b17,
uint8 A1b18,uint8 A1b19,uint8 A1b1a,uint8 A1b1b,uint8 A1b1c,uint8 A1b1d,
uint8 A1b1e,uint8 A1b1f,uint8 A1b20,uint8 A1b21,uint8 A1b22,uint8 A1b23,
uint8 A1b24,uint8 A1b25,uint8 A1b26,uint8 A1b27,uint8 A1b28,uint8 A1b29,
uint8 A1b2a,uint8 A1b2b,
uint8 A1c00,uint8 A1c01,uint8 A1c02,uint8 A1c03,uint8 A1c04,uint8 A1c05,
uint8 A1c06,uint8 A1c07,uint8 A1c08,uint8 A1c09,uint8 A1c0a,uint8 A1c0b,
uint8 A1c0c,uint8 A1c0d,uint8 A1c0e,uint8 A1c0f,uint8 A1c10,uint8 A1c11,
uint8 A1c12,uint8 A1c13,uint8 A1c14,uint8 A1c15,uint8 A1c16,uint8 A1c17,
uint8 A1c18,uint8 A1c19,uint8 A1c1a,uint8 A1c1b,uint8 A1c1c,uint8 A1c1d,
uint8 A1c1e,uint8 A1c1f,uint8 A1c20,uint8 A1c21,uint8 A1c22,uint8 A1c23,
uint8 A1c24,uint8 A1c25,uint8 A1c26,uint8 A1c27,uint8 A1c28,uint8 A1c29,
uint8 A1c2a,uint8 A1c2b,
uint8 A1d00,uint8 A1d01,uint8 A1d02,uint8 A1d03,uint8 A1d04,uint8 A1d05,
uint8 A1d06,uint8 A1d07,uint8 A1d08,uint8 A1d09,uint8 A1d0a,uint8 A1d0b,
uint8 A1d0c,uint8 A1d0d,uint8 A1d0e,uint8 A1d0f,uint8 A1d10,uint8 A1d11,
uint8 A1d12,uint8 A1d13,uint8 A1d14,uint8 A1d15,uint8 A1d16,uint8 A1d17,
uint8 A1d18,uint8 A1d19,uint8 A1d1a,uint8 A1d1b,uint8 A1d1c,uint8 A1d1d,
uint8 A1d1e,uint8 A1d1f,uint8 A1d20,uint8 A1d21,uint8 A1d22,uint8 A1d23,
uint8 A1d24,uint8 A1d25,uint8 A1d26,uint8 A1d27,uint8 A1d28,uint8 A1d29,
uint8 A1d2a,uint8 A1d2b,
uint8 A1e00,uint8 A1e01,uint8 A1e02,uint8 A1e03,uint8 A1e04,uint8 A1e05,
uint8 A1e06,uint8 A1e07,uint8 A1e08,uint8 A1e09,uint8 A1e0a,uint8 A1e0b,
uint8 A1e0c,uint8 A1e0d,uint8 A1e0e,uint8 A1e0f,uint8 A1e10,uint8 A1e11,
uint8 A1e12,uint8 A1e13,uint8 A1e14,uint8 A1e15,uint8 A1e16,uint8 A1e17,
uint8 A1e18,uint8 A1e19,uint8 A1e1a,uint8 A1e1b,uint8 A1e1c,uint8 A1e1d,
uint8 A1e1e,uint8 A1e1f,uint8 A1e20,uint8 A1e21,uint8 A1e22,uint8 A1e23,
uint8 A1e24,uint8 A1e25,uint8 A1e26,uint8 A1e27,uint8 A1e28,uint8 A1e29,
uint8 A1e2a,uint8 A1e2b,
uint8 A1f00,uint8 A1f01,uint8 A1f02,uint8 A1f03,uint8 A1f04,uint8 A1f05,
uint8 A1f06,uint8 A1f07,uint8 A1f08,uint8 A1f09,uint8 A1f0a,uint8 A1f0b,
uint8 A1f0c,uint8 A1f0d,uint8 A1f0e,uint8 A1f0f,uint8 A1f10,uint8 A1f11,
uint8 A1f12,uint8 A1f13,uint8 A1f14,uint8 A1f15,uint8 A1f16,uint8 A1f17,
uint8 A1f18,uint8 A1f19,uint8 A1f1a,uint8 A1f1b,uint8 A1f1c,uint8 A1f1d,
uint8 A1f1e,uint8 A1f1f,uint8 A1f20,uint8 A1f21,uint8 A1f22,uint8 A1f23,
uint8 A1f24,uint8 A1f25,uint8 A1f26,uint8 A1f27,uint8 A1f28,uint8 A1f29,
uint8 A1f2a,uint8 A1f2b,
uint8 A2000,uint8 A2001,uint8 A2002,uint8 A2003,uint8 A2004,uint8 A2005,
uint8 A2006,uint8 A2007,uint8 A2008,uint8 A2009,uint8 A200a,uint8 A200b,
uint8 A200c,uint8 A200d,uint8 A200e,uint8 A200f,uint8 A2010,uint8 A2011,
uint8 A2012,uint8 A2013,uint8 A2014,uint8 A2015,uint8 A2016,uint8 A2017,
uint8 A2018,uint8 A2019,uint8 A201a,uint8 A201b,uint8 A201c,uint8 A201d,
uint8 A201e,uint8 A201f,uint8 A2020,uint8 A2021,uint8 A2022,uint8 A2023,
uint8 A2024,uint8 A2025,uint8 A2026,uint8 A2027,uint8 A2028,uint8 A2029,
uint8 A202a,uint8 A202b,
uint8 A2100,uint8 A2101,uint8 A2102,uint8 A2103,uint8 A2104,uint8 A2105,
uint8 A2106,uint8 A2107,uint8 A2108,uint8 A2109,uint8 A210a,uint8 A210b,
uint8 A210c,uint8 A210d,uint8 A210e,uint8 A210f,uint8 A2110,uint8 A2111,
uint8 A2112,uint8 A2113,uint8 A2114,uint8 A2115,uint8 A2116,uint8 A2117,
uint8 A2118,uint8 A2119,uint8 A211a,uint8 A211b,uint8 A211c,uint8 A211d,
uint8 A211e,uint8 A211f,uint8 A2120,uint8 A2121,uint8 A2122,uint8 A2123,
uint8 A2124,uint8 A2125,uint8 A2126,uint8 A2127,uint8 A2128,uint8 A2129,
uint8 A212a,uint8 A212b,
uint8 A2200,uint8 A2201,uint8 A2202,uint8 A2203,uint8 A2204,uint8 A2205,
uint8 A2206,uint8 A2207,uint8 A2208,uint8 A2209,uint8 A220a,uint8 A220b,
uint8 A220c,uint8 A220d,uint8 A220e,uint8 A220f,uint8 A2210,uint8 A2211,
uint8 A2212,uint8 A2213,uint8 A2214,uint8 A2215,uint8 A2216,uint8 A2217,
uint8 A2218,uint8 A2219,uint8 A221a,uint8 A221b,uint8 A221c,uint8 A221d,
uint8 A221e,uint8 A221f,uint8 A2220,uint8 A2221,uint8 A2222,uint8 A2223,
uint8 A2224,uint8 A2225,uint8 A2226,uint8 A2227,uint8 A2228,uint8 A2229,
uint8 A222a,uint8 A222b,
uint8 A2300,uint8 A2301,uint8 A2302,uint8 A2303,uint8 A2304,uint8 A2305,
uint8 A2306,uint8 A2307,uint8 A2308,uint8 A2309,uint8 A230a,uint8 A230b,
uint8 A230c,uint8 A230d,uint8 A230e,uint8 A230f,uint8 A2310,uint8 A2311,
uint8 A2312,uint8 A2313,uint8 A2314,uint8 A2315,uint8 A2316,uint8 A2317,
uint8 A2318,uint8 A2319,uint8 A231a,uint8 A231b,uint8 A231c,uint8 A231d,
uint8 A231e,uint8 A231f,uint8 A2320,uint8 A2321,uint8 A2322,uint8 A2323,
uint8 A2324,uint8 A2325,uint8 A2326,uint8 A2327,uint8 A2328,uint8 A2329,
uint8 A232a,uint8 A232b,
uint8 A2400,uint8 A2401,uint8 A2402,uint8 A2403,uint8 A2404,uint8 A2405,
uint8 A2406,uint8 A2407,uint8 A2408,uint8 A2409,uint8 A240a,uint8 A240b,
uint8 A240c,uint8 A240d,uint8 A240e,uint8 A240f,uint8 A2410,uint8 A2411,
uint8 A2412,uint8 A2413,uint8 A2414,uint8 A2415,uint8 A2416,uint8 A2417,
uint8 A2418,uint8 A2419,uint8 A241a,uint8 A241b,uint8 A241c,uint8 A241d,
uint8 A241e,uint8 A241f,uint8 A2420,uint8 A2421,uint8 A2422,uint8 A2423,
uint8 A2424,uint8 A2425,uint8 A2426,uint8 A2427,uint8 A2428,uint8 A2429,
uint8 A242a,uint8 A242b,
uint8 A2500,uint8 A2501,uint8 A2502,uint8 A2503,uint8 A2504,uint8 A2505,
uint8 A2506,uint8 A2507,uint8 A2508,uint8 A2509,uint8 A250a,uint8 A250b,
uint8 A250c,uint8 A250d,uint8 A250e,uint8 A250f,uint8 A2510,uint8 A2511,
uint8 A2512,uint8 A2513,uint8 A2514,uint8 A2515,uint8 A2516,uint8 A2517,
uint8 A2518,uint8 A2519,uint8 A251a,uint8 A251b,uint8 A251c,uint8 A251d,
uint8 A251e,uint8 A251f,uint8 A2520,uint8 A2521,uint8 A2522,uint8 A2523,
uint8 A2524,uint8 A2525,uint8 A2526,uint8 A2527,uint8 A2528,uint8 A2529,
uint8 A252a,uint8 A252b,
uint8 A2600,uint8 A2601,uint8 A2602,uint8 A2603,uint8 A2604,uint8 A2605,
uint8 A2606,uint8 A2607,uint8 A2608,uint8 A2609,uint8 A260a,uint8 A260b,
uint8 A260c,uint8 A260d,uint8 A260e,uint8 A260f,uint8 A2610,uint8 A2611,
uint8 A2612,uint8 A2613,uint8 A2614,uint8 A2615,uint8 A2616,uint8 A2617,
uint8 A2618,uint8 A2619,uint8 A261a,uint8 A261b,uint8 A261c,uint8 A261d,
uint8 A261e,uint8 A261f,uint8 A2620,uint8 A2621,uint8 A2622,uint8 A2623,
uint8 A2624,uint8 A2625,uint8 A2626,uint8 A2627,uint8 A2628,uint8 A2629,
uint8 A262a,uint8 A262b,
uint8 A2700,uint8 A2701,uint8 A2702,uint8 A2703,uint8 A2704,uint8 A2705,
uint8 A2706,uint8 A2707,uint8 A2708,uint8 A2709,uint8 A270a,uint8 A270b,
uint8 A270c,uint8 A270d,uint8 A270e,uint8 A270f,uint8 A2710,uint8 A2711,
uint8 A2712,uint8 A2713,uint8 A2714,uint8 A2715,uint8 A2716,uint8 A2717,
uint8 A2718,uint8 A2719,uint8 A271a,uint8 A271b,uint8 A271c,uint8 A271d,
uint8 A271e,uint8 A271f,uint8 A2720,uint8 A2721,uint8 A2722,uint8 A2723,
uint8 A2724,uint8 A2725,uint8 A2726,uint8 A2727,uint8 A2728,uint8 A2729,
uint8 A272a,uint8 A272b,
uint8 A2800,uint8 A2801,uint8 A2802,uint8 A2803,uint8 A2804,uint8 A2805,
uint8 A2806,uint8 A2807,uint8 A2808,uint8 A2809,uint8 A280a,uint8 A280b,
uint8 A280c,uint8 A280d,uint8 A280e,uint8 A280f,uint8 A2810,uint8 A2811,
uint8 A2812,uint8 A2813,uint8 A2814,uint8 A2815,uint8 A2816,uint8 A2817,
uint8 A2818,uint8 A2819,uint8 A281a,uint8 A281b,uint8 A281c,uint8 A281d,
uint8 A281e,uint8 A281f,uint8 A2820,uint8 A2821,uint8 A2822,uint8 A2823,
uint8 A2824,uint8 A2825,uint8 A2826,uint8 A2827,uint8 A2828,uint8 A2829,
uint8 A282a,uint8 A282b,
uint8 A2900,uint8 A2901,uint8 A2902,uint8 A2903,uint8 A2904,uint8 A2905,
uint8 A2906,uint8 A2907,uint8 A2908,uint8 A2909,uint8 A290a,uint8 A290b,
uint8 A290c,uint8 A290d,uint8 A290e,uint8 A290f,uint8 A2910,uint8 A2911,
uint8 A2912,uint8 A2913,uint8 A2914,uint8 A2915,uint8 A2916,uint8 A2917,
uint8 A2918,uint8 A2919,uint8 A291a,uint8 A291b,uint8 A291c,uint8 A291d,
uint8 A291e,uint8 A291f,uint8 A2920,uint8 A2921,uint8 A2922,uint8 A2923,
uint8 A2924,uint8 A2925,uint8 A2926,uint8 A2927,uint8 A2928,uint8 A2929,
uint8 A292a,uint8 A292b,
uint8 A2a00,uint8 A2a01,uint8 A2a02,uint8 A2a03,uint8 A2a04,uint8 A2a05,
uint8 A2a06,uint8 A2a07,uint8 A2a08,uint8 A2a09,uint8 A2a0a,uint8 A2a0b,
uint8 A2a0c,uint8 A2a0d,uint8 A2a0e,uint8 A2a0f,uint8 A2a10,uint8 A2a11,
uint8 A2a12,uint8 A2a13,uint8 A2a14,uint8 A2a15,uint8 A2a16,uint8 A2a17,
uint8 A2a18,uint8 A2a19,uint8 A2a1a,uint8 A2a1b,uint8 A2a1c,uint8 A2a1d,
uint8 A2a1e,uint8 A2a1f,uint8 A2a20,uint8 A2a21,uint8 A2a22,uint8 A2a23,
uint8 A2a24,uint8 A2a25,uint8 A2a26,uint8 A2a27,uint8 A2a28,uint8 A2a29,
uint8 A2a2a,uint8 A2a2b,
uint8 A2b00,uint8 A2b01,uint8 A2b02,uint8 A2b03,uint8 A2b04,uint8 A2b05,
uint8 A2b06,uint8 A2b07,uint8 A2b08,uint8 A2b09,uint8 A2b0a,uint8 A2b0b,
uint8 A2b0c,uint8 A2b0d,uint8 A2b0e,uint8 A2b0f,uint8 A2b10,uint8 A2b11,
uint8 A2b12,uint8 A2b13,uint8 A2b14,uint8 A2b15,uint8 A2b16,uint8 A2b17,
uint8 A2b18,uint8 A2b19,uint8 A2b1a,uint8 A2b1b,uint8 A2b1c,uint8 A2b1d,
uint8 A2b1e,uint8 A2b1f,uint8 A2b20,uint8 A2b21,uint8 A2b22,uint8 A2b23,
uint8 A2b24,uint8 A2b25,uint8 A2b26,uint8 A2b27,uint8 A2b28,uint8 A2b29,
uint8 A2b2a,uint8 A2b2b,
uint8 A2c00,uint8 A2c01,uint8 A2c02,uint8 A2c03,uint8 A2c04,uint8 A2c05,
uint8 A2c06,uint8 A2c07,uint8 A2c08,uint8 A2c09,uint8 A2c0a,uint8 A2c0b,
uint8 A2c0c,uint8 A2c0d,uint8 A2c0e,uint8 A2c0f,uint8 A2c10,uint8 A2c11,
uint8 A2c12,uint8 A2c13,uint8 A2c14,uint8 A2c15,uint8 A2c16,uint8 A2c17,
uint8 A2c18,uint8 A2c19,uint8 A2c1a,uint8 A2c1b,uint8 A2c1c,uint8 A2c1d,
uint8 A2c1e,uint8 A2c1f,uint8 A2c20,uint8 A2c21,uint8 A2c22,uint8 A2c23,
uint8 A2c24,uint8 A2c25,uint8 A2c26,uint8 A2c27,uint8 A2c28,uint8 A2c29,
uint8 A2c2a,uint8 A2c2b,
uint8 A2d00,uint8 A2d01,uint8 A2d02,uint8 A2d03,uint8 A2d04,uint8 A2d05,
uint8 A2d06,uint8 A2d07,uint8 A2d08,uint8 A2d09,uint8 A2d0a,uint8 A2d0b,
uint8 A2d0c,uint8 A2d0d,uint8 A2d0e,uint8 A2d0f,uint8 A2d10,uint8 A2d11,
uint8 A2d12,uint8 A2d13,uint8 A2d14,uint8 A2d15,uint8 A2d16,uint8 A2d17,
uint8 A2d18,uint8 A2d19,uint8 A2d1a,uint8 A2d1b,uint8 A2d1c,uint8 A2d1d,
uint8 A2d1e,uint8 A2d1f,uint8 A2d20,uint8 A2d21,uint8 A2d22,uint8 A2d23,
uint8 A2d24,uint8 A2d25,uint8 A2d26,uint8 A2d27,uint8 A2d28,uint8 A2d29,
uint8 A2d2a,uint8 A2d2b,
uint8 A2e00,uint8 A2e01,uint8 A2e02,uint8 A2e03,uint8 A2e04,uint8 A2e05,
uint8 A2e06,uint8 A2e07,uint8 A2e08,uint8 A2e09,uint8 A2e0a,uint8 A2e0b,
uint8 A2e0c,uint8 A2e0d,uint8 A2e0e,uint8 A2e0f,uint8 A2e10,uint8 A2e11,
uint8 A2e12,uint8 A2e13,uint8 A2e14,uint8 A2e15,uint8 A2e16,uint8 A2e17,
uint8 A2e18,uint8 A2e19,uint8 A2e1a,uint8 A2e1b,uint8 A2e1c,uint8 A2e1d,
uint8 A2e1e,uint8 A2e1f,uint8 A2e20,uint8 A2e21,uint8 A2e22,uint8 A2e23,
uint8 A2e24,uint8 A2e25,uint8 A2e26,uint8 A2e27,uint8 A2e28,uint8 A2e29,
uint8 A2e2a,uint8 A2e2b,
uint8 A2f00,uint8 A2f01,uint8 A2f02,uint8 A2f03,uint8 A2f04,uint8 A2f05,
uint8 A2f06,uint8 A2f07,uint8 A2f08,uint8 A2f09,uint8 A2f0a,uint8 A2f0b,
uint8 A2f0c,uint8 A2f0d,uint8 A2f0e,uint8 A2f0f,uint8 A2f10,uint8 A2f11,
uint8 A2f12,uint8 A2f13,uint8 A2f14,uint8 A2f15,uint8 A2f16,uint8 A2f17,
uint8 A2f18,uint8 A2f19,uint8 A2f1a,uint8 A2f1b,uint8 A2f1c,uint8 A2f1d,
uint8 A2f1e,uint8 A2f1f,uint8 A2f20,uint8 A2f21,uint8 A2f22,uint8 A2f23,
uint8 A2f24,uint8 A2f25,uint8 A2f26,uint8 A2f27,uint8 A2f28,uint8 A2f29,
uint8 A2f2a,uint8 A2f2b,
uint8 A3000,uint8 A3001,uint8 A3002,uint8 A3003,uint8 A3004,uint8 A3005,
uint8 A3006,uint8 A3007,uint8 A3008,uint8 A3009,uint8 A300a,uint8 A300b,
uint8 A300c,uint8 A300d,uint8 A300e,uint8 A300f,uint8 A3010,uint8 A3011,
uint8 A3012,uint8 A3013,uint8 A3014,uint8 A3015,uint8 A3016,uint8 A3017,
uint8 A3018,uint8 A3019,uint8 A301a,uint8 A301b,uint8 A301c,uint8 A301d,
uint8 A301e,uint8 A301f,uint8 A3020,uint8 A3021,uint8 A3022,uint8 A3023,
uint8 A3024,uint8 A3025,uint8 A3026,uint8 A3027,uint8 A3028,uint8 A3029,
uint8 A302a,uint8 A302b,
uint8 A3100,uint8 A3101,uint8 A3102,uint8 A3103,uint8 A3104,uint8 A3105,
uint8 A3106,uint8 A3107,uint8 A3108,uint8 A3109,uint8 A310a,uint8 A310b,
uint8 A310c,uint8 A310d,uint8 A310e,uint8 A310f,uint8 A3110,uint8 A3111,
uint8 A3112,uint8 A3113,uint8 A3114,uint8 A3115,uint8 A3116,uint8 A3117,
uint8 A3118,uint8 A3119,uint8 A311a,uint8 A311b,uint8 A311c,uint8 A311d,
uint8 A311e,uint8 A311f,uint8 A3120,uint8 A3121,uint8 A3122,uint8 A3123,
uint8 A3124,uint8 A3125,uint8 A3126,uint8 A3127,uint8 A3128,uint8 A3129,
uint8 A312a,uint8 A312b,
uint8 A3200,uint8 A3201,uint8 A3202,uint8 A3203,uint8 A3204,uint8 A3205,
uint8 A3206,uint8 A3207,uint8 A3208,uint8 A3209,uint8 A320a,uint8 A320b,
uint8 A320c,uint8 A320d,uint8 A320e,uint8 A320f,uint8 A3210,uint8 A3211,
uint8 A3212,uint8 A3213,uint8 A3214,uint8 A3215,uint8 A3216,uint8 A3217,
uint8 A3218,uint8 A3219,uint8 A321a,uint8 A321b,uint8 A321c,uint8 A321d,
uint8 A321e,uint8 A321f,uint8 A3220,uint8 A3221,uint8 A3222,uint8 A3223,
uint8 A3224,uint8 A3225,uint8 A3226,uint8 A3227,uint8 A3228,uint8 A3229,
uint8 A322a,uint8 A322b,
uint8 A3300,uint8 A3301,uint8 A3302,uint8 A3303,uint8 A3304,uint8 A3305,
uint8 A3306,uint8 A3307,uint8 A3308,uint8 A3309,uint8 A330a,uint8 A330b,
uint8 A330c,uint8 A330d,uint8 A330e,uint8 A330f,uint8 A3310,uint8 A3311,
uint8 A3312,uint8 A3313,uint8 A3314,uint8 A3315,uint8 A3316,uint8 A3317,
uint8 A3318,uint8 A3319,uint8 A331a,uint8 A331b,uint8 A331c,uint8 A331d,
uint8 A331e,uint8 A331f,uint8 A3320,uint8 A3321,uint8 A3322,uint8 A3323,
uint8 A3324,uint8 A3325,uint8 A3326,uint8 A3327,uint8 A3328,uint8 A3329,
uint8 A332a,uint8 A332b,
uint8 A3400,uint8 A3401,uint8 A3402,uint8 A3403,uint8 A3404,uint8 A3405,
uint8 A3406,uint8 A3407,uint8 A3408,uint8 A3409,uint8 A340a,uint8 A340b,
uint8 A340c,uint8 A340d,uint8 A340e,uint8 A340f,uint8 A3410,uint8 A3411,
uint8 A3412,uint8 A3413,uint8 A3414,uint8 A3415,uint8 A3416,uint8 A3417,
uint8 A3418,uint8 A3419,uint8 A341a,uint8 A341b,uint8 A341c,uint8 A341d,
uint8 A341e,uint8 A341f,uint8 A3420,uint8 A3421,uint8 A3422,uint8 A3423,
uint8 A3424,uint8 A3425,uint8 A3426,uint8 A3427,uint8 A3428,uint8 A3429,
uint8 A342a,uint8 A342b,
uint8 A3500,uint8 A3501,uint8 A3502,uint8 A3503,uint8 A3504,uint8 A3505,
uint8 A3506,uint8 A3507,uint8 A3508,uint8 A3509,uint8 A350a,uint8 A350b,
uint8 A350c,uint8 A350d,uint8 A350e,uint8 A350f,uint8 A3510,uint8 A3511,
uint8 A3512,uint8 A3513,uint8 A3514,uint8 A3515,uint8 A3516,uint8 A3517,
uint8 A3518,uint8 A3519,uint8 A351a,uint8 A351b,uint8 A351c,uint8 A351d,
uint8 A351e,uint8 A351f,uint8 A3520,uint8 A3521,uint8 A3522,uint8 A3523,
uint8 A3524,uint8 A3525,uint8 A3526,uint8 A3527,uint8 A3528,uint8 A3529,
uint8 A352a,uint8 A352b,
uint8 A3600,uint8 A3601,uint8 A3602,uint8 A3603,uint8 A3604,uint8 A3605,
uint8 A3606,uint8 A3607,uint8 A3608,uint8 A3609,uint8 A360a,uint8 A360b,
uint8 A360c,uint8 A360d,uint8 A360e,uint8 A360f,uint8 A3610,uint8 A3611,
uint8 A3612,uint8 A3613,uint8 A3614,uint8 A3615,uint8 A3616,uint8 A3617,
uint8 A3618,uint8 A3619,uint8 A361a,uint8 A361b,uint8 A361c,uint8 A361d,
uint8 A361e,uint8 A361f,uint8 A3620,uint8 A3621,uint8 A3622,uint8 A3623,
uint8 A3624,uint8 A3625,uint8 A3626,uint8 A3627,uint8 A3628,uint8 A3629,
uint8 A362a,uint8 A362b,
uint8 A3700,uint8 A3701,uint8 A3702,uint8 A3703,uint8 A3704,uint8 A3705,
uint8 A3706,uint8 A3707,uint8 A3708,uint8 A3709,uint8 A370a,uint8 A370b,
uint8 A370c,uint8 A370d,uint8 A370e,uint8 A370f,uint8 A3710,uint8 A3711,
uint8 A3712,uint8 A3713,uint8 A3714,uint8 A3715,uint8 A3716,uint8 A3717,
uint8 A3718,uint8 A3719,uint8 A371a,uint8 A371b,uint8 A371c,uint8 A371d,
uint8 A371e,uint8 A371f,uint8 A3720,uint8 A3721,uint8 A3722,uint8 A3723,
uint8 A3724,uint8 A3725,uint8 A3726,uint8 A3727,uint8 A3728,uint8 A3729,
uint8 A372a,uint8 A372b,
uint8 A3800,uint8 A3801,uint8 A3802,uint8 A3803,uint8 A3804,uint8 A3805,
uint8 A3806,uint8 A3807,uint8 A3808,uint8 A3809,uint8 A380a,uint8 A380b,
uint8 A380c,uint8 A380d,uint8 A380e,uint8 A380f,uint8 A3810,uint8 A3811,
uint8 A3812,uint8 A3813,uint8 A3814,uint8 A3815,uint8 A3816,uint8 A3817,
uint8 A3818,uint8 A3819,uint8 A381a,uint8 A381b,uint8 A381c,uint8 A381d,
uint8 A381e,uint8 A381f,uint8 A3820,uint8 A3821,uint8 A3822,uint8 A3823,
uint8 A3824,uint8 A3825,uint8 A3826,uint8 A3827,uint8 A3828,uint8 A3829,
uint8 A382a,uint8 A382b,
uint8 A3900,uint8 A3901,uint8 A3902,uint8 A3903,uint8 A3904,uint8 A3905,
uint8 A3906,uint8 A3907,uint8 A3908,uint8 A3909,uint8 A390a,uint8 A390b,
uint8 A390c,uint8 A390d,uint8 A390e,uint8 A390f,uint8 A3910,uint8 A3911,
uint8 A3912,uint8 A3913,uint8 A3914,uint8 A3915,uint8 A3916,uint8 A3917,
uint8 A3918,uint8 A3919,uint8 A391a,uint8 A391b,uint8 A391c,uint8 A391d,
uint8 A391e,uint8 A391f,uint8 A3920,uint8 A3921,uint8 A3922,uint8 A3923,
uint8 A3924,uint8 A3925,uint8 A3926,uint8 A3927,uint8 A3928,uint8 A3929,
uint8 A392a,uint8 A392b,
uint8 A3a00,uint8 A3a01,uint8 A3a02,uint8 A3a03,uint8 A3a04,uint8 A3a05,
uint8 A3a06,uint8 A3a07,uint8 A3a08,uint8 A3a09,uint8 A3a0a,uint8 A3a0b,
uint8 A3a0c,uint8 A3a0d,uint8 A3a0e,uint8 A3a0f,uint8 A3a10,uint8 A3a11,
uint8 A3a12,uint8 A3a13,uint8 A3a14,uint8 A3a15,uint8 A3a16,uint8 A3a17,
uint8 A3a18,uint8 A3a19,uint8 A3a1a,uint8 A3a1b,uint8 A3a1c,uint8 A3a1d,
uint8 A3a1e,uint8 A3a1f,uint8 A3a20,uint8 A3a21,uint8 A3a22,uint8 A3a23,
uint8 A3a24,uint8 A3a25,uint8 A3a26,uint8 A3a27,uint8 A3a28,uint8 A3a29,
uint8 A3a2a,uint8 A3a2b,
uint8 A3b00,uint8 A3b01,uint8 A3b02,uint8 A3b03,uint8 A3b04,uint8 A3b05,
uint8 A3b06,uint8 A3b07,uint8 A3b08,uint8 A3b09,uint8 A3b0a,uint8 A3b0b,
uint8 A3b0c,uint8 A3b0d,uint8 A3b0e,uint8 A3b0f,uint8 A3b10,uint8 A3b11,
uint8 A3b12,uint8 A3b13,uint8 A3b14,uint8 A3b15,uint8 A3b16,uint8 A3b17,
uint8 A3b18,uint8 A3b19,uint8 A3b1a,uint8 A3b1b,uint8 A3b1c,uint8 A3b1d,
uint8 A3b1e,uint8 A3b1f,uint8 A3b20,uint8 A3b21,uint8 A3b22,uint8 A3b23,
uint8 A3b24,uint8 A3b25,uint8 A3b26,uint8 A3b27,uint8 A3b28,uint8 A3b29,
uint8 A3b2a,uint8 A3b2b,
uint8 A3c00,uint8 A3c01,uint8 A3c02,uint8 A3c03,uint8 A3c04,uint8 A3c05,
uint8 A3c06,uint8 A3c07,uint8 A3c08,uint8 A3c09,uint8 A3c0a,uint8 A3c0b,
uint8 A3c0c,uint8 A3c0d,uint8 A3c0e,uint8 A3c0f,uint8 A3c10,uint8 A3c11,
uint8 A3c12,uint8 A3c13,uint8 A3c14,uint8 A3c15,uint8 A3c16,uint8 A3c17,
uint8 A3c18,uint8 A3c19,uint8 A3c1a,uint8 A3c1b,uint8 A3c1c,uint8 A3c1d,
uint8 A3c1e,uint8 A3c1f,uint8 A3c20,uint8 A3c21,uint8 A3c22,uint8 A3c23,
uint8 A3c24,uint8 A3c25,uint8 A3c26,uint8 A3c27,uint8 A3c28,uint8 A3c29,
uint8 A3c2a,uint8 A3c2b,
uint8 A3d00,uint8 A3d01,uint8 A3d02,uint8 A3d03,uint8 A3d04,uint8 A3d05,
uint8 A3d06,uint8 A3d07,uint8 A3d08,uint8 A3d09,uint8 A3d0a,uint8 A3d0b,
uint8 A3d0c,uint8 A3d0d,uint8 A3d0e,uint8 A3d0f,uint8 A3d10,uint8 A3d11,
uint8 A3d12,uint8 A3d13,uint8 A3d14,uint8 A3d15,uint8 A3d16,uint8 A3d17,
uint8 A3d18,uint8 A3d19,uint8 A3d1a,uint8 A3d1b,uint8 A3d1c,uint8 A3d1d,
uint8 A3d1e,uint8 A3d1f,uint8 A3d20,uint8 A3d21,uint8 A3d22,uint8 A3d23,
uint8 A3d24,uint8 A3d25,uint8 A3d26,uint8 A3d27,uint8 A3d28,uint8 A3d29,
uint8 A3d2a,uint8 A3d2b,
uint8 A3e00,uint8 A3e01,uint8 A3e02,uint8 A3e03,uint8 A3e04,uint8 A3e05,
uint8 A3e06,uint8 A3e07,uint8 A3e08,uint8 A3e09,uint8 A3e0a,uint8 A3e0b,
uint8 A3e0c,uint8 A3e0d,uint8 A3e0e,uint8 A3e0f,uint8 A3e10,uint8 A3e11,
uint8 A3e12,uint8 A3e13,uint8 A3e14,uint8 A3e15,uint8 A3e16,uint8 A3e17,
uint8 A3e18,uint8 A3e19,uint8 A3e1a,uint8 A3e1b,uint8 A3e1c,uint8 A3e1d,
uint8 A3e1e,uint8 A3e1f,uint8 A3e20,uint8 A3e21,uint8 A3e22,uint8 A3e23,
uint8 A3e24,uint8 A3e25,uint8 A3e26,uint8 A3e27,uint8 A3e28,uint8 A3e29,
uint8 A3e2a,uint8 A3e2b,
uint8 A3f00,uint8 A3f01,uint8 A3f02,uint8 A3f03,uint8 A3f04,uint8 A3f05,
uint8 A3f06,uint8 A3f07,uint8 A3f08,uint8 A3f09,uint8 A3f0a,uint8 A3f0b,
uint8 A3f0c,uint8 A3f0d,uint8 A3f0e,uint8 A3f0f,uint8 A3f10,uint8 A3f11,
uint8 A3f12,uint8 A3f13,uint8 A3f14,uint8 A3f15,uint8 A3f16,uint8 A3f17,
uint8 A3f18,uint8 A3f19,uint8 A3f1a,uint8 A3f1b,uint8 A3f1c,uint8 A3f1d,
uint8 A3f1e,uint8 A3f1f,uint8 A3f20,uint8 A3f21,uint8 A3f22,uint8 A3f23,
uint8 A3f24,uint8 A3f25,uint8 A3f26,uint8 A3f27,uint8 A3f28,uint8 A3f29,
uint8 A3f2a,uint8 A3f2b,
uint8 A4000,uint8 A4001,uint8 A4002,uint8 A4003,uint8 A4004,uint8 A4005,
uint8 A4006,uint8 A4007,uint8 A4008,uint8 A4009,uint8 A400a,uint8 A400b,
uint8 A400c,uint8 A400d,uint8 A400e,uint8 A400f,uint8 A4010,uint8 A4011,
uint8 A4012,uint8 A4013,uint8 A4014,uint8 A4015,uint8 A4016,uint8 A4017,
uint8 A4018,uint8 A4019,uint8 A401a,uint8 A401b,uint8 A401c,uint8 A401d,
uint8 A401e,uint8 A401f,uint8 A4020,uint8 A4021,uint8 A4022,uint8 A4023,
uint8 A4024,uint8 A4025,uint8 A4026,uint8 A4027,uint8 A4028,uint8 A4029,
uint8 A402a,uint8 A402b,
uint8 A4100,uint8 A4101,uint8 A4102,uint8 A4103,uint8 A4104,uint8 A4105,
uint8 A4106,uint8 A4107,uint8 A4108,uint8 A4109,uint8 A410a,uint8 A410b,
uint8 A410c,uint8 A410d,uint8 A410e,uint8 A410f,uint8 A4110,uint8 A4111,
uint8 A4112,uint8 A4113,uint8 A4114,uint8 A4115,uint8 A4116,uint8 A4117,
uint8 A4118,uint8 A4119,uint8 A411a,uint8 A411b,uint8 A411c,uint8 A411d,
uint8 A411e,uint8 A411f,uint8 A4120,uint8 A4121,uint8 A4122,uint8 A4123,
uint8 A4124,uint8 A4125,uint8 A4126,uint8 A4127,uint8 A4128,uint8 A4129,
uint8 A412a,uint8 A412b,
uint8 A4200,uint8 A4201,uint8 A4202,uint8 A4203,uint8 A4204,uint8 A4205,
uint8 A4206,uint8 A4207,uint8 A4208,uint8 A4209,uint8 A420a,uint8 A420b,
uint8 A420c,uint8 A420d,uint8 A420e,uint8 A420f,uint8 A4210,uint8 A4211,
uint8 A4212,uint8 A4213,uint8 A4214,uint8 A4215,uint8 A4216,uint8 A4217,
uint8 A4218,uint8 A4219,uint8 A421a,uint8 A421b,uint8 A421c,uint8 A421d,
uint8 A421e,uint8 A421f,uint8 A4220,uint8 A4221,uint8 A4222,uint8 A4223,
uint8 A4224,uint8 A4225,uint8 A4226,uint8 A4227,uint8 A4228,uint8 A4229,
uint8 A422a,uint8 A422b,
uint8 A4300,uint8 A4301,uint8 A4302,uint8 A4303,uint8 A4304,uint8 A4305,
uint8 A4306,uint8 A4307,uint8 A4308,uint8 A4309,uint8 A430a,uint8 A430b,
uint8 A430c,uint8 A430d,uint8 A430e,uint8 A430f,uint8 A4310,uint8 A4311,
uint8 A4312,uint8 A4313,uint8 A4314,uint8 A4315,uint8 A4316,uint8 A4317,
uint8 A4318,uint8 A4319,uint8 A431a,uint8 A431b,uint8 A431c,uint8 A431d,
uint8 A431e,uint8 A431f,uint8 A4320,uint8 A4321,uint8 A4322,uint8 A4323,
uint8 A4324,uint8 A4325,uint8 A4326,uint8 A4327,uint8 A4328,uint8 A4329,
uint8 A432a,uint8 A432b,
uint8 b00,uint8 b01,uint8 b02,uint8 b03,uint8 b04,uint8 b05,uint8 b06,
uint8 b07,uint8 b08,uint8 b09,uint8 b0a,uint8 b0b,uint8 b0c,uint8 b0d,
uint8 b0e,uint8 b0f,uint8 b10,uint8 b11,uint8 b12,uint8 b13,uint8 b14,
uint8 b15,uint8 b16,uint8 b17,uint8 b18,uint8 b19,uint8 b1a,uint8 b1b,
uint8 b1c,uint8 b1d,uint8 b1e,uint8 b1f,uint8 b20,uint8 b21,uint8 b22,
uint8 b23,uint8 b24,uint8 b25,uint8 b26,uint8 b27,uint8 b28,uint8 b29,
uint8 b2a,uint8 b2b;
uint8 c00,uint8 c01,uint8 c02,uint8 c03,uint8 c04,uint8 c05,uint8 c06,
uint8 c07,uint8 c08,uint8 c09,uint8 c0a,uint8 c0b,uint8 c0c,uint8 c0d,
uint8 c0e,uint8 c0f,uint8 c10,uint8 c11,uint8 c12,uint8 c13,uint8 c14,
uint8 c15,uint8 c16,uint8 c17,uint8 c18,uint8 c19,uint8 c1a,uint8 c1b,
uint8 c1c,uint8 c1d,uint8 c1e,uint8 c1f,uint8 c20,uint8 c21,uint8 c22,
uint8 c23,uint8 c24,uint8 c25,uint8 c26,uint8 c27,uint8 c28,uint8 c29,
uint8 c2a,uint8 c2b,uint8 c2c,uint8 c2d,uint8 c2e,uint8 c2f,uint8 c30,
uint8 c31,uint8 c32,uint8 c33,uint8 c34,uint8 c35,uint8 c36,uint8 c37,
uint8 c38,uint8 c39,uint8 c3a,uint8 c3b,uint8 c3c,uint8 c3d,uint8 c3e,
uint8 c3f,uint8 c40,uint8 c41,uint8 c42,uint8 c43
) =
{
  true
  &&
  true
}

(*************** constants ***************)

mov L0x555555566020 (0x01)@uint8; mov L0x555555566021 (0x01)@uint8;
mov L0x555555566022 (0x01)@uint8; mov L0x555555566023 (0x01)@uint8;
mov L0x555555566024 (0x01)@uint8; mov L0x555555566025 (0x01)@uint8;
mov L0x555555566026 (0x01)@uint8; mov L0x555555566027 (0x01)@uint8;
mov L0x555555566028 (0x01)@uint8; mov L0x555555566029 (0x01)@uint8;
mov L0x55555556602a (0x01)@uint8; mov L0x55555556602b (0x01)@uint8;
mov L0x55555556602c (0x01)@uint8; mov L0x55555556602d (0x01)@uint8;
mov L0x55555556602e (0x01)@uint8; mov L0x55555556602f (0x01)@uint8;
mov L0x555555566030 (0x0f)@uint8; mov L0x555555566031 (0x0f)@uint8;
mov L0x555555566032 (0x0f)@uint8; mov L0x555555566033 (0x0f)@uint8;
mov L0x555555566034 (0x0f)@uint8; mov L0x555555566035 (0x0f)@uint8;
mov L0x555555566036 (0x0f)@uint8; mov L0x555555566037 (0x0f)@uint8;
mov L0x555555566038 (0x0f)@uint8; mov L0x555555566039 (0x0f)@uint8;
mov L0x55555556603a (0x0f)@uint8; mov L0x55555556603b (0x0f)@uint8;
mov L0x55555556603c (0x0f)@uint8; mov L0x55555556603d (0x0f)@uint8;
mov L0x55555556603e (0x0f)@uint8; mov L0x55555556603f (0x0f)@uint8;
mov L0x555555566040 (0xf0)@uint8; mov L0x555555566041 (0xf0)@uint8;
mov L0x555555566042 (0xf0)@uint8; mov L0x555555566043 (0xf0)@uint8;
mov L0x555555566044 (0xf0)@uint8; mov L0x555555566045 (0xf0)@uint8;
mov L0x555555566046 (0xf0)@uint8; mov L0x555555566047 (0xf0)@uint8;
mov L0x555555566048 (0x00)@uint8; mov L0x555555566049 (0x00)@uint8;
mov L0x55555556604a (0x00)@uint8; mov L0x55555556604b (0x00)@uint8;
mov L0x55555556604c (0x00)@uint8; mov L0x55555556604d (0x00)@uint8;
mov L0x55555556604e (0x00)@uint8; mov L0x55555556604f (0x00)@uint8;
mov L0x555555566050 (0xf0)@uint8; mov L0x555555566051 (0xf0)@uint8;
mov L0x555555566052 (0xf0)@uint8; mov L0x555555566053 (0xf0)@uint8;
mov L0x555555566054 (0x00)@uint8; mov L0x555555566055 (0x00)@uint8;
mov L0x555555566056 (0x00)@uint8; mov L0x555555566057 (0x00)@uint8;
mov L0x555555566058 (0xf0)@uint8; mov L0x555555566059 (0xf0)@uint8;
mov L0x55555556605a (0xf0)@uint8; mov L0x55555556605b (0xf0)@uint8;
mov L0x55555556605c (0x00)@uint8; mov L0x55555556605d (0x00)@uint8;
mov L0x55555556605e (0x00)@uint8; mov L0x55555556605f (0x00)@uint8;
mov L0x555555566060 (0xf0)@uint8; mov L0x555555566061 (0xf0)@uint8;
mov L0x555555566062 (0x00)@uint8; mov L0x555555566063 (0x00)@uint8;
mov L0x555555566064 (0xf0)@uint8; mov L0x555555566065 (0xf0)@uint8;
mov L0x555555566066 (0x00)@uint8; mov L0x555555566067 (0x00)@uint8;
mov L0x555555566068 (0xf0)@uint8; mov L0x555555566069 (0xf0)@uint8;
mov L0x55555556606a (0x00)@uint8; mov L0x55555556606b (0x00)@uint8;
mov L0x55555556606c (0xf0)@uint8; mov L0x55555556606d (0xf0)@uint8;
mov L0x55555556606e (0x00)@uint8; mov L0x55555556606f (0x00)@uint8;
mov L0x555555566070 (0xf0)@uint8; mov L0x555555566071 (0x00)@uint8;
mov L0x555555566072 (0xf0)@uint8; mov L0x555555566073 (0x00)@uint8;
mov L0x555555566074 (0xf0)@uint8; mov L0x555555566075 (0x00)@uint8;
mov L0x555555566076 (0xf0)@uint8; mov L0x555555566077 (0x00)@uint8;
mov L0x555555566078 (0xf0)@uint8; mov L0x555555566079 (0x00)@uint8;
mov L0x55555556607a (0xf0)@uint8; mov L0x55555556607b (0x00)@uint8;
mov L0x55555556607c (0xf0)@uint8; mov L0x55555556607d (0x00)@uint8;
mov L0x55555556607e (0xf0)@uint8; mov L0x55555556607f (0x00)@uint8;
mov L0x555555568080 (0x00)@uint8; mov L0x555555568081 (0x01)@uint8;
mov L0x555555568082 (0x02)@uint8; mov L0x555555568083 (0x03)@uint8;
mov L0x555555568084 (0x04)@uint8; mov L0x555555568085 (0x05)@uint8;
mov L0x555555568086 (0x06)@uint8; mov L0x555555568087 (0x07)@uint8;
mov L0x555555568088 (0x08)@uint8; mov L0x555555568089 (0x09)@uint8;
mov L0x55555556808a (0x0a)@uint8; mov L0x55555556808b (0x0b)@uint8;
mov L0x55555556808c (0x0c)@uint8; mov L0x55555556808d (0x0d)@uint8;
mov L0x55555556808e (0x0e)@uint8; mov L0x55555556808f (0x0f)@uint8;
mov L0x555555568090 (0x00)@uint8; mov L0x555555568091 (0x10)@uint8;
mov L0x555555568092 (0x20)@uint8; mov L0x555555568093 (0x30)@uint8;
mov L0x555555568094 (0x40)@uint8; mov L0x555555568095 (0x50)@uint8;
mov L0x555555568096 (0x60)@uint8; mov L0x555555568097 (0x70)@uint8;
mov L0x555555568098 (0x80)@uint8; mov L0x555555568099 (0x90)@uint8;
mov L0x55555556809a (0xa0)@uint8; mov L0x55555556809b (0xb0)@uint8;
mov L0x55555556809c (0xc0)@uint8; mov L0x55555556809d (0xd0)@uint8;
mov L0x55555556809e (0xe0)@uint8; mov L0x55555556809f (0xf0)@uint8;
mov L0x5555555680a0 (0x00)@uint8; mov L0x5555555680a1 (0x02)@uint8;
mov L0x5555555680a2 (0x04)@uint8; mov L0x5555555680a3 (0x06)@uint8;
mov L0x5555555680a4 (0x08)@uint8; mov L0x5555555680a5 (0x0a)@uint8;
mov L0x5555555680a6 (0x0c)@uint8; mov L0x5555555680a7 (0x0e)@uint8;
mov L0x5555555680a8 (0x10)@uint8; mov L0x5555555680a9 (0x12)@uint8;
mov L0x5555555680aa (0x14)@uint8; mov L0x5555555680ab (0x16)@uint8;
mov L0x5555555680ac (0x18)@uint8; mov L0x5555555680ad (0x1a)@uint8;
mov L0x5555555680ae (0x1c)@uint8; mov L0x5555555680af (0x1e)@uint8;
mov L0x5555555680b0 (0x00)@uint8; mov L0x5555555680b1 (0x20)@uint8;
mov L0x5555555680b2 (0x40)@uint8; mov L0x5555555680b3 (0x60)@uint8;
mov L0x5555555680b4 (0x80)@uint8; mov L0x5555555680b5 (0xa0)@uint8;
mov L0x5555555680b6 (0xc0)@uint8; mov L0x5555555680b7 (0xe0)@uint8;
mov L0x5555555680b8 (0x1b)@uint8; mov L0x5555555680b9 (0x3b)@uint8;
mov L0x5555555680ba (0x5b)@uint8; mov L0x5555555680bb (0x7b)@uint8;
mov L0x5555555680bc (0x9b)@uint8; mov L0x5555555680bd (0xbb)@uint8;
mov L0x5555555680be (0xdb)@uint8; mov L0x5555555680bf (0xfb)@uint8;
mov L0x5555555680c0 (0x00)@uint8; mov L0x5555555680c1 (0x04)@uint8;
mov L0x5555555680c2 (0x08)@uint8; mov L0x5555555680c3 (0x0c)@uint8;
mov L0x5555555680c4 (0x10)@uint8; mov L0x5555555680c5 (0x14)@uint8;
mov L0x5555555680c6 (0x18)@uint8; mov L0x5555555680c7 (0x1c)@uint8;
mov L0x5555555680c8 (0x20)@uint8; mov L0x5555555680c9 (0x24)@uint8;
mov L0x5555555680ca (0x28)@uint8; mov L0x5555555680cb (0x2c)@uint8;
mov L0x5555555680cc (0x30)@uint8; mov L0x5555555680cd (0x34)@uint8;
mov L0x5555555680ce (0x38)@uint8; mov L0x5555555680cf (0x3c)@uint8;
mov L0x5555555680d0 (0x00)@uint8; mov L0x5555555680d1 (0x40)@uint8;
mov L0x5555555680d2 (0x80)@uint8; mov L0x5555555680d3 (0xc0)@uint8;
mov L0x5555555680d4 (0x1b)@uint8; mov L0x5555555680d5 (0x5b)@uint8;
mov L0x5555555680d6 (0x9b)@uint8; mov L0x5555555680d7 (0xdb)@uint8;
mov L0x5555555680d8 (0x36)@uint8; mov L0x5555555680d9 (0x76)@uint8;
mov L0x5555555680da (0xb6)@uint8; mov L0x5555555680db (0xf6)@uint8;
mov L0x5555555680dc (0x2d)@uint8; mov L0x5555555680dd (0x6d)@uint8;
mov L0x5555555680de (0xad)@uint8; mov L0x5555555680df (0xed)@uint8;
mov L0x5555555680e0 (0x00)@uint8; mov L0x5555555680e1 (0x08)@uint8;
mov L0x5555555680e2 (0x10)@uint8; mov L0x5555555680e3 (0x18)@uint8;
mov L0x5555555680e4 (0x20)@uint8; mov L0x5555555680e5 (0x28)@uint8;
mov L0x5555555680e6 (0x30)@uint8; mov L0x5555555680e7 (0x38)@uint8;
mov L0x5555555680e8 (0x40)@uint8; mov L0x5555555680e9 (0x48)@uint8;
mov L0x5555555680ea (0x50)@uint8; mov L0x5555555680eb (0x58)@uint8;
mov L0x5555555680ec (0x60)@uint8; mov L0x5555555680ed (0x68)@uint8;
mov L0x5555555680ee (0x70)@uint8; mov L0x5555555680ef (0x78)@uint8;
mov L0x5555555680f0 (0x00)@uint8; mov L0x5555555680f1 (0x80)@uint8;
mov L0x5555555680f2 (0x1b)@uint8; mov L0x5555555680f3 (0x9b)@uint8;
mov L0x5555555680f4 (0x36)@uint8; mov L0x5555555680f5 (0xb6)@uint8;
mov L0x5555555680f6 (0x2d)@uint8; mov L0x5555555680f7 (0xad)@uint8;
mov L0x5555555680f8 (0x6c)@uint8; mov L0x5555555680f9 (0xec)@uint8;
mov L0x5555555680fa (0x77)@uint8; mov L0x5555555680fb (0xf7)@uint8;
mov L0x5555555680fc (0x5a)@uint8; mov L0x5555555680fd (0xda)@uint8;
mov L0x5555555680fe (0x41)@uint8; mov L0x5555555680ff (0xc1)@uint8;
mov L0x555555568100 (0x00)@uint8; mov L0x555555568101 (0x10)@uint8;
mov L0x555555568102 (0x20)@uint8; mov L0x555555568103 (0x30)@uint8;
mov L0x555555568104 (0x40)@uint8; mov L0x555555568105 (0x50)@uint8;
mov L0x555555568106 (0x60)@uint8; mov L0x555555568107 (0x70)@uint8;
mov L0x555555568108 (0x80)@uint8; mov L0x555555568109 (0x90)@uint8;
mov L0x55555556810a (0xa0)@uint8; mov L0x55555556810b (0xb0)@uint8;
mov L0x55555556810c (0xc0)@uint8; mov L0x55555556810d (0xd0)@uint8;
mov L0x55555556810e (0xe0)@uint8; mov L0x55555556810f (0xf0)@uint8;
mov L0x555555568110 (0x00)@uint8; mov L0x555555568111 (0x1b)@uint8;
mov L0x555555568112 (0x36)@uint8; mov L0x555555568113 (0x2d)@uint8;
mov L0x555555568114 (0x6c)@uint8; mov L0x555555568115 (0x77)@uint8;
mov L0x555555568116 (0x5a)@uint8; mov L0x555555568117 (0x41)@uint8;
mov L0x555555568118 (0xd8)@uint8; mov L0x555555568119 (0xc3)@uint8;
mov L0x55555556811a (0xee)@uint8; mov L0x55555556811b (0xf5)@uint8;
mov L0x55555556811c (0xb4)@uint8; mov L0x55555556811d (0xaf)@uint8;
mov L0x55555556811e (0x82)@uint8; mov L0x55555556811f (0x99)@uint8;
mov L0x555555568120 (0x00)@uint8; mov L0x555555568121 (0x20)@uint8;
mov L0x555555568122 (0x40)@uint8; mov L0x555555568123 (0x60)@uint8;
mov L0x555555568124 (0x80)@uint8; mov L0x555555568125 (0xa0)@uint8;
mov L0x555555568126 (0xc0)@uint8; mov L0x555555568127 (0xe0)@uint8;
mov L0x555555568128 (0x1b)@uint8; mov L0x555555568129 (0x3b)@uint8;
mov L0x55555556812a (0x5b)@uint8; mov L0x55555556812b (0x7b)@uint8;
mov L0x55555556812c (0x9b)@uint8; mov L0x55555556812d (0xbb)@uint8;
mov L0x55555556812e (0xdb)@uint8; mov L0x55555556812f (0xfb)@uint8;
mov L0x555555568130 (0x00)@uint8; mov L0x555555568131 (0x36)@uint8;
mov L0x555555568132 (0x6c)@uint8; mov L0x555555568133 (0x5a)@uint8;
mov L0x555555568134 (0xd8)@uint8; mov L0x555555568135 (0xee)@uint8;
mov L0x555555568136 (0xb4)@uint8; mov L0x555555568137 (0x82)@uint8;
mov L0x555555568138 (0xab)@uint8; mov L0x555555568139 (0x9d)@uint8;
mov L0x55555556813a (0xc7)@uint8; mov L0x55555556813b (0xf1)@uint8;
mov L0x55555556813c (0x73)@uint8; mov L0x55555556813d (0x45)@uint8;
mov L0x55555556813e (0x1f)@uint8; mov L0x55555556813f (0x29)@uint8;
mov L0x555555568140 (0x00)@uint8; mov L0x555555568141 (0x40)@uint8;
mov L0x555555568142 (0x80)@uint8; mov L0x555555568143 (0xc0)@uint8;
mov L0x555555568144 (0x1b)@uint8; mov L0x555555568145 (0x5b)@uint8;
mov L0x555555568146 (0x9b)@uint8; mov L0x555555568147 (0xdb)@uint8;
mov L0x555555568148 (0x36)@uint8; mov L0x555555568149 (0x76)@uint8;
mov L0x55555556814a (0xb6)@uint8; mov L0x55555556814b (0xf6)@uint8;
mov L0x55555556814c (0x2d)@uint8; mov L0x55555556814d (0x6d)@uint8;
mov L0x55555556814e (0xad)@uint8; mov L0x55555556814f (0xed)@uint8;
mov L0x555555568150 (0x00)@uint8; mov L0x555555568151 (0x6c)@uint8;
mov L0x555555568152 (0xd8)@uint8; mov L0x555555568153 (0xb4)@uint8;
mov L0x555555568154 (0xab)@uint8; mov L0x555555568155 (0xc7)@uint8;
mov L0x555555568156 (0x73)@uint8; mov L0x555555568157 (0x1f)@uint8;
mov L0x555555568158 (0x4d)@uint8; mov L0x555555568159 (0x21)@uint8;
mov L0x55555556815a (0x95)@uint8; mov L0x55555556815b (0xf9)@uint8;
mov L0x55555556815c (0xe6)@uint8; mov L0x55555556815d (0x8a)@uint8;
mov L0x55555556815e (0x3e)@uint8; mov L0x55555556815f (0x52)@uint8;
mov L0x555555568160 (0x00)@uint8; mov L0x555555568161 (0x80)@uint8;
mov L0x555555568162 (0x1b)@uint8; mov L0x555555568163 (0x9b)@uint8;
mov L0x555555568164 (0x36)@uint8; mov L0x555555568165 (0xb6)@uint8;
mov L0x555555568166 (0x2d)@uint8; mov L0x555555568167 (0xad)@uint8;
mov L0x555555568168 (0x6c)@uint8; mov L0x555555568169 (0xec)@uint8;
mov L0x55555556816a (0x77)@uint8; mov L0x55555556816b (0xf7)@uint8;
mov L0x55555556816c (0x5a)@uint8; mov L0x55555556816d (0xda)@uint8;
mov L0x55555556816e (0x41)@uint8; mov L0x55555556816f (0xc1)@uint8;
mov L0x555555568170 (0x00)@uint8; mov L0x555555568171 (0xd8)@uint8;
mov L0x555555568172 (0xab)@uint8; mov L0x555555568173 (0x73)@uint8;
mov L0x555555568174 (0x4d)@uint8; mov L0x555555568175 (0x95)@uint8;
mov L0x555555568176 (0xe6)@uint8; mov L0x555555568177 (0x3e)@uint8;
mov L0x555555568178 (0x9a)@uint8; mov L0x555555568179 (0x42)@uint8;
mov L0x55555556817a (0x31)@uint8; mov L0x55555556817b (0xe9)@uint8;
mov L0x55555556817c (0xd7)@uint8; mov L0x55555556817d (0x0f)@uint8;
mov L0x55555556817e (0x7c)@uint8; mov L0x55555556817f (0xa4)@uint8;



(*************** initialization ***************)

mov L0x7ffff78bb030 A0000;mov L0x7ffff78bb031 A0100;mov L0x7ffff78bb032 A0200;
mov L0x7ffff78bb033 A0300;mov L0x7ffff78bb034 A0400;mov L0x7ffff78bb035 A0500;
mov L0x7ffff78bb036 A0600;mov L0x7ffff78bb037 A0700;mov L0x7ffff78bb038 A0800;
mov L0x7ffff78bb039 A0900;mov L0x7ffff78bb03a A0a00;mov L0x7ffff78bb03b A0b00;
mov L0x7ffff78bb03c A0c00;mov L0x7ffff78bb03d A0d00;mov L0x7ffff78bb03e A0e00;
mov L0x7ffff78bb03f A0f00;mov L0x7ffff78bb040 A1000;mov L0x7ffff78bb041 A1100;
mov L0x7ffff78bb042 A1200;mov L0x7ffff78bb043 A1300;mov L0x7ffff78bb044 A1400;
mov L0x7ffff78bb045 A1500;mov L0x7ffff78bb046 A1600;mov L0x7ffff78bb047 A1700;
mov L0x7ffff78bb048 A1800;mov L0x7ffff78bb049 A1900;mov L0x7ffff78bb04a A1a00;
mov L0x7ffff78bb04b A1b00;mov L0x7ffff78bb04c A1c00;mov L0x7ffff78bb04d A1d00;
mov L0x7ffff78bb04e A1e00;mov L0x7ffff78bb04f A1f00;mov L0x7ffff78bb050 A2000;
mov L0x7ffff78bb051 A2100;mov L0x7ffff78bb052 A2200;mov L0x7ffff78bb053 A2300;
mov L0x7ffff78bb054 A2400;mov L0x7ffff78bb055 A2500;mov L0x7ffff78bb056 A2600;
mov L0x7ffff78bb057 A2700;mov L0x7ffff78bb058 A2800;mov L0x7ffff78bb059 A2900;
mov L0x7ffff78bb05a A2a00;mov L0x7ffff78bb05b A2b00;mov L0x7ffff78bb05c A2c00;
mov L0x7ffff78bb05d A2d00;mov L0x7ffff78bb05e A2e00;mov L0x7ffff78bb05f A2f00;
mov L0x7ffff78bb060 A3000;mov L0x7ffff78bb061 A3100;mov L0x7ffff78bb062 A3200;
mov L0x7ffff78bb063 A3300;mov L0x7ffff78bb064 A3400;mov L0x7ffff78bb065 A3500;
mov L0x7ffff78bb066 A3600;mov L0x7ffff78bb067 A3700;mov L0x7ffff78bb068 A3800;
mov L0x7ffff78bb069 A3900;mov L0x7ffff78bb06a A3a00;mov L0x7ffff78bb06b A3b00;
mov L0x7ffff78bb06c A3c00;mov L0x7ffff78bb06d A3d00;mov L0x7ffff78bb06e A3e00;
mov L0x7ffff78bb06f A3f00;mov L0x7ffff78bb070 A4000;mov L0x7ffff78bb071 A4100;
mov L0x7ffff78bb072 A4200;mov L0x7ffff78bb073 A4300;
mov L0x7ffff78bb074 A0001;mov L0x7ffff78bb075 A0101;mov L0x7ffff78bb076 A0201;
mov L0x7ffff78bb077 A0301;mov L0x7ffff78bb078 A0401;mov L0x7ffff78bb079 A0501;
mov L0x7ffff78bb07a A0601;mov L0x7ffff78bb07b A0701;mov L0x7ffff78bb07c A0801;
mov L0x7ffff78bb07d A0901;mov L0x7ffff78bb07e A0a01;mov L0x7ffff78bb07f A0b01;
mov L0x7ffff78bb080 A0c01;mov L0x7ffff78bb081 A0d01;mov L0x7ffff78bb082 A0e01;
mov L0x7ffff78bb083 A0f01;mov L0x7ffff78bb084 A1001;mov L0x7ffff78bb085 A1101;
mov L0x7ffff78bb086 A1201;mov L0x7ffff78bb087 A1301;mov L0x7ffff78bb088 A1401;
mov L0x7ffff78bb089 A1501;mov L0x7ffff78bb08a A1601;mov L0x7ffff78bb08b A1701;
mov L0x7ffff78bb08c A1801;mov L0x7ffff78bb08d A1901;mov L0x7ffff78bb08e A1a01;
mov L0x7ffff78bb08f A1b01;mov L0x7ffff78bb090 A1c01;mov L0x7ffff78bb091 A1d01;
mov L0x7ffff78bb092 A1e01;mov L0x7ffff78bb093 A1f01;mov L0x7ffff78bb094 A2001;
mov L0x7ffff78bb095 A2101;mov L0x7ffff78bb096 A2201;mov L0x7ffff78bb097 A2301;
mov L0x7ffff78bb098 A2401;mov L0x7ffff78bb099 A2501;mov L0x7ffff78bb09a A2601;
mov L0x7ffff78bb09b A2701;mov L0x7ffff78bb09c A2801;mov L0x7ffff78bb09d A2901;
mov L0x7ffff78bb09e A2a01;mov L0x7ffff78bb09f A2b01;mov L0x7ffff78bb0a0 A2c01;
mov L0x7ffff78bb0a1 A2d01;mov L0x7ffff78bb0a2 A2e01;mov L0x7ffff78bb0a3 A2f01;
mov L0x7ffff78bb0a4 A3001;mov L0x7ffff78bb0a5 A3101;mov L0x7ffff78bb0a6 A3201;
mov L0x7ffff78bb0a7 A3301;mov L0x7ffff78bb0a8 A3401;mov L0x7ffff78bb0a9 A3501;
mov L0x7ffff78bb0aa A3601;mov L0x7ffff78bb0ab A3701;mov L0x7ffff78bb0ac A3801;
mov L0x7ffff78bb0ad A3901;mov L0x7ffff78bb0ae A3a01;mov L0x7ffff78bb0af A3b01;
mov L0x7ffff78bb0b0 A3c01;mov L0x7ffff78bb0b1 A3d01;mov L0x7ffff78bb0b2 A3e01;
mov L0x7ffff78bb0b3 A3f01;mov L0x7ffff78bb0b4 A4001;mov L0x7ffff78bb0b5 A4101;
mov L0x7ffff78bb0b6 A4201;mov L0x7ffff78bb0b7 A4301;
mov L0x7ffff78bb0b8 A0002;mov L0x7ffff78bb0b9 A0102;mov L0x7ffff78bb0ba A0202;
mov L0x7ffff78bb0bb A0302;mov L0x7ffff78bb0bc A0402;mov L0x7ffff78bb0bd A0502;
mov L0x7ffff78bb0be A0602;mov L0x7ffff78bb0bf A0702;mov L0x7ffff78bb0c0 A0802;
mov L0x7ffff78bb0c1 A0902;mov L0x7ffff78bb0c2 A0a02;mov L0x7ffff78bb0c3 A0b02;
mov L0x7ffff78bb0c4 A0c02;mov L0x7ffff78bb0c5 A0d02;mov L0x7ffff78bb0c6 A0e02;
mov L0x7ffff78bb0c7 A0f02;mov L0x7ffff78bb0c8 A1002;mov L0x7ffff78bb0c9 A1102;
mov L0x7ffff78bb0ca A1202;mov L0x7ffff78bb0cb A1302;mov L0x7ffff78bb0cc A1402;
mov L0x7ffff78bb0cd A1502;mov L0x7ffff78bb0ce A1602;mov L0x7ffff78bb0cf A1702;
mov L0x7ffff78bb0d0 A1802;mov L0x7ffff78bb0d1 A1902;mov L0x7ffff78bb0d2 A1a02;
mov L0x7ffff78bb0d3 A1b02;mov L0x7ffff78bb0d4 A1c02;mov L0x7ffff78bb0d5 A1d02;
mov L0x7ffff78bb0d6 A1e02;mov L0x7ffff78bb0d7 A1f02;mov L0x7ffff78bb0d8 A2002;
mov L0x7ffff78bb0d9 A2102;mov L0x7ffff78bb0da A2202;mov L0x7ffff78bb0db A2302;
mov L0x7ffff78bb0dc A2402;mov L0x7ffff78bb0dd A2502;mov L0x7ffff78bb0de A2602;
mov L0x7ffff78bb0df A2702;mov L0x7ffff78bb0e0 A2802;mov L0x7ffff78bb0e1 A2902;
mov L0x7ffff78bb0e2 A2a02;mov L0x7ffff78bb0e3 A2b02;mov L0x7ffff78bb0e4 A2c02;
mov L0x7ffff78bb0e5 A2d02;mov L0x7ffff78bb0e6 A2e02;mov L0x7ffff78bb0e7 A2f02;
mov L0x7ffff78bb0e8 A3002;mov L0x7ffff78bb0e9 A3102;mov L0x7ffff78bb0ea A3202;
mov L0x7ffff78bb0eb A3302;mov L0x7ffff78bb0ec A3402;mov L0x7ffff78bb0ed A3502;
mov L0x7ffff78bb0ee A3602;mov L0x7ffff78bb0ef A3702;mov L0x7ffff78bb0f0 A3802;
mov L0x7ffff78bb0f1 A3902;mov L0x7ffff78bb0f2 A3a02;mov L0x7ffff78bb0f3 A3b02;
mov L0x7ffff78bb0f4 A3c02;mov L0x7ffff78bb0f5 A3d02;mov L0x7ffff78bb0f6 A3e02;
mov L0x7ffff78bb0f7 A3f02;mov L0x7ffff78bb0f8 A4002;mov L0x7ffff78bb0f9 A4102;
mov L0x7ffff78bb0fa A4202;mov L0x7ffff78bb0fb A4302;
mov L0x7ffff78bb0fc A0003;mov L0x7ffff78bb0fd A0103;mov L0x7ffff78bb0fe A0203;
mov L0x7ffff78bb0ff A0303;mov L0x7ffff78bb100 A0403;mov L0x7ffff78bb101 A0503;
mov L0x7ffff78bb102 A0603;mov L0x7ffff78bb103 A0703;mov L0x7ffff78bb104 A0803;
mov L0x7ffff78bb105 A0903;mov L0x7ffff78bb106 A0a03;mov L0x7ffff78bb107 A0b03;
mov L0x7ffff78bb108 A0c03;mov L0x7ffff78bb109 A0d03;mov L0x7ffff78bb10a A0e03;
mov L0x7ffff78bb10b A0f03;mov L0x7ffff78bb10c A1003;mov L0x7ffff78bb10d A1103;
mov L0x7ffff78bb10e A1203;mov L0x7ffff78bb10f A1303;mov L0x7ffff78bb110 A1403;
mov L0x7ffff78bb111 A1503;mov L0x7ffff78bb112 A1603;mov L0x7ffff78bb113 A1703;
mov L0x7ffff78bb114 A1803;mov L0x7ffff78bb115 A1903;mov L0x7ffff78bb116 A1a03;
mov L0x7ffff78bb117 A1b03;mov L0x7ffff78bb118 A1c03;mov L0x7ffff78bb119 A1d03;
mov L0x7ffff78bb11a A1e03;mov L0x7ffff78bb11b A1f03;mov L0x7ffff78bb11c A2003;
mov L0x7ffff78bb11d A2103;mov L0x7ffff78bb11e A2203;mov L0x7ffff78bb11f A2303;
mov L0x7ffff78bb120 A2403;mov L0x7ffff78bb121 A2503;mov L0x7ffff78bb122 A2603;
mov L0x7ffff78bb123 A2703;mov L0x7ffff78bb124 A2803;mov L0x7ffff78bb125 A2903;
mov L0x7ffff78bb126 A2a03;mov L0x7ffff78bb127 A2b03;mov L0x7ffff78bb128 A2c03;
mov L0x7ffff78bb129 A2d03;mov L0x7ffff78bb12a A2e03;mov L0x7ffff78bb12b A2f03;
mov L0x7ffff78bb12c A3003;mov L0x7ffff78bb12d A3103;mov L0x7ffff78bb12e A3203;
mov L0x7ffff78bb12f A3303;mov L0x7ffff78bb130 A3403;mov L0x7ffff78bb131 A3503;
mov L0x7ffff78bb132 A3603;mov L0x7ffff78bb133 A3703;mov L0x7ffff78bb134 A3803;
mov L0x7ffff78bb135 A3903;mov L0x7ffff78bb136 A3a03;mov L0x7ffff78bb137 A3b03;
mov L0x7ffff78bb138 A3c03;mov L0x7ffff78bb139 A3d03;mov L0x7ffff78bb13a A3e03;
mov L0x7ffff78bb13b A3f03;mov L0x7ffff78bb13c A4003;mov L0x7ffff78bb13d A4103;
mov L0x7ffff78bb13e A4203;mov L0x7ffff78bb13f A4303;
mov L0x7ffff78bb140 A0004;mov L0x7ffff78bb141 A0104;mov L0x7ffff78bb142 A0204;
mov L0x7ffff78bb143 A0304;mov L0x7ffff78bb144 A0404;mov L0x7ffff78bb145 A0504;
mov L0x7ffff78bb146 A0604;mov L0x7ffff78bb147 A0704;mov L0x7ffff78bb148 A0804;
mov L0x7ffff78bb149 A0904;mov L0x7ffff78bb14a A0a04;mov L0x7ffff78bb14b A0b04;
mov L0x7ffff78bb14c A0c04;mov L0x7ffff78bb14d A0d04;mov L0x7ffff78bb14e A0e04;
mov L0x7ffff78bb14f A0f04;mov L0x7ffff78bb150 A1004;mov L0x7ffff78bb151 A1104;
mov L0x7ffff78bb152 A1204;mov L0x7ffff78bb153 A1304;mov L0x7ffff78bb154 A1404;
mov L0x7ffff78bb155 A1504;mov L0x7ffff78bb156 A1604;mov L0x7ffff78bb157 A1704;
mov L0x7ffff78bb158 A1804;mov L0x7ffff78bb159 A1904;mov L0x7ffff78bb15a A1a04;
mov L0x7ffff78bb15b A1b04;mov L0x7ffff78bb15c A1c04;mov L0x7ffff78bb15d A1d04;
mov L0x7ffff78bb15e A1e04;mov L0x7ffff78bb15f A1f04;mov L0x7ffff78bb160 A2004;
mov L0x7ffff78bb161 A2104;mov L0x7ffff78bb162 A2204;mov L0x7ffff78bb163 A2304;
mov L0x7ffff78bb164 A2404;mov L0x7ffff78bb165 A2504;mov L0x7ffff78bb166 A2604;
mov L0x7ffff78bb167 A2704;mov L0x7ffff78bb168 A2804;mov L0x7ffff78bb169 A2904;
mov L0x7ffff78bb16a A2a04;mov L0x7ffff78bb16b A2b04;mov L0x7ffff78bb16c A2c04;
mov L0x7ffff78bb16d A2d04;mov L0x7ffff78bb16e A2e04;mov L0x7ffff78bb16f A2f04;
mov L0x7ffff78bb170 A3004;mov L0x7ffff78bb171 A3104;mov L0x7ffff78bb172 A3204;
mov L0x7ffff78bb173 A3304;mov L0x7ffff78bb174 A3404;mov L0x7ffff78bb175 A3504;
mov L0x7ffff78bb176 A3604;mov L0x7ffff78bb177 A3704;mov L0x7ffff78bb178 A3804;
mov L0x7ffff78bb179 A3904;mov L0x7ffff78bb17a A3a04;mov L0x7ffff78bb17b A3b04;
mov L0x7ffff78bb17c A3c04;mov L0x7ffff78bb17d A3d04;mov L0x7ffff78bb17e A3e04;
mov L0x7ffff78bb17f A3f04;mov L0x7ffff78bb180 A4004;mov L0x7ffff78bb181 A4104;
mov L0x7ffff78bb182 A4204;mov L0x7ffff78bb183 A4304;
mov L0x7ffff78bb184 A0005;mov L0x7ffff78bb185 A0105;mov L0x7ffff78bb186 A0205;
mov L0x7ffff78bb187 A0305;mov L0x7ffff78bb188 A0405;mov L0x7ffff78bb189 A0505;
mov L0x7ffff78bb18a A0605;mov L0x7ffff78bb18b A0705;mov L0x7ffff78bb18c A0805;
mov L0x7ffff78bb18d A0905;mov L0x7ffff78bb18e A0a05;mov L0x7ffff78bb18f A0b05;
mov L0x7ffff78bb190 A0c05;mov L0x7ffff78bb191 A0d05;mov L0x7ffff78bb192 A0e05;
mov L0x7ffff78bb193 A0f05;mov L0x7ffff78bb194 A1005;mov L0x7ffff78bb195 A1105;
mov L0x7ffff78bb196 A1205;mov L0x7ffff78bb197 A1305;mov L0x7ffff78bb198 A1405;
mov L0x7ffff78bb199 A1505;mov L0x7ffff78bb19a A1605;mov L0x7ffff78bb19b A1705;
mov L0x7ffff78bb19c A1805;mov L0x7ffff78bb19d A1905;mov L0x7ffff78bb19e A1a05;
mov L0x7ffff78bb19f A1b05;mov L0x7ffff78bb1a0 A1c05;mov L0x7ffff78bb1a1 A1d05;
mov L0x7ffff78bb1a2 A1e05;mov L0x7ffff78bb1a3 A1f05;mov L0x7ffff78bb1a4 A2005;
mov L0x7ffff78bb1a5 A2105;mov L0x7ffff78bb1a6 A2205;mov L0x7ffff78bb1a7 A2305;
mov L0x7ffff78bb1a8 A2405;mov L0x7ffff78bb1a9 A2505;mov L0x7ffff78bb1aa A2605;
mov L0x7ffff78bb1ab A2705;mov L0x7ffff78bb1ac A2805;mov L0x7ffff78bb1ad A2905;
mov L0x7ffff78bb1ae A2a05;mov L0x7ffff78bb1af A2b05;mov L0x7ffff78bb1b0 A2c05;
mov L0x7ffff78bb1b1 A2d05;mov L0x7ffff78bb1b2 A2e05;mov L0x7ffff78bb1b3 A2f05;
mov L0x7ffff78bb1b4 A3005;mov L0x7ffff78bb1b5 A3105;mov L0x7ffff78bb1b6 A3205;
mov L0x7ffff78bb1b7 A3305;mov L0x7ffff78bb1b8 A3405;mov L0x7ffff78bb1b9 A3505;
mov L0x7ffff78bb1ba A3605;mov L0x7ffff78bb1bb A3705;mov L0x7ffff78bb1bc A3805;
mov L0x7ffff78bb1bd A3905;mov L0x7ffff78bb1be A3a05;mov L0x7ffff78bb1bf A3b05;
mov L0x7ffff78bb1c0 A3c05;mov L0x7ffff78bb1c1 A3d05;mov L0x7ffff78bb1c2 A3e05;
mov L0x7ffff78bb1c3 A3f05;mov L0x7ffff78bb1c4 A4005;mov L0x7ffff78bb1c5 A4105;
mov L0x7ffff78bb1c6 A4205;mov L0x7ffff78bb1c7 A4305;
mov L0x7ffff78bb1c8 A0006;mov L0x7ffff78bb1c9 A0106;mov L0x7ffff78bb1ca A0206;
mov L0x7ffff78bb1cb A0306;mov L0x7ffff78bb1cc A0406;mov L0x7ffff78bb1cd A0506;
mov L0x7ffff78bb1ce A0606;mov L0x7ffff78bb1cf A0706;mov L0x7ffff78bb1d0 A0806;
mov L0x7ffff78bb1d1 A0906;mov L0x7ffff78bb1d2 A0a06;mov L0x7ffff78bb1d3 A0b06;
mov L0x7ffff78bb1d4 A0c06;mov L0x7ffff78bb1d5 A0d06;mov L0x7ffff78bb1d6 A0e06;
mov L0x7ffff78bb1d7 A0f06;mov L0x7ffff78bb1d8 A1006;mov L0x7ffff78bb1d9 A1106;
mov L0x7ffff78bb1da A1206;mov L0x7ffff78bb1db A1306;mov L0x7ffff78bb1dc A1406;
mov L0x7ffff78bb1dd A1506;mov L0x7ffff78bb1de A1606;mov L0x7ffff78bb1df A1706;
mov L0x7ffff78bb1e0 A1806;mov L0x7ffff78bb1e1 A1906;mov L0x7ffff78bb1e2 A1a06;
mov L0x7ffff78bb1e3 A1b06;mov L0x7ffff78bb1e4 A1c06;mov L0x7ffff78bb1e5 A1d06;
mov L0x7ffff78bb1e6 A1e06;mov L0x7ffff78bb1e7 A1f06;mov L0x7ffff78bb1e8 A2006;
mov L0x7ffff78bb1e9 A2106;mov L0x7ffff78bb1ea A2206;mov L0x7ffff78bb1eb A2306;
mov L0x7ffff78bb1ec A2406;mov L0x7ffff78bb1ed A2506;mov L0x7ffff78bb1ee A2606;
mov L0x7ffff78bb1ef A2706;mov L0x7ffff78bb1f0 A2806;mov L0x7ffff78bb1f1 A2906;
mov L0x7ffff78bb1f2 A2a06;mov L0x7ffff78bb1f3 A2b06;mov L0x7ffff78bb1f4 A2c06;
mov L0x7ffff78bb1f5 A2d06;mov L0x7ffff78bb1f6 A2e06;mov L0x7ffff78bb1f7 A2f06;
mov L0x7ffff78bb1f8 A3006;mov L0x7ffff78bb1f9 A3106;mov L0x7ffff78bb1fa A3206;
mov L0x7ffff78bb1fb A3306;mov L0x7ffff78bb1fc A3406;mov L0x7ffff78bb1fd A3506;
mov L0x7ffff78bb1fe A3606;mov L0x7ffff78bb1ff A3706;mov L0x7ffff78bb200 A3806;
mov L0x7ffff78bb201 A3906;mov L0x7ffff78bb202 A3a06;mov L0x7ffff78bb203 A3b06;
mov L0x7ffff78bb204 A3c06;mov L0x7ffff78bb205 A3d06;mov L0x7ffff78bb206 A3e06;
mov L0x7ffff78bb207 A3f06;mov L0x7ffff78bb208 A4006;mov L0x7ffff78bb209 A4106;
mov L0x7ffff78bb20a A4206;mov L0x7ffff78bb20b A4306;
mov L0x7ffff78bb20c A0007;mov L0x7ffff78bb20d A0107;mov L0x7ffff78bb20e A0207;
mov L0x7ffff78bb20f A0307;mov L0x7ffff78bb210 A0407;mov L0x7ffff78bb211 A0507;
mov L0x7ffff78bb212 A0607;mov L0x7ffff78bb213 A0707;mov L0x7ffff78bb214 A0807;
mov L0x7ffff78bb215 A0907;mov L0x7ffff78bb216 A0a07;mov L0x7ffff78bb217 A0b07;
mov L0x7ffff78bb218 A0c07;mov L0x7ffff78bb219 A0d07;mov L0x7ffff78bb21a A0e07;
mov L0x7ffff78bb21b A0f07;mov L0x7ffff78bb21c A1007;mov L0x7ffff78bb21d A1107;
mov L0x7ffff78bb21e A1207;mov L0x7ffff78bb21f A1307;mov L0x7ffff78bb220 A1407;
mov L0x7ffff78bb221 A1507;mov L0x7ffff78bb222 A1607;mov L0x7ffff78bb223 A1707;
mov L0x7ffff78bb224 A1807;mov L0x7ffff78bb225 A1907;mov L0x7ffff78bb226 A1a07;
mov L0x7ffff78bb227 A1b07;mov L0x7ffff78bb228 A1c07;mov L0x7ffff78bb229 A1d07;
mov L0x7ffff78bb22a A1e07;mov L0x7ffff78bb22b A1f07;mov L0x7ffff78bb22c A2007;
mov L0x7ffff78bb22d A2107;mov L0x7ffff78bb22e A2207;mov L0x7ffff78bb22f A2307;
mov L0x7ffff78bb230 A2407;mov L0x7ffff78bb231 A2507;mov L0x7ffff78bb232 A2607;
mov L0x7ffff78bb233 A2707;mov L0x7ffff78bb234 A2807;mov L0x7ffff78bb235 A2907;
mov L0x7ffff78bb236 A2a07;mov L0x7ffff78bb237 A2b07;mov L0x7ffff78bb238 A2c07;
mov L0x7ffff78bb239 A2d07;mov L0x7ffff78bb23a A2e07;mov L0x7ffff78bb23b A2f07;
mov L0x7ffff78bb23c A3007;mov L0x7ffff78bb23d A3107;mov L0x7ffff78bb23e A3207;
mov L0x7ffff78bb23f A3307;mov L0x7ffff78bb240 A3407;mov L0x7ffff78bb241 A3507;
mov L0x7ffff78bb242 A3607;mov L0x7ffff78bb243 A3707;mov L0x7ffff78bb244 A3807;
mov L0x7ffff78bb245 A3907;mov L0x7ffff78bb246 A3a07;mov L0x7ffff78bb247 A3b07;
mov L0x7ffff78bb248 A3c07;mov L0x7ffff78bb249 A3d07;mov L0x7ffff78bb24a A3e07;
mov L0x7ffff78bb24b A3f07;mov L0x7ffff78bb24c A4007;mov L0x7ffff78bb24d A4107;
mov L0x7ffff78bb24e A4207;mov L0x7ffff78bb24f A4307;
mov L0x7ffff78bb250 A0008;mov L0x7ffff78bb251 A0108;mov L0x7ffff78bb252 A0208;
mov L0x7ffff78bb253 A0308;mov L0x7ffff78bb254 A0408;mov L0x7ffff78bb255 A0508;
mov L0x7ffff78bb256 A0608;mov L0x7ffff78bb257 A0708;mov L0x7ffff78bb258 A0808;
mov L0x7ffff78bb259 A0908;mov L0x7ffff78bb25a A0a08;mov L0x7ffff78bb25b A0b08;
mov L0x7ffff78bb25c A0c08;mov L0x7ffff78bb25d A0d08;mov L0x7ffff78bb25e A0e08;
mov L0x7ffff78bb25f A0f08;mov L0x7ffff78bb260 A1008;mov L0x7ffff78bb261 A1108;
mov L0x7ffff78bb262 A1208;mov L0x7ffff78bb263 A1308;mov L0x7ffff78bb264 A1408;
mov L0x7ffff78bb265 A1508;mov L0x7ffff78bb266 A1608;mov L0x7ffff78bb267 A1708;
mov L0x7ffff78bb268 A1808;mov L0x7ffff78bb269 A1908;mov L0x7ffff78bb26a A1a08;
mov L0x7ffff78bb26b A1b08;mov L0x7ffff78bb26c A1c08;mov L0x7ffff78bb26d A1d08;
mov L0x7ffff78bb26e A1e08;mov L0x7ffff78bb26f A1f08;mov L0x7ffff78bb270 A2008;
mov L0x7ffff78bb271 A2108;mov L0x7ffff78bb272 A2208;mov L0x7ffff78bb273 A2308;
mov L0x7ffff78bb274 A2408;mov L0x7ffff78bb275 A2508;mov L0x7ffff78bb276 A2608;
mov L0x7ffff78bb277 A2708;mov L0x7ffff78bb278 A2808;mov L0x7ffff78bb279 A2908;
mov L0x7ffff78bb27a A2a08;mov L0x7ffff78bb27b A2b08;mov L0x7ffff78bb27c A2c08;
mov L0x7ffff78bb27d A2d08;mov L0x7ffff78bb27e A2e08;mov L0x7ffff78bb27f A2f08;
mov L0x7ffff78bb280 A3008;mov L0x7ffff78bb281 A3108;mov L0x7ffff78bb282 A3208;
mov L0x7ffff78bb283 A3308;mov L0x7ffff78bb284 A3408;mov L0x7ffff78bb285 A3508;
mov L0x7ffff78bb286 A3608;mov L0x7ffff78bb287 A3708;mov L0x7ffff78bb288 A3808;
mov L0x7ffff78bb289 A3908;mov L0x7ffff78bb28a A3a08;mov L0x7ffff78bb28b A3b08;
mov L0x7ffff78bb28c A3c08;mov L0x7ffff78bb28d A3d08;mov L0x7ffff78bb28e A3e08;
mov L0x7ffff78bb28f A3f08;mov L0x7ffff78bb290 A4008;mov L0x7ffff78bb291 A4108;
mov L0x7ffff78bb292 A4208;mov L0x7ffff78bb293 A4308;
mov L0x7ffff78bb294 A0009;mov L0x7ffff78bb295 A0109;mov L0x7ffff78bb296 A0209;
mov L0x7ffff78bb297 A0309;mov L0x7ffff78bb298 A0409;mov L0x7ffff78bb299 A0509;
mov L0x7ffff78bb29a A0609;mov L0x7ffff78bb29b A0709;mov L0x7ffff78bb29c A0809;
mov L0x7ffff78bb29d A0909;mov L0x7ffff78bb29e A0a09;mov L0x7ffff78bb29f A0b09;
mov L0x7ffff78bb2a0 A0c09;mov L0x7ffff78bb2a1 A0d09;mov L0x7ffff78bb2a2 A0e09;
mov L0x7ffff78bb2a3 A0f09;mov L0x7ffff78bb2a4 A1009;mov L0x7ffff78bb2a5 A1109;
mov L0x7ffff78bb2a6 A1209;mov L0x7ffff78bb2a7 A1309;mov L0x7ffff78bb2a8 A1409;
mov L0x7ffff78bb2a9 A1509;mov L0x7ffff78bb2aa A1609;mov L0x7ffff78bb2ab A1709;
mov L0x7ffff78bb2ac A1809;mov L0x7ffff78bb2ad A1909;mov L0x7ffff78bb2ae A1a09;
mov L0x7ffff78bb2af A1b09;mov L0x7ffff78bb2b0 A1c09;mov L0x7ffff78bb2b1 A1d09;
mov L0x7ffff78bb2b2 A1e09;mov L0x7ffff78bb2b3 A1f09;mov L0x7ffff78bb2b4 A2009;
mov L0x7ffff78bb2b5 A2109;mov L0x7ffff78bb2b6 A2209;mov L0x7ffff78bb2b7 A2309;
mov L0x7ffff78bb2b8 A2409;mov L0x7ffff78bb2b9 A2509;mov L0x7ffff78bb2ba A2609;
mov L0x7ffff78bb2bb A2709;mov L0x7ffff78bb2bc A2809;mov L0x7ffff78bb2bd A2909;
mov L0x7ffff78bb2be A2a09;mov L0x7ffff78bb2bf A2b09;mov L0x7ffff78bb2c0 A2c09;
mov L0x7ffff78bb2c1 A2d09;mov L0x7ffff78bb2c2 A2e09;mov L0x7ffff78bb2c3 A2f09;
mov L0x7ffff78bb2c4 A3009;mov L0x7ffff78bb2c5 A3109;mov L0x7ffff78bb2c6 A3209;
mov L0x7ffff78bb2c7 A3309;mov L0x7ffff78bb2c8 A3409;mov L0x7ffff78bb2c9 A3509;
mov L0x7ffff78bb2ca A3609;mov L0x7ffff78bb2cb A3709;mov L0x7ffff78bb2cc A3809;
mov L0x7ffff78bb2cd A3909;mov L0x7ffff78bb2ce A3a09;mov L0x7ffff78bb2cf A3b09;
mov L0x7ffff78bb2d0 A3c09;mov L0x7ffff78bb2d1 A3d09;mov L0x7ffff78bb2d2 A3e09;
mov L0x7ffff78bb2d3 A3f09;mov L0x7ffff78bb2d4 A4009;mov L0x7ffff78bb2d5 A4109;
mov L0x7ffff78bb2d6 A4209;mov L0x7ffff78bb2d7 A4309;
mov L0x7ffff78bb2d8 A000a;mov L0x7ffff78bb2d9 A010a;mov L0x7ffff78bb2da A020a;
mov L0x7ffff78bb2db A030a;mov L0x7ffff78bb2dc A040a;mov L0x7ffff78bb2dd A050a;
mov L0x7ffff78bb2de A060a;mov L0x7ffff78bb2df A070a;mov L0x7ffff78bb2e0 A080a;
mov L0x7ffff78bb2e1 A090a;mov L0x7ffff78bb2e2 A0a0a;mov L0x7ffff78bb2e3 A0b0a;
mov L0x7ffff78bb2e4 A0c0a;mov L0x7ffff78bb2e5 A0d0a;mov L0x7ffff78bb2e6 A0e0a;
mov L0x7ffff78bb2e7 A0f0a;mov L0x7ffff78bb2e8 A100a;mov L0x7ffff78bb2e9 A110a;
mov L0x7ffff78bb2ea A120a;mov L0x7ffff78bb2eb A130a;mov L0x7ffff78bb2ec A140a;
mov L0x7ffff78bb2ed A150a;mov L0x7ffff78bb2ee A160a;mov L0x7ffff78bb2ef A170a;
mov L0x7ffff78bb2f0 A180a;mov L0x7ffff78bb2f1 A190a;mov L0x7ffff78bb2f2 A1a0a;
mov L0x7ffff78bb2f3 A1b0a;mov L0x7ffff78bb2f4 A1c0a;mov L0x7ffff78bb2f5 A1d0a;
mov L0x7ffff78bb2f6 A1e0a;mov L0x7ffff78bb2f7 A1f0a;mov L0x7ffff78bb2f8 A200a;
mov L0x7ffff78bb2f9 A210a;mov L0x7ffff78bb2fa A220a;mov L0x7ffff78bb2fb A230a;
mov L0x7ffff78bb2fc A240a;mov L0x7ffff78bb2fd A250a;mov L0x7ffff78bb2fe A260a;
mov L0x7ffff78bb2ff A270a;mov L0x7ffff78bb300 A280a;mov L0x7ffff78bb301 A290a;
mov L0x7ffff78bb302 A2a0a;mov L0x7ffff78bb303 A2b0a;mov L0x7ffff78bb304 A2c0a;
mov L0x7ffff78bb305 A2d0a;mov L0x7ffff78bb306 A2e0a;mov L0x7ffff78bb307 A2f0a;
mov L0x7ffff78bb308 A300a;mov L0x7ffff78bb309 A310a;mov L0x7ffff78bb30a A320a;
mov L0x7ffff78bb30b A330a;mov L0x7ffff78bb30c A340a;mov L0x7ffff78bb30d A350a;
mov L0x7ffff78bb30e A360a;mov L0x7ffff78bb30f A370a;mov L0x7ffff78bb310 A380a;
mov L0x7ffff78bb311 A390a;mov L0x7ffff78bb312 A3a0a;mov L0x7ffff78bb313 A3b0a;
mov L0x7ffff78bb314 A3c0a;mov L0x7ffff78bb315 A3d0a;mov L0x7ffff78bb316 A3e0a;
mov L0x7ffff78bb317 A3f0a;mov L0x7ffff78bb318 A400a;mov L0x7ffff78bb319 A410a;
mov L0x7ffff78bb31a A420a;mov L0x7ffff78bb31b A430a;
mov L0x7ffff78bb31c A000b;mov L0x7ffff78bb31d A010b;mov L0x7ffff78bb31e A020b;
mov L0x7ffff78bb31f A030b;mov L0x7ffff78bb320 A040b;mov L0x7ffff78bb321 A050b;
mov L0x7ffff78bb322 A060b;mov L0x7ffff78bb323 A070b;mov L0x7ffff78bb324 A080b;
mov L0x7ffff78bb325 A090b;mov L0x7ffff78bb326 A0a0b;mov L0x7ffff78bb327 A0b0b;
mov L0x7ffff78bb328 A0c0b;mov L0x7ffff78bb329 A0d0b;mov L0x7ffff78bb32a A0e0b;
mov L0x7ffff78bb32b A0f0b;mov L0x7ffff78bb32c A100b;mov L0x7ffff78bb32d A110b;
mov L0x7ffff78bb32e A120b;mov L0x7ffff78bb32f A130b;mov L0x7ffff78bb330 A140b;
mov L0x7ffff78bb331 A150b;mov L0x7ffff78bb332 A160b;mov L0x7ffff78bb333 A170b;
mov L0x7ffff78bb334 A180b;mov L0x7ffff78bb335 A190b;mov L0x7ffff78bb336 A1a0b;
mov L0x7ffff78bb337 A1b0b;mov L0x7ffff78bb338 A1c0b;mov L0x7ffff78bb339 A1d0b;
mov L0x7ffff78bb33a A1e0b;mov L0x7ffff78bb33b A1f0b;mov L0x7ffff78bb33c A200b;
mov L0x7ffff78bb33d A210b;mov L0x7ffff78bb33e A220b;mov L0x7ffff78bb33f A230b;
mov L0x7ffff78bb340 A240b;mov L0x7ffff78bb341 A250b;mov L0x7ffff78bb342 A260b;
mov L0x7ffff78bb343 A270b;mov L0x7ffff78bb344 A280b;mov L0x7ffff78bb345 A290b;
mov L0x7ffff78bb346 A2a0b;mov L0x7ffff78bb347 A2b0b;mov L0x7ffff78bb348 A2c0b;
mov L0x7ffff78bb349 A2d0b;mov L0x7ffff78bb34a A2e0b;mov L0x7ffff78bb34b A2f0b;
mov L0x7ffff78bb34c A300b;mov L0x7ffff78bb34d A310b;mov L0x7ffff78bb34e A320b;
mov L0x7ffff78bb34f A330b;mov L0x7ffff78bb350 A340b;mov L0x7ffff78bb351 A350b;
mov L0x7ffff78bb352 A360b;mov L0x7ffff78bb353 A370b;mov L0x7ffff78bb354 A380b;
mov L0x7ffff78bb355 A390b;mov L0x7ffff78bb356 A3a0b;mov L0x7ffff78bb357 A3b0b;
mov L0x7ffff78bb358 A3c0b;mov L0x7ffff78bb359 A3d0b;mov L0x7ffff78bb35a A3e0b;
mov L0x7ffff78bb35b A3f0b;mov L0x7ffff78bb35c A400b;mov L0x7ffff78bb35d A410b;
mov L0x7ffff78bb35e A420b;mov L0x7ffff78bb35f A430b;
mov L0x7ffff78bb360 A000c;mov L0x7ffff78bb361 A010c;mov L0x7ffff78bb362 A020c;
mov L0x7ffff78bb363 A030c;mov L0x7ffff78bb364 A040c;mov L0x7ffff78bb365 A050c;
mov L0x7ffff78bb366 A060c;mov L0x7ffff78bb367 A070c;mov L0x7ffff78bb368 A080c;
mov L0x7ffff78bb369 A090c;mov L0x7ffff78bb36a A0a0c;mov L0x7ffff78bb36b A0b0c;
mov L0x7ffff78bb36c A0c0c;mov L0x7ffff78bb36d A0d0c;mov L0x7ffff78bb36e A0e0c;
mov L0x7ffff78bb36f A0f0c;mov L0x7ffff78bb370 A100c;mov L0x7ffff78bb371 A110c;
mov L0x7ffff78bb372 A120c;mov L0x7ffff78bb373 A130c;mov L0x7ffff78bb374 A140c;
mov L0x7ffff78bb375 A150c;mov L0x7ffff78bb376 A160c;mov L0x7ffff78bb377 A170c;
mov L0x7ffff78bb378 A180c;mov L0x7ffff78bb379 A190c;mov L0x7ffff78bb37a A1a0c;
mov L0x7ffff78bb37b A1b0c;mov L0x7ffff78bb37c A1c0c;mov L0x7ffff78bb37d A1d0c;
mov L0x7ffff78bb37e A1e0c;mov L0x7ffff78bb37f A1f0c;mov L0x7ffff78bb380 A200c;
mov L0x7ffff78bb381 A210c;mov L0x7ffff78bb382 A220c;mov L0x7ffff78bb383 A230c;
mov L0x7ffff78bb384 A240c;mov L0x7ffff78bb385 A250c;mov L0x7ffff78bb386 A260c;
mov L0x7ffff78bb387 A270c;mov L0x7ffff78bb388 A280c;mov L0x7ffff78bb389 A290c;
mov L0x7ffff78bb38a A2a0c;mov L0x7ffff78bb38b A2b0c;mov L0x7ffff78bb38c A2c0c;
mov L0x7ffff78bb38d A2d0c;mov L0x7ffff78bb38e A2e0c;mov L0x7ffff78bb38f A2f0c;
mov L0x7ffff78bb390 A300c;mov L0x7ffff78bb391 A310c;mov L0x7ffff78bb392 A320c;
mov L0x7ffff78bb393 A330c;mov L0x7ffff78bb394 A340c;mov L0x7ffff78bb395 A350c;
mov L0x7ffff78bb396 A360c;mov L0x7ffff78bb397 A370c;mov L0x7ffff78bb398 A380c;
mov L0x7ffff78bb399 A390c;mov L0x7ffff78bb39a A3a0c;mov L0x7ffff78bb39b A3b0c;
mov L0x7ffff78bb39c A3c0c;mov L0x7ffff78bb39d A3d0c;mov L0x7ffff78bb39e A3e0c;
mov L0x7ffff78bb39f A3f0c;mov L0x7ffff78bb3a0 A400c;mov L0x7ffff78bb3a1 A410c;
mov L0x7ffff78bb3a2 A420c;mov L0x7ffff78bb3a3 A430c;
mov L0x7ffff78bb3a4 A000d;mov L0x7ffff78bb3a5 A010d;mov L0x7ffff78bb3a6 A020d;
mov L0x7ffff78bb3a7 A030d;mov L0x7ffff78bb3a8 A040d;mov L0x7ffff78bb3a9 A050d;
mov L0x7ffff78bb3aa A060d;mov L0x7ffff78bb3ab A070d;mov L0x7ffff78bb3ac A080d;
mov L0x7ffff78bb3ad A090d;mov L0x7ffff78bb3ae A0a0d;mov L0x7ffff78bb3af A0b0d;
mov L0x7ffff78bb3b0 A0c0d;mov L0x7ffff78bb3b1 A0d0d;mov L0x7ffff78bb3b2 A0e0d;
mov L0x7ffff78bb3b3 A0f0d;mov L0x7ffff78bb3b4 A100d;mov L0x7ffff78bb3b5 A110d;
mov L0x7ffff78bb3b6 A120d;mov L0x7ffff78bb3b7 A130d;mov L0x7ffff78bb3b8 A140d;
mov L0x7ffff78bb3b9 A150d;mov L0x7ffff78bb3ba A160d;mov L0x7ffff78bb3bb A170d;
mov L0x7ffff78bb3bc A180d;mov L0x7ffff78bb3bd A190d;mov L0x7ffff78bb3be A1a0d;
mov L0x7ffff78bb3bf A1b0d;mov L0x7ffff78bb3c0 A1c0d;mov L0x7ffff78bb3c1 A1d0d;
mov L0x7ffff78bb3c2 A1e0d;mov L0x7ffff78bb3c3 A1f0d;mov L0x7ffff78bb3c4 A200d;
mov L0x7ffff78bb3c5 A210d;mov L0x7ffff78bb3c6 A220d;mov L0x7ffff78bb3c7 A230d;
mov L0x7ffff78bb3c8 A240d;mov L0x7ffff78bb3c9 A250d;mov L0x7ffff78bb3ca A260d;
mov L0x7ffff78bb3cb A270d;mov L0x7ffff78bb3cc A280d;mov L0x7ffff78bb3cd A290d;
mov L0x7ffff78bb3ce A2a0d;mov L0x7ffff78bb3cf A2b0d;mov L0x7ffff78bb3d0 A2c0d;
mov L0x7ffff78bb3d1 A2d0d;mov L0x7ffff78bb3d2 A2e0d;mov L0x7ffff78bb3d3 A2f0d;
mov L0x7ffff78bb3d4 A300d;mov L0x7ffff78bb3d5 A310d;mov L0x7ffff78bb3d6 A320d;
mov L0x7ffff78bb3d7 A330d;mov L0x7ffff78bb3d8 A340d;mov L0x7ffff78bb3d9 A350d;
mov L0x7ffff78bb3da A360d;mov L0x7ffff78bb3db A370d;mov L0x7ffff78bb3dc A380d;
mov L0x7ffff78bb3dd A390d;mov L0x7ffff78bb3de A3a0d;mov L0x7ffff78bb3df A3b0d;
mov L0x7ffff78bb3e0 A3c0d;mov L0x7ffff78bb3e1 A3d0d;mov L0x7ffff78bb3e2 A3e0d;
mov L0x7ffff78bb3e3 A3f0d;mov L0x7ffff78bb3e4 A400d;mov L0x7ffff78bb3e5 A410d;
mov L0x7ffff78bb3e6 A420d;mov L0x7ffff78bb3e7 A430d;
mov L0x7ffff78bb3e8 A000e;mov L0x7ffff78bb3e9 A010e;mov L0x7ffff78bb3ea A020e;
mov L0x7ffff78bb3eb A030e;mov L0x7ffff78bb3ec A040e;mov L0x7ffff78bb3ed A050e;
mov L0x7ffff78bb3ee A060e;mov L0x7ffff78bb3ef A070e;mov L0x7ffff78bb3f0 A080e;
mov L0x7ffff78bb3f1 A090e;mov L0x7ffff78bb3f2 A0a0e;mov L0x7ffff78bb3f3 A0b0e;
mov L0x7ffff78bb3f4 A0c0e;mov L0x7ffff78bb3f5 A0d0e;mov L0x7ffff78bb3f6 A0e0e;
mov L0x7ffff78bb3f7 A0f0e;mov L0x7ffff78bb3f8 A100e;mov L0x7ffff78bb3f9 A110e;
mov L0x7ffff78bb3fa A120e;mov L0x7ffff78bb3fb A130e;mov L0x7ffff78bb3fc A140e;
mov L0x7ffff78bb3fd A150e;mov L0x7ffff78bb3fe A160e;mov L0x7ffff78bb3ff A170e;
mov L0x7ffff78bb400 A180e;mov L0x7ffff78bb401 A190e;mov L0x7ffff78bb402 A1a0e;
mov L0x7ffff78bb403 A1b0e;mov L0x7ffff78bb404 A1c0e;mov L0x7ffff78bb405 A1d0e;
mov L0x7ffff78bb406 A1e0e;mov L0x7ffff78bb407 A1f0e;mov L0x7ffff78bb408 A200e;
mov L0x7ffff78bb409 A210e;mov L0x7ffff78bb40a A220e;mov L0x7ffff78bb40b A230e;
mov L0x7ffff78bb40c A240e;mov L0x7ffff78bb40d A250e;mov L0x7ffff78bb40e A260e;
mov L0x7ffff78bb40f A270e;mov L0x7ffff78bb410 A280e;mov L0x7ffff78bb411 A290e;
mov L0x7ffff78bb412 A2a0e;mov L0x7ffff78bb413 A2b0e;mov L0x7ffff78bb414 A2c0e;
mov L0x7ffff78bb415 A2d0e;mov L0x7ffff78bb416 A2e0e;mov L0x7ffff78bb417 A2f0e;
mov L0x7ffff78bb418 A300e;mov L0x7ffff78bb419 A310e;mov L0x7ffff78bb41a A320e;
mov L0x7ffff78bb41b A330e;mov L0x7ffff78bb41c A340e;mov L0x7ffff78bb41d A350e;
mov L0x7ffff78bb41e A360e;mov L0x7ffff78bb41f A370e;mov L0x7ffff78bb420 A380e;
mov L0x7ffff78bb421 A390e;mov L0x7ffff78bb422 A3a0e;mov L0x7ffff78bb423 A3b0e;
mov L0x7ffff78bb424 A3c0e;mov L0x7ffff78bb425 A3d0e;mov L0x7ffff78bb426 A3e0e;
mov L0x7ffff78bb427 A3f0e;mov L0x7ffff78bb428 A400e;mov L0x7ffff78bb429 A410e;
mov L0x7ffff78bb42a A420e;mov L0x7ffff78bb42b A430e;
mov L0x7ffff78bb42c A000f;mov L0x7ffff78bb42d A010f;mov L0x7ffff78bb42e A020f;
mov L0x7ffff78bb42f A030f;mov L0x7ffff78bb430 A040f;mov L0x7ffff78bb431 A050f;
mov L0x7ffff78bb432 A060f;mov L0x7ffff78bb433 A070f;mov L0x7ffff78bb434 A080f;
mov L0x7ffff78bb435 A090f;mov L0x7ffff78bb436 A0a0f;mov L0x7ffff78bb437 A0b0f;
mov L0x7ffff78bb438 A0c0f;mov L0x7ffff78bb439 A0d0f;mov L0x7ffff78bb43a A0e0f;
mov L0x7ffff78bb43b A0f0f;mov L0x7ffff78bb43c A100f;mov L0x7ffff78bb43d A110f;
mov L0x7ffff78bb43e A120f;mov L0x7ffff78bb43f A130f;mov L0x7ffff78bb440 A140f;
mov L0x7ffff78bb441 A150f;mov L0x7ffff78bb442 A160f;mov L0x7ffff78bb443 A170f;
mov L0x7ffff78bb444 A180f;mov L0x7ffff78bb445 A190f;mov L0x7ffff78bb446 A1a0f;
mov L0x7ffff78bb447 A1b0f;mov L0x7ffff78bb448 A1c0f;mov L0x7ffff78bb449 A1d0f;
mov L0x7ffff78bb44a A1e0f;mov L0x7ffff78bb44b A1f0f;mov L0x7ffff78bb44c A200f;
mov L0x7ffff78bb44d A210f;mov L0x7ffff78bb44e A220f;mov L0x7ffff78bb44f A230f;
mov L0x7ffff78bb450 A240f;mov L0x7ffff78bb451 A250f;mov L0x7ffff78bb452 A260f;
mov L0x7ffff78bb453 A270f;mov L0x7ffff78bb454 A280f;mov L0x7ffff78bb455 A290f;
mov L0x7ffff78bb456 A2a0f;mov L0x7ffff78bb457 A2b0f;mov L0x7ffff78bb458 A2c0f;
mov L0x7ffff78bb459 A2d0f;mov L0x7ffff78bb45a A2e0f;mov L0x7ffff78bb45b A2f0f;
mov L0x7ffff78bb45c A300f;mov L0x7ffff78bb45d A310f;mov L0x7ffff78bb45e A320f;
mov L0x7ffff78bb45f A330f;mov L0x7ffff78bb460 A340f;mov L0x7ffff78bb461 A350f;
mov L0x7ffff78bb462 A360f;mov L0x7ffff78bb463 A370f;mov L0x7ffff78bb464 A380f;
mov L0x7ffff78bb465 A390f;mov L0x7ffff78bb466 A3a0f;mov L0x7ffff78bb467 A3b0f;
mov L0x7ffff78bb468 A3c0f;mov L0x7ffff78bb469 A3d0f;mov L0x7ffff78bb46a A3e0f;
mov L0x7ffff78bb46b A3f0f;mov L0x7ffff78bb46c A400f;mov L0x7ffff78bb46d A410f;
mov L0x7ffff78bb46e A420f;mov L0x7ffff78bb46f A430f;
mov L0x7ffff78bb470 A0010;mov L0x7ffff78bb471 A0110;mov L0x7ffff78bb472 A0210;
mov L0x7ffff78bb473 A0310;mov L0x7ffff78bb474 A0410;mov L0x7ffff78bb475 A0510;
mov L0x7ffff78bb476 A0610;mov L0x7ffff78bb477 A0710;mov L0x7ffff78bb478 A0810;
mov L0x7ffff78bb479 A0910;mov L0x7ffff78bb47a A0a10;mov L0x7ffff78bb47b A0b10;
mov L0x7ffff78bb47c A0c10;mov L0x7ffff78bb47d A0d10;mov L0x7ffff78bb47e A0e10;
mov L0x7ffff78bb47f A0f10;mov L0x7ffff78bb480 A1010;mov L0x7ffff78bb481 A1110;
mov L0x7ffff78bb482 A1210;mov L0x7ffff78bb483 A1310;mov L0x7ffff78bb484 A1410;
mov L0x7ffff78bb485 A1510;mov L0x7ffff78bb486 A1610;mov L0x7ffff78bb487 A1710;
mov L0x7ffff78bb488 A1810;mov L0x7ffff78bb489 A1910;mov L0x7ffff78bb48a A1a10;
mov L0x7ffff78bb48b A1b10;mov L0x7ffff78bb48c A1c10;mov L0x7ffff78bb48d A1d10;
mov L0x7ffff78bb48e A1e10;mov L0x7ffff78bb48f A1f10;mov L0x7ffff78bb490 A2010;
mov L0x7ffff78bb491 A2110;mov L0x7ffff78bb492 A2210;mov L0x7ffff78bb493 A2310;
mov L0x7ffff78bb494 A2410;mov L0x7ffff78bb495 A2510;mov L0x7ffff78bb496 A2610;
mov L0x7ffff78bb497 A2710;mov L0x7ffff78bb498 A2810;mov L0x7ffff78bb499 A2910;
mov L0x7ffff78bb49a A2a10;mov L0x7ffff78bb49b A2b10;mov L0x7ffff78bb49c A2c10;
mov L0x7ffff78bb49d A2d10;mov L0x7ffff78bb49e A2e10;mov L0x7ffff78bb49f A2f10;
mov L0x7ffff78bb4a0 A3010;mov L0x7ffff78bb4a1 A3110;mov L0x7ffff78bb4a2 A3210;
mov L0x7ffff78bb4a3 A3310;mov L0x7ffff78bb4a4 A3410;mov L0x7ffff78bb4a5 A3510;
mov L0x7ffff78bb4a6 A3610;mov L0x7ffff78bb4a7 A3710;mov L0x7ffff78bb4a8 A3810;
mov L0x7ffff78bb4a9 A3910;mov L0x7ffff78bb4aa A3a10;mov L0x7ffff78bb4ab A3b10;
mov L0x7ffff78bb4ac A3c10;mov L0x7ffff78bb4ad A3d10;mov L0x7ffff78bb4ae A3e10;
mov L0x7ffff78bb4af A3f10;mov L0x7ffff78bb4b0 A4010;mov L0x7ffff78bb4b1 A4110;
mov L0x7ffff78bb4b2 A4210;mov L0x7ffff78bb4b3 A4310;
mov L0x7ffff78bb4b4 A0011;mov L0x7ffff78bb4b5 A0111;mov L0x7ffff78bb4b6 A0211;
mov L0x7ffff78bb4b7 A0311;mov L0x7ffff78bb4b8 A0411;mov L0x7ffff78bb4b9 A0511;
mov L0x7ffff78bb4ba A0611;mov L0x7ffff78bb4bb A0711;mov L0x7ffff78bb4bc A0811;
mov L0x7ffff78bb4bd A0911;mov L0x7ffff78bb4be A0a11;mov L0x7ffff78bb4bf A0b11;
mov L0x7ffff78bb4c0 A0c11;mov L0x7ffff78bb4c1 A0d11;mov L0x7ffff78bb4c2 A0e11;
mov L0x7ffff78bb4c3 A0f11;mov L0x7ffff78bb4c4 A1011;mov L0x7ffff78bb4c5 A1111;
mov L0x7ffff78bb4c6 A1211;mov L0x7ffff78bb4c7 A1311;mov L0x7ffff78bb4c8 A1411;
mov L0x7ffff78bb4c9 A1511;mov L0x7ffff78bb4ca A1611;mov L0x7ffff78bb4cb A1711;
mov L0x7ffff78bb4cc A1811;mov L0x7ffff78bb4cd A1911;mov L0x7ffff78bb4ce A1a11;
mov L0x7ffff78bb4cf A1b11;mov L0x7ffff78bb4d0 A1c11;mov L0x7ffff78bb4d1 A1d11;
mov L0x7ffff78bb4d2 A1e11;mov L0x7ffff78bb4d3 A1f11;mov L0x7ffff78bb4d4 A2011;
mov L0x7ffff78bb4d5 A2111;mov L0x7ffff78bb4d6 A2211;mov L0x7ffff78bb4d7 A2311;
mov L0x7ffff78bb4d8 A2411;mov L0x7ffff78bb4d9 A2511;mov L0x7ffff78bb4da A2611;
mov L0x7ffff78bb4db A2711;mov L0x7ffff78bb4dc A2811;mov L0x7ffff78bb4dd A2911;
mov L0x7ffff78bb4de A2a11;mov L0x7ffff78bb4df A2b11;mov L0x7ffff78bb4e0 A2c11;
mov L0x7ffff78bb4e1 A2d11;mov L0x7ffff78bb4e2 A2e11;mov L0x7ffff78bb4e3 A2f11;
mov L0x7ffff78bb4e4 A3011;mov L0x7ffff78bb4e5 A3111;mov L0x7ffff78bb4e6 A3211;
mov L0x7ffff78bb4e7 A3311;mov L0x7ffff78bb4e8 A3411;mov L0x7ffff78bb4e9 A3511;
mov L0x7ffff78bb4ea A3611;mov L0x7ffff78bb4eb A3711;mov L0x7ffff78bb4ec A3811;
mov L0x7ffff78bb4ed A3911;mov L0x7ffff78bb4ee A3a11;mov L0x7ffff78bb4ef A3b11;
mov L0x7ffff78bb4f0 A3c11;mov L0x7ffff78bb4f1 A3d11;mov L0x7ffff78bb4f2 A3e11;
mov L0x7ffff78bb4f3 A3f11;mov L0x7ffff78bb4f4 A4011;mov L0x7ffff78bb4f5 A4111;
mov L0x7ffff78bb4f6 A4211;mov L0x7ffff78bb4f7 A4311;
mov L0x7ffff78bb4f8 A0012;mov L0x7ffff78bb4f9 A0112;mov L0x7ffff78bb4fa A0212;
mov L0x7ffff78bb4fb A0312;mov L0x7ffff78bb4fc A0412;mov L0x7ffff78bb4fd A0512;
mov L0x7ffff78bb4fe A0612;mov L0x7ffff78bb4ff A0712;mov L0x7ffff78bb500 A0812;
mov L0x7ffff78bb501 A0912;mov L0x7ffff78bb502 A0a12;mov L0x7ffff78bb503 A0b12;
mov L0x7ffff78bb504 A0c12;mov L0x7ffff78bb505 A0d12;mov L0x7ffff78bb506 A0e12;
mov L0x7ffff78bb507 A0f12;mov L0x7ffff78bb508 A1012;mov L0x7ffff78bb509 A1112;
mov L0x7ffff78bb50a A1212;mov L0x7ffff78bb50b A1312;mov L0x7ffff78bb50c A1412;
mov L0x7ffff78bb50d A1512;mov L0x7ffff78bb50e A1612;mov L0x7ffff78bb50f A1712;
mov L0x7ffff78bb510 A1812;mov L0x7ffff78bb511 A1912;mov L0x7ffff78bb512 A1a12;
mov L0x7ffff78bb513 A1b12;mov L0x7ffff78bb514 A1c12;mov L0x7ffff78bb515 A1d12;
mov L0x7ffff78bb516 A1e12;mov L0x7ffff78bb517 A1f12;mov L0x7ffff78bb518 A2012;
mov L0x7ffff78bb519 A2112;mov L0x7ffff78bb51a A2212;mov L0x7ffff78bb51b A2312;
mov L0x7ffff78bb51c A2412;mov L0x7ffff78bb51d A2512;mov L0x7ffff78bb51e A2612;
mov L0x7ffff78bb51f A2712;mov L0x7ffff78bb520 A2812;mov L0x7ffff78bb521 A2912;
mov L0x7ffff78bb522 A2a12;mov L0x7ffff78bb523 A2b12;mov L0x7ffff78bb524 A2c12;
mov L0x7ffff78bb525 A2d12;mov L0x7ffff78bb526 A2e12;mov L0x7ffff78bb527 A2f12;
mov L0x7ffff78bb528 A3012;mov L0x7ffff78bb529 A3112;mov L0x7ffff78bb52a A3212;
mov L0x7ffff78bb52b A3312;mov L0x7ffff78bb52c A3412;mov L0x7ffff78bb52d A3512;
mov L0x7ffff78bb52e A3612;mov L0x7ffff78bb52f A3712;mov L0x7ffff78bb530 A3812;
mov L0x7ffff78bb531 A3912;mov L0x7ffff78bb532 A3a12;mov L0x7ffff78bb533 A3b12;
mov L0x7ffff78bb534 A3c12;mov L0x7ffff78bb535 A3d12;mov L0x7ffff78bb536 A3e12;
mov L0x7ffff78bb537 A3f12;mov L0x7ffff78bb538 A4012;mov L0x7ffff78bb539 A4112;
mov L0x7ffff78bb53a A4212;mov L0x7ffff78bb53b A4312;
mov L0x7ffff78bb53c A0013;mov L0x7ffff78bb53d A0113;mov L0x7ffff78bb53e A0213;
mov L0x7ffff78bb53f A0313;mov L0x7ffff78bb540 A0413;mov L0x7ffff78bb541 A0513;
mov L0x7ffff78bb542 A0613;mov L0x7ffff78bb543 A0713;mov L0x7ffff78bb544 A0813;
mov L0x7ffff78bb545 A0913;mov L0x7ffff78bb546 A0a13;mov L0x7ffff78bb547 A0b13;
mov L0x7ffff78bb548 A0c13;mov L0x7ffff78bb549 A0d13;mov L0x7ffff78bb54a A0e13;
mov L0x7ffff78bb54b A0f13;mov L0x7ffff78bb54c A1013;mov L0x7ffff78bb54d A1113;
mov L0x7ffff78bb54e A1213;mov L0x7ffff78bb54f A1313;mov L0x7ffff78bb550 A1413;
mov L0x7ffff78bb551 A1513;mov L0x7ffff78bb552 A1613;mov L0x7ffff78bb553 A1713;
mov L0x7ffff78bb554 A1813;mov L0x7ffff78bb555 A1913;mov L0x7ffff78bb556 A1a13;
mov L0x7ffff78bb557 A1b13;mov L0x7ffff78bb558 A1c13;mov L0x7ffff78bb559 A1d13;
mov L0x7ffff78bb55a A1e13;mov L0x7ffff78bb55b A1f13;mov L0x7ffff78bb55c A2013;
mov L0x7ffff78bb55d A2113;mov L0x7ffff78bb55e A2213;mov L0x7ffff78bb55f A2313;
mov L0x7ffff78bb560 A2413;mov L0x7ffff78bb561 A2513;mov L0x7ffff78bb562 A2613;
mov L0x7ffff78bb563 A2713;mov L0x7ffff78bb564 A2813;mov L0x7ffff78bb565 A2913;
mov L0x7ffff78bb566 A2a13;mov L0x7ffff78bb567 A2b13;mov L0x7ffff78bb568 A2c13;
mov L0x7ffff78bb569 A2d13;mov L0x7ffff78bb56a A2e13;mov L0x7ffff78bb56b A2f13;
mov L0x7ffff78bb56c A3013;mov L0x7ffff78bb56d A3113;mov L0x7ffff78bb56e A3213;
mov L0x7ffff78bb56f A3313;mov L0x7ffff78bb570 A3413;mov L0x7ffff78bb571 A3513;
mov L0x7ffff78bb572 A3613;mov L0x7ffff78bb573 A3713;mov L0x7ffff78bb574 A3813;
mov L0x7ffff78bb575 A3913;mov L0x7ffff78bb576 A3a13;mov L0x7ffff78bb577 A3b13;
mov L0x7ffff78bb578 A3c13;mov L0x7ffff78bb579 A3d13;mov L0x7ffff78bb57a A3e13;
mov L0x7ffff78bb57b A3f13;mov L0x7ffff78bb57c A4013;mov L0x7ffff78bb57d A4113;
mov L0x7ffff78bb57e A4213;mov L0x7ffff78bb57f A4313;
mov L0x7ffff78bb580 A0014;mov L0x7ffff78bb581 A0114;mov L0x7ffff78bb582 A0214;
mov L0x7ffff78bb583 A0314;mov L0x7ffff78bb584 A0414;mov L0x7ffff78bb585 A0514;
mov L0x7ffff78bb586 A0614;mov L0x7ffff78bb587 A0714;mov L0x7ffff78bb588 A0814;
mov L0x7ffff78bb589 A0914;mov L0x7ffff78bb58a A0a14;mov L0x7ffff78bb58b A0b14;
mov L0x7ffff78bb58c A0c14;mov L0x7ffff78bb58d A0d14;mov L0x7ffff78bb58e A0e14;
mov L0x7ffff78bb58f A0f14;mov L0x7ffff78bb590 A1014;mov L0x7ffff78bb591 A1114;
mov L0x7ffff78bb592 A1214;mov L0x7ffff78bb593 A1314;mov L0x7ffff78bb594 A1414;
mov L0x7ffff78bb595 A1514;mov L0x7ffff78bb596 A1614;mov L0x7ffff78bb597 A1714;
mov L0x7ffff78bb598 A1814;mov L0x7ffff78bb599 A1914;mov L0x7ffff78bb59a A1a14;
mov L0x7ffff78bb59b A1b14;mov L0x7ffff78bb59c A1c14;mov L0x7ffff78bb59d A1d14;
mov L0x7ffff78bb59e A1e14;mov L0x7ffff78bb59f A1f14;mov L0x7ffff78bb5a0 A2014;
mov L0x7ffff78bb5a1 A2114;mov L0x7ffff78bb5a2 A2214;mov L0x7ffff78bb5a3 A2314;
mov L0x7ffff78bb5a4 A2414;mov L0x7ffff78bb5a5 A2514;mov L0x7ffff78bb5a6 A2614;
mov L0x7ffff78bb5a7 A2714;mov L0x7ffff78bb5a8 A2814;mov L0x7ffff78bb5a9 A2914;
mov L0x7ffff78bb5aa A2a14;mov L0x7ffff78bb5ab A2b14;mov L0x7ffff78bb5ac A2c14;
mov L0x7ffff78bb5ad A2d14;mov L0x7ffff78bb5ae A2e14;mov L0x7ffff78bb5af A2f14;
mov L0x7ffff78bb5b0 A3014;mov L0x7ffff78bb5b1 A3114;mov L0x7ffff78bb5b2 A3214;
mov L0x7ffff78bb5b3 A3314;mov L0x7ffff78bb5b4 A3414;mov L0x7ffff78bb5b5 A3514;
mov L0x7ffff78bb5b6 A3614;mov L0x7ffff78bb5b7 A3714;mov L0x7ffff78bb5b8 A3814;
mov L0x7ffff78bb5b9 A3914;mov L0x7ffff78bb5ba A3a14;mov L0x7ffff78bb5bb A3b14;
mov L0x7ffff78bb5bc A3c14;mov L0x7ffff78bb5bd A3d14;mov L0x7ffff78bb5be A3e14;
mov L0x7ffff78bb5bf A3f14;mov L0x7ffff78bb5c0 A4014;mov L0x7ffff78bb5c1 A4114;
mov L0x7ffff78bb5c2 A4214;mov L0x7ffff78bb5c3 A4314;
mov L0x7ffff78bb5c4 A0015;mov L0x7ffff78bb5c5 A0115;mov L0x7ffff78bb5c6 A0215;
mov L0x7ffff78bb5c7 A0315;mov L0x7ffff78bb5c8 A0415;mov L0x7ffff78bb5c9 A0515;
mov L0x7ffff78bb5ca A0615;mov L0x7ffff78bb5cb A0715;mov L0x7ffff78bb5cc A0815;
mov L0x7ffff78bb5cd A0915;mov L0x7ffff78bb5ce A0a15;mov L0x7ffff78bb5cf A0b15;
mov L0x7ffff78bb5d0 A0c15;mov L0x7ffff78bb5d1 A0d15;mov L0x7ffff78bb5d2 A0e15;
mov L0x7ffff78bb5d3 A0f15;mov L0x7ffff78bb5d4 A1015;mov L0x7ffff78bb5d5 A1115;
mov L0x7ffff78bb5d6 A1215;mov L0x7ffff78bb5d7 A1315;mov L0x7ffff78bb5d8 A1415;
mov L0x7ffff78bb5d9 A1515;mov L0x7ffff78bb5da A1615;mov L0x7ffff78bb5db A1715;
mov L0x7ffff78bb5dc A1815;mov L0x7ffff78bb5dd A1915;mov L0x7ffff78bb5de A1a15;
mov L0x7ffff78bb5df A1b15;mov L0x7ffff78bb5e0 A1c15;mov L0x7ffff78bb5e1 A1d15;
mov L0x7ffff78bb5e2 A1e15;mov L0x7ffff78bb5e3 A1f15;mov L0x7ffff78bb5e4 A2015;
mov L0x7ffff78bb5e5 A2115;mov L0x7ffff78bb5e6 A2215;mov L0x7ffff78bb5e7 A2315;
mov L0x7ffff78bb5e8 A2415;mov L0x7ffff78bb5e9 A2515;mov L0x7ffff78bb5ea A2615;
mov L0x7ffff78bb5eb A2715;mov L0x7ffff78bb5ec A2815;mov L0x7ffff78bb5ed A2915;
mov L0x7ffff78bb5ee A2a15;mov L0x7ffff78bb5ef A2b15;mov L0x7ffff78bb5f0 A2c15;
mov L0x7ffff78bb5f1 A2d15;mov L0x7ffff78bb5f2 A2e15;mov L0x7ffff78bb5f3 A2f15;
mov L0x7ffff78bb5f4 A3015;mov L0x7ffff78bb5f5 A3115;mov L0x7ffff78bb5f6 A3215;
mov L0x7ffff78bb5f7 A3315;mov L0x7ffff78bb5f8 A3415;mov L0x7ffff78bb5f9 A3515;
mov L0x7ffff78bb5fa A3615;mov L0x7ffff78bb5fb A3715;mov L0x7ffff78bb5fc A3815;
mov L0x7ffff78bb5fd A3915;mov L0x7ffff78bb5fe A3a15;mov L0x7ffff78bb5ff A3b15;
mov L0x7ffff78bb600 A3c15;mov L0x7ffff78bb601 A3d15;mov L0x7ffff78bb602 A3e15;
mov L0x7ffff78bb603 A3f15;mov L0x7ffff78bb604 A4015;mov L0x7ffff78bb605 A4115;
mov L0x7ffff78bb606 A4215;mov L0x7ffff78bb607 A4315;
mov L0x7ffff78bb608 A0016;mov L0x7ffff78bb609 A0116;mov L0x7ffff78bb60a A0216;
mov L0x7ffff78bb60b A0316;mov L0x7ffff78bb60c A0416;mov L0x7ffff78bb60d A0516;
mov L0x7ffff78bb60e A0616;mov L0x7ffff78bb60f A0716;mov L0x7ffff78bb610 A0816;
mov L0x7ffff78bb611 A0916;mov L0x7ffff78bb612 A0a16;mov L0x7ffff78bb613 A0b16;
mov L0x7ffff78bb614 A0c16;mov L0x7ffff78bb615 A0d16;mov L0x7ffff78bb616 A0e16;
mov L0x7ffff78bb617 A0f16;mov L0x7ffff78bb618 A1016;mov L0x7ffff78bb619 A1116;
mov L0x7ffff78bb61a A1216;mov L0x7ffff78bb61b A1316;mov L0x7ffff78bb61c A1416;
mov L0x7ffff78bb61d A1516;mov L0x7ffff78bb61e A1616;mov L0x7ffff78bb61f A1716;
mov L0x7ffff78bb620 A1816;mov L0x7ffff78bb621 A1916;mov L0x7ffff78bb622 A1a16;
mov L0x7ffff78bb623 A1b16;mov L0x7ffff78bb624 A1c16;mov L0x7ffff78bb625 A1d16;
mov L0x7ffff78bb626 A1e16;mov L0x7ffff78bb627 A1f16;mov L0x7ffff78bb628 A2016;
mov L0x7ffff78bb629 A2116;mov L0x7ffff78bb62a A2216;mov L0x7ffff78bb62b A2316;
mov L0x7ffff78bb62c A2416;mov L0x7ffff78bb62d A2516;mov L0x7ffff78bb62e A2616;
mov L0x7ffff78bb62f A2716;mov L0x7ffff78bb630 A2816;mov L0x7ffff78bb631 A2916;
mov L0x7ffff78bb632 A2a16;mov L0x7ffff78bb633 A2b16;mov L0x7ffff78bb634 A2c16;
mov L0x7ffff78bb635 A2d16;mov L0x7ffff78bb636 A2e16;mov L0x7ffff78bb637 A2f16;
mov L0x7ffff78bb638 A3016;mov L0x7ffff78bb639 A3116;mov L0x7ffff78bb63a A3216;
mov L0x7ffff78bb63b A3316;mov L0x7ffff78bb63c A3416;mov L0x7ffff78bb63d A3516;
mov L0x7ffff78bb63e A3616;mov L0x7ffff78bb63f A3716;mov L0x7ffff78bb640 A3816;
mov L0x7ffff78bb641 A3916;mov L0x7ffff78bb642 A3a16;mov L0x7ffff78bb643 A3b16;
mov L0x7ffff78bb644 A3c16;mov L0x7ffff78bb645 A3d16;mov L0x7ffff78bb646 A3e16;
mov L0x7ffff78bb647 A3f16;mov L0x7ffff78bb648 A4016;mov L0x7ffff78bb649 A4116;
mov L0x7ffff78bb64a A4216;mov L0x7ffff78bb64b A4316;
mov L0x7ffff78bb64c A0017;mov L0x7ffff78bb64d A0117;mov L0x7ffff78bb64e A0217;
mov L0x7ffff78bb64f A0317;mov L0x7ffff78bb650 A0417;mov L0x7ffff78bb651 A0517;
mov L0x7ffff78bb652 A0617;mov L0x7ffff78bb653 A0717;mov L0x7ffff78bb654 A0817;
mov L0x7ffff78bb655 A0917;mov L0x7ffff78bb656 A0a17;mov L0x7ffff78bb657 A0b17;
mov L0x7ffff78bb658 A0c17;mov L0x7ffff78bb659 A0d17;mov L0x7ffff78bb65a A0e17;
mov L0x7ffff78bb65b A0f17;mov L0x7ffff78bb65c A1017;mov L0x7ffff78bb65d A1117;
mov L0x7ffff78bb65e A1217;mov L0x7ffff78bb65f A1317;mov L0x7ffff78bb660 A1417;
mov L0x7ffff78bb661 A1517;mov L0x7ffff78bb662 A1617;mov L0x7ffff78bb663 A1717;
mov L0x7ffff78bb664 A1817;mov L0x7ffff78bb665 A1917;mov L0x7ffff78bb666 A1a17;
mov L0x7ffff78bb667 A1b17;mov L0x7ffff78bb668 A1c17;mov L0x7ffff78bb669 A1d17;
mov L0x7ffff78bb66a A1e17;mov L0x7ffff78bb66b A1f17;mov L0x7ffff78bb66c A2017;
mov L0x7ffff78bb66d A2117;mov L0x7ffff78bb66e A2217;mov L0x7ffff78bb66f A2317;
mov L0x7ffff78bb670 A2417;mov L0x7ffff78bb671 A2517;mov L0x7ffff78bb672 A2617;
mov L0x7ffff78bb673 A2717;mov L0x7ffff78bb674 A2817;mov L0x7ffff78bb675 A2917;
mov L0x7ffff78bb676 A2a17;mov L0x7ffff78bb677 A2b17;mov L0x7ffff78bb678 A2c17;
mov L0x7ffff78bb679 A2d17;mov L0x7ffff78bb67a A2e17;mov L0x7ffff78bb67b A2f17;
mov L0x7ffff78bb67c A3017;mov L0x7ffff78bb67d A3117;mov L0x7ffff78bb67e A3217;
mov L0x7ffff78bb67f A3317;mov L0x7ffff78bb680 A3417;mov L0x7ffff78bb681 A3517;
mov L0x7ffff78bb682 A3617;mov L0x7ffff78bb683 A3717;mov L0x7ffff78bb684 A3817;
mov L0x7ffff78bb685 A3917;mov L0x7ffff78bb686 A3a17;mov L0x7ffff78bb687 A3b17;
mov L0x7ffff78bb688 A3c17;mov L0x7ffff78bb689 A3d17;mov L0x7ffff78bb68a A3e17;
mov L0x7ffff78bb68b A3f17;mov L0x7ffff78bb68c A4017;mov L0x7ffff78bb68d A4117;
mov L0x7ffff78bb68e A4217;mov L0x7ffff78bb68f A4317;
mov L0x7ffff78bb690 A0018;mov L0x7ffff78bb691 A0118;mov L0x7ffff78bb692 A0218;
mov L0x7ffff78bb693 A0318;mov L0x7ffff78bb694 A0418;mov L0x7ffff78bb695 A0518;
mov L0x7ffff78bb696 A0618;mov L0x7ffff78bb697 A0718;mov L0x7ffff78bb698 A0818;
mov L0x7ffff78bb699 A0918;mov L0x7ffff78bb69a A0a18;mov L0x7ffff78bb69b A0b18;
mov L0x7ffff78bb69c A0c18;mov L0x7ffff78bb69d A0d18;mov L0x7ffff78bb69e A0e18;
mov L0x7ffff78bb69f A0f18;mov L0x7ffff78bb6a0 A1018;mov L0x7ffff78bb6a1 A1118;
mov L0x7ffff78bb6a2 A1218;mov L0x7ffff78bb6a3 A1318;mov L0x7ffff78bb6a4 A1418;
mov L0x7ffff78bb6a5 A1518;mov L0x7ffff78bb6a6 A1618;mov L0x7ffff78bb6a7 A1718;
mov L0x7ffff78bb6a8 A1818;mov L0x7ffff78bb6a9 A1918;mov L0x7ffff78bb6aa A1a18;
mov L0x7ffff78bb6ab A1b18;mov L0x7ffff78bb6ac A1c18;mov L0x7ffff78bb6ad A1d18;
mov L0x7ffff78bb6ae A1e18;mov L0x7ffff78bb6af A1f18;mov L0x7ffff78bb6b0 A2018;
mov L0x7ffff78bb6b1 A2118;mov L0x7ffff78bb6b2 A2218;mov L0x7ffff78bb6b3 A2318;
mov L0x7ffff78bb6b4 A2418;mov L0x7ffff78bb6b5 A2518;mov L0x7ffff78bb6b6 A2618;
mov L0x7ffff78bb6b7 A2718;mov L0x7ffff78bb6b8 A2818;mov L0x7ffff78bb6b9 A2918;
mov L0x7ffff78bb6ba A2a18;mov L0x7ffff78bb6bb A2b18;mov L0x7ffff78bb6bc A2c18;
mov L0x7ffff78bb6bd A2d18;mov L0x7ffff78bb6be A2e18;mov L0x7ffff78bb6bf A2f18;
mov L0x7ffff78bb6c0 A3018;mov L0x7ffff78bb6c1 A3118;mov L0x7ffff78bb6c2 A3218;
mov L0x7ffff78bb6c3 A3318;mov L0x7ffff78bb6c4 A3418;mov L0x7ffff78bb6c5 A3518;
mov L0x7ffff78bb6c6 A3618;mov L0x7ffff78bb6c7 A3718;mov L0x7ffff78bb6c8 A3818;
mov L0x7ffff78bb6c9 A3918;mov L0x7ffff78bb6ca A3a18;mov L0x7ffff78bb6cb A3b18;
mov L0x7ffff78bb6cc A3c18;mov L0x7ffff78bb6cd A3d18;mov L0x7ffff78bb6ce A3e18;
mov L0x7ffff78bb6cf A3f18;mov L0x7ffff78bb6d0 A4018;mov L0x7ffff78bb6d1 A4118;
mov L0x7ffff78bb6d2 A4218;mov L0x7ffff78bb6d3 A4318;
mov L0x7ffff78bb6d4 A0019;mov L0x7ffff78bb6d5 A0119;mov L0x7ffff78bb6d6 A0219;
mov L0x7ffff78bb6d7 A0319;mov L0x7ffff78bb6d8 A0419;mov L0x7ffff78bb6d9 A0519;
mov L0x7ffff78bb6da A0619;mov L0x7ffff78bb6db A0719;mov L0x7ffff78bb6dc A0819;
mov L0x7ffff78bb6dd A0919;mov L0x7ffff78bb6de A0a19;mov L0x7ffff78bb6df A0b19;
mov L0x7ffff78bb6e0 A0c19;mov L0x7ffff78bb6e1 A0d19;mov L0x7ffff78bb6e2 A0e19;
mov L0x7ffff78bb6e3 A0f19;mov L0x7ffff78bb6e4 A1019;mov L0x7ffff78bb6e5 A1119;
mov L0x7ffff78bb6e6 A1219;mov L0x7ffff78bb6e7 A1319;mov L0x7ffff78bb6e8 A1419;
mov L0x7ffff78bb6e9 A1519;mov L0x7ffff78bb6ea A1619;mov L0x7ffff78bb6eb A1719;
mov L0x7ffff78bb6ec A1819;mov L0x7ffff78bb6ed A1919;mov L0x7ffff78bb6ee A1a19;
mov L0x7ffff78bb6ef A1b19;mov L0x7ffff78bb6f0 A1c19;mov L0x7ffff78bb6f1 A1d19;
mov L0x7ffff78bb6f2 A1e19;mov L0x7ffff78bb6f3 A1f19;mov L0x7ffff78bb6f4 A2019;
mov L0x7ffff78bb6f5 A2119;mov L0x7ffff78bb6f6 A2219;mov L0x7ffff78bb6f7 A2319;
mov L0x7ffff78bb6f8 A2419;mov L0x7ffff78bb6f9 A2519;mov L0x7ffff78bb6fa A2619;
mov L0x7ffff78bb6fb A2719;mov L0x7ffff78bb6fc A2819;mov L0x7ffff78bb6fd A2919;
mov L0x7ffff78bb6fe A2a19;mov L0x7ffff78bb6ff A2b19;mov L0x7ffff78bb700 A2c19;
mov L0x7ffff78bb701 A2d19;mov L0x7ffff78bb702 A2e19;mov L0x7ffff78bb703 A2f19;
mov L0x7ffff78bb704 A3019;mov L0x7ffff78bb705 A3119;mov L0x7ffff78bb706 A3219;
mov L0x7ffff78bb707 A3319;mov L0x7ffff78bb708 A3419;mov L0x7ffff78bb709 A3519;
mov L0x7ffff78bb70a A3619;mov L0x7ffff78bb70b A3719;mov L0x7ffff78bb70c A3819;
mov L0x7ffff78bb70d A3919;mov L0x7ffff78bb70e A3a19;mov L0x7ffff78bb70f A3b19;
mov L0x7ffff78bb710 A3c19;mov L0x7ffff78bb711 A3d19;mov L0x7ffff78bb712 A3e19;
mov L0x7ffff78bb713 A3f19;mov L0x7ffff78bb714 A4019;mov L0x7ffff78bb715 A4119;
mov L0x7ffff78bb716 A4219;mov L0x7ffff78bb717 A4319;
mov L0x7ffff78bb718 A001a;mov L0x7ffff78bb719 A011a;mov L0x7ffff78bb71a A021a;
mov L0x7ffff78bb71b A031a;mov L0x7ffff78bb71c A041a;mov L0x7ffff78bb71d A051a;
mov L0x7ffff78bb71e A061a;mov L0x7ffff78bb71f A071a;mov L0x7ffff78bb720 A081a;
mov L0x7ffff78bb721 A091a;mov L0x7ffff78bb722 A0a1a;mov L0x7ffff78bb723 A0b1a;
mov L0x7ffff78bb724 A0c1a;mov L0x7ffff78bb725 A0d1a;mov L0x7ffff78bb726 A0e1a;
mov L0x7ffff78bb727 A0f1a;mov L0x7ffff78bb728 A101a;mov L0x7ffff78bb729 A111a;
mov L0x7ffff78bb72a A121a;mov L0x7ffff78bb72b A131a;mov L0x7ffff78bb72c A141a;
mov L0x7ffff78bb72d A151a;mov L0x7ffff78bb72e A161a;mov L0x7ffff78bb72f A171a;
mov L0x7ffff78bb730 A181a;mov L0x7ffff78bb731 A191a;mov L0x7ffff78bb732 A1a1a;
mov L0x7ffff78bb733 A1b1a;mov L0x7ffff78bb734 A1c1a;mov L0x7ffff78bb735 A1d1a;
mov L0x7ffff78bb736 A1e1a;mov L0x7ffff78bb737 A1f1a;mov L0x7ffff78bb738 A201a;
mov L0x7ffff78bb739 A211a;mov L0x7ffff78bb73a A221a;mov L0x7ffff78bb73b A231a;
mov L0x7ffff78bb73c A241a;mov L0x7ffff78bb73d A251a;mov L0x7ffff78bb73e A261a;
mov L0x7ffff78bb73f A271a;mov L0x7ffff78bb740 A281a;mov L0x7ffff78bb741 A291a;
mov L0x7ffff78bb742 A2a1a;mov L0x7ffff78bb743 A2b1a;mov L0x7ffff78bb744 A2c1a;
mov L0x7ffff78bb745 A2d1a;mov L0x7ffff78bb746 A2e1a;mov L0x7ffff78bb747 A2f1a;
mov L0x7ffff78bb748 A301a;mov L0x7ffff78bb749 A311a;mov L0x7ffff78bb74a A321a;
mov L0x7ffff78bb74b A331a;mov L0x7ffff78bb74c A341a;mov L0x7ffff78bb74d A351a;
mov L0x7ffff78bb74e A361a;mov L0x7ffff78bb74f A371a;mov L0x7ffff78bb750 A381a;
mov L0x7ffff78bb751 A391a;mov L0x7ffff78bb752 A3a1a;mov L0x7ffff78bb753 A3b1a;
mov L0x7ffff78bb754 A3c1a;mov L0x7ffff78bb755 A3d1a;mov L0x7ffff78bb756 A3e1a;
mov L0x7ffff78bb757 A3f1a;mov L0x7ffff78bb758 A401a;mov L0x7ffff78bb759 A411a;
mov L0x7ffff78bb75a A421a;mov L0x7ffff78bb75b A431a;
mov L0x7ffff78bb75c A001b;mov L0x7ffff78bb75d A011b;mov L0x7ffff78bb75e A021b;
mov L0x7ffff78bb75f A031b;mov L0x7ffff78bb760 A041b;mov L0x7ffff78bb761 A051b;
mov L0x7ffff78bb762 A061b;mov L0x7ffff78bb763 A071b;mov L0x7ffff78bb764 A081b;
mov L0x7ffff78bb765 A091b;mov L0x7ffff78bb766 A0a1b;mov L0x7ffff78bb767 A0b1b;
mov L0x7ffff78bb768 A0c1b;mov L0x7ffff78bb769 A0d1b;mov L0x7ffff78bb76a A0e1b;
mov L0x7ffff78bb76b A0f1b;mov L0x7ffff78bb76c A101b;mov L0x7ffff78bb76d A111b;
mov L0x7ffff78bb76e A121b;mov L0x7ffff78bb76f A131b;mov L0x7ffff78bb770 A141b;
mov L0x7ffff78bb771 A151b;mov L0x7ffff78bb772 A161b;mov L0x7ffff78bb773 A171b;
mov L0x7ffff78bb774 A181b;mov L0x7ffff78bb775 A191b;mov L0x7ffff78bb776 A1a1b;
mov L0x7ffff78bb777 A1b1b;mov L0x7ffff78bb778 A1c1b;mov L0x7ffff78bb779 A1d1b;
mov L0x7ffff78bb77a A1e1b;mov L0x7ffff78bb77b A1f1b;mov L0x7ffff78bb77c A201b;
mov L0x7ffff78bb77d A211b;mov L0x7ffff78bb77e A221b;mov L0x7ffff78bb77f A231b;
mov L0x7ffff78bb780 A241b;mov L0x7ffff78bb781 A251b;mov L0x7ffff78bb782 A261b;
mov L0x7ffff78bb783 A271b;mov L0x7ffff78bb784 A281b;mov L0x7ffff78bb785 A291b;
mov L0x7ffff78bb786 A2a1b;mov L0x7ffff78bb787 A2b1b;mov L0x7ffff78bb788 A2c1b;
mov L0x7ffff78bb789 A2d1b;mov L0x7ffff78bb78a A2e1b;mov L0x7ffff78bb78b A2f1b;
mov L0x7ffff78bb78c A301b;mov L0x7ffff78bb78d A311b;mov L0x7ffff78bb78e A321b;
mov L0x7ffff78bb78f A331b;mov L0x7ffff78bb790 A341b;mov L0x7ffff78bb791 A351b;
mov L0x7ffff78bb792 A361b;mov L0x7ffff78bb793 A371b;mov L0x7ffff78bb794 A381b;
mov L0x7ffff78bb795 A391b;mov L0x7ffff78bb796 A3a1b;mov L0x7ffff78bb797 A3b1b;
mov L0x7ffff78bb798 A3c1b;mov L0x7ffff78bb799 A3d1b;mov L0x7ffff78bb79a A3e1b;
mov L0x7ffff78bb79b A3f1b;mov L0x7ffff78bb79c A401b;mov L0x7ffff78bb79d A411b;
mov L0x7ffff78bb79e A421b;mov L0x7ffff78bb79f A431b;
mov L0x7ffff78bb7a0 A001c;mov L0x7ffff78bb7a1 A011c;mov L0x7ffff78bb7a2 A021c;
mov L0x7ffff78bb7a3 A031c;mov L0x7ffff78bb7a4 A041c;mov L0x7ffff78bb7a5 A051c;
mov L0x7ffff78bb7a6 A061c;mov L0x7ffff78bb7a7 A071c;mov L0x7ffff78bb7a8 A081c;
mov L0x7ffff78bb7a9 A091c;mov L0x7ffff78bb7aa A0a1c;mov L0x7ffff78bb7ab A0b1c;
mov L0x7ffff78bb7ac A0c1c;mov L0x7ffff78bb7ad A0d1c;mov L0x7ffff78bb7ae A0e1c;
mov L0x7ffff78bb7af A0f1c;mov L0x7ffff78bb7b0 A101c;mov L0x7ffff78bb7b1 A111c;
mov L0x7ffff78bb7b2 A121c;mov L0x7ffff78bb7b3 A131c;mov L0x7ffff78bb7b4 A141c;
mov L0x7ffff78bb7b5 A151c;mov L0x7ffff78bb7b6 A161c;mov L0x7ffff78bb7b7 A171c;
mov L0x7ffff78bb7b8 A181c;mov L0x7ffff78bb7b9 A191c;mov L0x7ffff78bb7ba A1a1c;
mov L0x7ffff78bb7bb A1b1c;mov L0x7ffff78bb7bc A1c1c;mov L0x7ffff78bb7bd A1d1c;
mov L0x7ffff78bb7be A1e1c;mov L0x7ffff78bb7bf A1f1c;mov L0x7ffff78bb7c0 A201c;
mov L0x7ffff78bb7c1 A211c;mov L0x7ffff78bb7c2 A221c;mov L0x7ffff78bb7c3 A231c;
mov L0x7ffff78bb7c4 A241c;mov L0x7ffff78bb7c5 A251c;mov L0x7ffff78bb7c6 A261c;
mov L0x7ffff78bb7c7 A271c;mov L0x7ffff78bb7c8 A281c;mov L0x7ffff78bb7c9 A291c;
mov L0x7ffff78bb7ca A2a1c;mov L0x7ffff78bb7cb A2b1c;mov L0x7ffff78bb7cc A2c1c;
mov L0x7ffff78bb7cd A2d1c;mov L0x7ffff78bb7ce A2e1c;mov L0x7ffff78bb7cf A2f1c;
mov L0x7ffff78bb7d0 A301c;mov L0x7ffff78bb7d1 A311c;mov L0x7ffff78bb7d2 A321c;
mov L0x7ffff78bb7d3 A331c;mov L0x7ffff78bb7d4 A341c;mov L0x7ffff78bb7d5 A351c;
mov L0x7ffff78bb7d6 A361c;mov L0x7ffff78bb7d7 A371c;mov L0x7ffff78bb7d8 A381c;
mov L0x7ffff78bb7d9 A391c;mov L0x7ffff78bb7da A3a1c;mov L0x7ffff78bb7db A3b1c;
mov L0x7ffff78bb7dc A3c1c;mov L0x7ffff78bb7dd A3d1c;mov L0x7ffff78bb7de A3e1c;
mov L0x7ffff78bb7df A3f1c;mov L0x7ffff78bb7e0 A401c;mov L0x7ffff78bb7e1 A411c;
mov L0x7ffff78bb7e2 A421c;mov L0x7ffff78bb7e3 A431c;
mov L0x7ffff78bb7e4 A001d;mov L0x7ffff78bb7e5 A011d;mov L0x7ffff78bb7e6 A021d;
mov L0x7ffff78bb7e7 A031d;mov L0x7ffff78bb7e8 A041d;mov L0x7ffff78bb7e9 A051d;
mov L0x7ffff78bb7ea A061d;mov L0x7ffff78bb7eb A071d;mov L0x7ffff78bb7ec A081d;
mov L0x7ffff78bb7ed A091d;mov L0x7ffff78bb7ee A0a1d;mov L0x7ffff78bb7ef A0b1d;
mov L0x7ffff78bb7f0 A0c1d;mov L0x7ffff78bb7f1 A0d1d;mov L0x7ffff78bb7f2 A0e1d;
mov L0x7ffff78bb7f3 A0f1d;mov L0x7ffff78bb7f4 A101d;mov L0x7ffff78bb7f5 A111d;
mov L0x7ffff78bb7f6 A121d;mov L0x7ffff78bb7f7 A131d;mov L0x7ffff78bb7f8 A141d;
mov L0x7ffff78bb7f9 A151d;mov L0x7ffff78bb7fa A161d;mov L0x7ffff78bb7fb A171d;
mov L0x7ffff78bb7fc A181d;mov L0x7ffff78bb7fd A191d;mov L0x7ffff78bb7fe A1a1d;
mov L0x7ffff78bb7ff A1b1d;mov L0x7ffff78bb800 A1c1d;mov L0x7ffff78bb801 A1d1d;
mov L0x7ffff78bb802 A1e1d;mov L0x7ffff78bb803 A1f1d;mov L0x7ffff78bb804 A201d;
mov L0x7ffff78bb805 A211d;mov L0x7ffff78bb806 A221d;mov L0x7ffff78bb807 A231d;
mov L0x7ffff78bb808 A241d;mov L0x7ffff78bb809 A251d;mov L0x7ffff78bb80a A261d;
mov L0x7ffff78bb80b A271d;mov L0x7ffff78bb80c A281d;mov L0x7ffff78bb80d A291d;
mov L0x7ffff78bb80e A2a1d;mov L0x7ffff78bb80f A2b1d;mov L0x7ffff78bb810 A2c1d;
mov L0x7ffff78bb811 A2d1d;mov L0x7ffff78bb812 A2e1d;mov L0x7ffff78bb813 A2f1d;
mov L0x7ffff78bb814 A301d;mov L0x7ffff78bb815 A311d;mov L0x7ffff78bb816 A321d;
mov L0x7ffff78bb817 A331d;mov L0x7ffff78bb818 A341d;mov L0x7ffff78bb819 A351d;
mov L0x7ffff78bb81a A361d;mov L0x7ffff78bb81b A371d;mov L0x7ffff78bb81c A381d;
mov L0x7ffff78bb81d A391d;mov L0x7ffff78bb81e A3a1d;mov L0x7ffff78bb81f A3b1d;
mov L0x7ffff78bb820 A3c1d;mov L0x7ffff78bb821 A3d1d;mov L0x7ffff78bb822 A3e1d;
mov L0x7ffff78bb823 A3f1d;mov L0x7ffff78bb824 A401d;mov L0x7ffff78bb825 A411d;
mov L0x7ffff78bb826 A421d;mov L0x7ffff78bb827 A431d;
mov L0x7ffff78bb828 A001e;mov L0x7ffff78bb829 A011e;mov L0x7ffff78bb82a A021e;
mov L0x7ffff78bb82b A031e;mov L0x7ffff78bb82c A041e;mov L0x7ffff78bb82d A051e;
mov L0x7ffff78bb82e A061e;mov L0x7ffff78bb82f A071e;mov L0x7ffff78bb830 A081e;
mov L0x7ffff78bb831 A091e;mov L0x7ffff78bb832 A0a1e;mov L0x7ffff78bb833 A0b1e;
mov L0x7ffff78bb834 A0c1e;mov L0x7ffff78bb835 A0d1e;mov L0x7ffff78bb836 A0e1e;
mov L0x7ffff78bb837 A0f1e;mov L0x7ffff78bb838 A101e;mov L0x7ffff78bb839 A111e;
mov L0x7ffff78bb83a A121e;mov L0x7ffff78bb83b A131e;mov L0x7ffff78bb83c A141e;
mov L0x7ffff78bb83d A151e;mov L0x7ffff78bb83e A161e;mov L0x7ffff78bb83f A171e;
mov L0x7ffff78bb840 A181e;mov L0x7ffff78bb841 A191e;mov L0x7ffff78bb842 A1a1e;
mov L0x7ffff78bb843 A1b1e;mov L0x7ffff78bb844 A1c1e;mov L0x7ffff78bb845 A1d1e;
mov L0x7ffff78bb846 A1e1e;mov L0x7ffff78bb847 A1f1e;mov L0x7ffff78bb848 A201e;
mov L0x7ffff78bb849 A211e;mov L0x7ffff78bb84a A221e;mov L0x7ffff78bb84b A231e;
mov L0x7ffff78bb84c A241e;mov L0x7ffff78bb84d A251e;mov L0x7ffff78bb84e A261e;
mov L0x7ffff78bb84f A271e;mov L0x7ffff78bb850 A281e;mov L0x7ffff78bb851 A291e;
mov L0x7ffff78bb852 A2a1e;mov L0x7ffff78bb853 A2b1e;mov L0x7ffff78bb854 A2c1e;
mov L0x7ffff78bb855 A2d1e;mov L0x7ffff78bb856 A2e1e;mov L0x7ffff78bb857 A2f1e;
mov L0x7ffff78bb858 A301e;mov L0x7ffff78bb859 A311e;mov L0x7ffff78bb85a A321e;
mov L0x7ffff78bb85b A331e;mov L0x7ffff78bb85c A341e;mov L0x7ffff78bb85d A351e;
mov L0x7ffff78bb85e A361e;mov L0x7ffff78bb85f A371e;mov L0x7ffff78bb860 A381e;
mov L0x7ffff78bb861 A391e;mov L0x7ffff78bb862 A3a1e;mov L0x7ffff78bb863 A3b1e;
mov L0x7ffff78bb864 A3c1e;mov L0x7ffff78bb865 A3d1e;mov L0x7ffff78bb866 A3e1e;
mov L0x7ffff78bb867 A3f1e;mov L0x7ffff78bb868 A401e;mov L0x7ffff78bb869 A411e;
mov L0x7ffff78bb86a A421e;mov L0x7ffff78bb86b A431e;
mov L0x7ffff78bb86c A001f;mov L0x7ffff78bb86d A011f;mov L0x7ffff78bb86e A021f;
mov L0x7ffff78bb86f A031f;mov L0x7ffff78bb870 A041f;mov L0x7ffff78bb871 A051f;
mov L0x7ffff78bb872 A061f;mov L0x7ffff78bb873 A071f;mov L0x7ffff78bb874 A081f;
mov L0x7ffff78bb875 A091f;mov L0x7ffff78bb876 A0a1f;mov L0x7ffff78bb877 A0b1f;
mov L0x7ffff78bb878 A0c1f;mov L0x7ffff78bb879 A0d1f;mov L0x7ffff78bb87a A0e1f;
mov L0x7ffff78bb87b A0f1f;mov L0x7ffff78bb87c A101f;mov L0x7ffff78bb87d A111f;
mov L0x7ffff78bb87e A121f;mov L0x7ffff78bb87f A131f;mov L0x7ffff78bb880 A141f;
mov L0x7ffff78bb881 A151f;mov L0x7ffff78bb882 A161f;mov L0x7ffff78bb883 A171f;
mov L0x7ffff78bb884 A181f;mov L0x7ffff78bb885 A191f;mov L0x7ffff78bb886 A1a1f;
mov L0x7ffff78bb887 A1b1f;mov L0x7ffff78bb888 A1c1f;mov L0x7ffff78bb889 A1d1f;
mov L0x7ffff78bb88a A1e1f;mov L0x7ffff78bb88b A1f1f;mov L0x7ffff78bb88c A201f;
mov L0x7ffff78bb88d A211f;mov L0x7ffff78bb88e A221f;mov L0x7ffff78bb88f A231f;
mov L0x7ffff78bb890 A241f;mov L0x7ffff78bb891 A251f;mov L0x7ffff78bb892 A261f;
mov L0x7ffff78bb893 A271f;mov L0x7ffff78bb894 A281f;mov L0x7ffff78bb895 A291f;
mov L0x7ffff78bb896 A2a1f;mov L0x7ffff78bb897 A2b1f;mov L0x7ffff78bb898 A2c1f;
mov L0x7ffff78bb899 A2d1f;mov L0x7ffff78bb89a A2e1f;mov L0x7ffff78bb89b A2f1f;
mov L0x7ffff78bb89c A301f;mov L0x7ffff78bb89d A311f;mov L0x7ffff78bb89e A321f;
mov L0x7ffff78bb89f A331f;mov L0x7ffff78bb8a0 A341f;mov L0x7ffff78bb8a1 A351f;
mov L0x7ffff78bb8a2 A361f;mov L0x7ffff78bb8a3 A371f;mov L0x7ffff78bb8a4 A381f;
mov L0x7ffff78bb8a5 A391f;mov L0x7ffff78bb8a6 A3a1f;mov L0x7ffff78bb8a7 A3b1f;
mov L0x7ffff78bb8a8 A3c1f;mov L0x7ffff78bb8a9 A3d1f;mov L0x7ffff78bb8aa A3e1f;
mov L0x7ffff78bb8ab A3f1f;mov L0x7ffff78bb8ac A401f;mov L0x7ffff78bb8ad A411f;
mov L0x7ffff78bb8ae A421f;mov L0x7ffff78bb8af A431f;
mov L0x7ffff78bb8b0 A0020;mov L0x7ffff78bb8b1 A0120;mov L0x7ffff78bb8b2 A0220;
mov L0x7ffff78bb8b3 A0320;mov L0x7ffff78bb8b4 A0420;mov L0x7ffff78bb8b5 A0520;
mov L0x7ffff78bb8b6 A0620;mov L0x7ffff78bb8b7 A0720;mov L0x7ffff78bb8b8 A0820;
mov L0x7ffff78bb8b9 A0920;mov L0x7ffff78bb8ba A0a20;mov L0x7ffff78bb8bb A0b20;
mov L0x7ffff78bb8bc A0c20;mov L0x7ffff78bb8bd A0d20;mov L0x7ffff78bb8be A0e20;
mov L0x7ffff78bb8bf A0f20;mov L0x7ffff78bb8c0 A1020;mov L0x7ffff78bb8c1 A1120;
mov L0x7ffff78bb8c2 A1220;mov L0x7ffff78bb8c3 A1320;mov L0x7ffff78bb8c4 A1420;
mov L0x7ffff78bb8c5 A1520;mov L0x7ffff78bb8c6 A1620;mov L0x7ffff78bb8c7 A1720;
mov L0x7ffff78bb8c8 A1820;mov L0x7ffff78bb8c9 A1920;mov L0x7ffff78bb8ca A1a20;
mov L0x7ffff78bb8cb A1b20;mov L0x7ffff78bb8cc A1c20;mov L0x7ffff78bb8cd A1d20;
mov L0x7ffff78bb8ce A1e20;mov L0x7ffff78bb8cf A1f20;mov L0x7ffff78bb8d0 A2020;
mov L0x7ffff78bb8d1 A2120;mov L0x7ffff78bb8d2 A2220;mov L0x7ffff78bb8d3 A2320;
mov L0x7ffff78bb8d4 A2420;mov L0x7ffff78bb8d5 A2520;mov L0x7ffff78bb8d6 A2620;
mov L0x7ffff78bb8d7 A2720;mov L0x7ffff78bb8d8 A2820;mov L0x7ffff78bb8d9 A2920;
mov L0x7ffff78bb8da A2a20;mov L0x7ffff78bb8db A2b20;mov L0x7ffff78bb8dc A2c20;
mov L0x7ffff78bb8dd A2d20;mov L0x7ffff78bb8de A2e20;mov L0x7ffff78bb8df A2f20;
mov L0x7ffff78bb8e0 A3020;mov L0x7ffff78bb8e1 A3120;mov L0x7ffff78bb8e2 A3220;
mov L0x7ffff78bb8e3 A3320;mov L0x7ffff78bb8e4 A3420;mov L0x7ffff78bb8e5 A3520;
mov L0x7ffff78bb8e6 A3620;mov L0x7ffff78bb8e7 A3720;mov L0x7ffff78bb8e8 A3820;
mov L0x7ffff78bb8e9 A3920;mov L0x7ffff78bb8ea A3a20;mov L0x7ffff78bb8eb A3b20;
mov L0x7ffff78bb8ec A3c20;mov L0x7ffff78bb8ed A3d20;mov L0x7ffff78bb8ee A3e20;
mov L0x7ffff78bb8ef A3f20;mov L0x7ffff78bb8f0 A4020;mov L0x7ffff78bb8f1 A4120;
mov L0x7ffff78bb8f2 A4220;mov L0x7ffff78bb8f3 A4320;
mov L0x7ffff78bb8f4 A0021;mov L0x7ffff78bb8f5 A0121;mov L0x7ffff78bb8f6 A0221;
mov L0x7ffff78bb8f7 A0321;mov L0x7ffff78bb8f8 A0421;mov L0x7ffff78bb8f9 A0521;
mov L0x7ffff78bb8fa A0621;mov L0x7ffff78bb8fb A0721;mov L0x7ffff78bb8fc A0821;
mov L0x7ffff78bb8fd A0921;mov L0x7ffff78bb8fe A0a21;mov L0x7ffff78bb8ff A0b21;
mov L0x7ffff78bb900 A0c21;mov L0x7ffff78bb901 A0d21;mov L0x7ffff78bb902 A0e21;
mov L0x7ffff78bb903 A0f21;mov L0x7ffff78bb904 A1021;mov L0x7ffff78bb905 A1121;
mov L0x7ffff78bb906 A1221;mov L0x7ffff78bb907 A1321;mov L0x7ffff78bb908 A1421;
mov L0x7ffff78bb909 A1521;mov L0x7ffff78bb90a A1621;mov L0x7ffff78bb90b A1721;
mov L0x7ffff78bb90c A1821;mov L0x7ffff78bb90d A1921;mov L0x7ffff78bb90e A1a21;
mov L0x7ffff78bb90f A1b21;mov L0x7ffff78bb910 A1c21;mov L0x7ffff78bb911 A1d21;
mov L0x7ffff78bb912 A1e21;mov L0x7ffff78bb913 A1f21;mov L0x7ffff78bb914 A2021;
mov L0x7ffff78bb915 A2121;mov L0x7ffff78bb916 A2221;mov L0x7ffff78bb917 A2321;
mov L0x7ffff78bb918 A2421;mov L0x7ffff78bb919 A2521;mov L0x7ffff78bb91a A2621;
mov L0x7ffff78bb91b A2721;mov L0x7ffff78bb91c A2821;mov L0x7ffff78bb91d A2921;
mov L0x7ffff78bb91e A2a21;mov L0x7ffff78bb91f A2b21;mov L0x7ffff78bb920 A2c21;
mov L0x7ffff78bb921 A2d21;mov L0x7ffff78bb922 A2e21;mov L0x7ffff78bb923 A2f21;
mov L0x7ffff78bb924 A3021;mov L0x7ffff78bb925 A3121;mov L0x7ffff78bb926 A3221;
mov L0x7ffff78bb927 A3321;mov L0x7ffff78bb928 A3421;mov L0x7ffff78bb929 A3521;
mov L0x7ffff78bb92a A3621;mov L0x7ffff78bb92b A3721;mov L0x7ffff78bb92c A3821;
mov L0x7ffff78bb92d A3921;mov L0x7ffff78bb92e A3a21;mov L0x7ffff78bb92f A3b21;
mov L0x7ffff78bb930 A3c21;mov L0x7ffff78bb931 A3d21;mov L0x7ffff78bb932 A3e21;
mov L0x7ffff78bb933 A3f21;mov L0x7ffff78bb934 A4021;mov L0x7ffff78bb935 A4121;
mov L0x7ffff78bb936 A4221;mov L0x7ffff78bb937 A4321;
mov L0x7ffff78bb938 A0022;mov L0x7ffff78bb939 A0122;mov L0x7ffff78bb93a A0222;
mov L0x7ffff78bb93b A0322;mov L0x7ffff78bb93c A0422;mov L0x7ffff78bb93d A0522;
mov L0x7ffff78bb93e A0622;mov L0x7ffff78bb93f A0722;mov L0x7ffff78bb940 A0822;
mov L0x7ffff78bb941 A0922;mov L0x7ffff78bb942 A0a22;mov L0x7ffff78bb943 A0b22;
mov L0x7ffff78bb944 A0c22;mov L0x7ffff78bb945 A0d22;mov L0x7ffff78bb946 A0e22;
mov L0x7ffff78bb947 A0f22;mov L0x7ffff78bb948 A1022;mov L0x7ffff78bb949 A1122;
mov L0x7ffff78bb94a A1222;mov L0x7ffff78bb94b A1322;mov L0x7ffff78bb94c A1422;
mov L0x7ffff78bb94d A1522;mov L0x7ffff78bb94e A1622;mov L0x7ffff78bb94f A1722;
mov L0x7ffff78bb950 A1822;mov L0x7ffff78bb951 A1922;mov L0x7ffff78bb952 A1a22;
mov L0x7ffff78bb953 A1b22;mov L0x7ffff78bb954 A1c22;mov L0x7ffff78bb955 A1d22;
mov L0x7ffff78bb956 A1e22;mov L0x7ffff78bb957 A1f22;mov L0x7ffff78bb958 A2022;
mov L0x7ffff78bb959 A2122;mov L0x7ffff78bb95a A2222;mov L0x7ffff78bb95b A2322;
mov L0x7ffff78bb95c A2422;mov L0x7ffff78bb95d A2522;mov L0x7ffff78bb95e A2622;
mov L0x7ffff78bb95f A2722;mov L0x7ffff78bb960 A2822;mov L0x7ffff78bb961 A2922;
mov L0x7ffff78bb962 A2a22;mov L0x7ffff78bb963 A2b22;mov L0x7ffff78bb964 A2c22;
mov L0x7ffff78bb965 A2d22;mov L0x7ffff78bb966 A2e22;mov L0x7ffff78bb967 A2f22;
mov L0x7ffff78bb968 A3022;mov L0x7ffff78bb969 A3122;mov L0x7ffff78bb96a A3222;
mov L0x7ffff78bb96b A3322;mov L0x7ffff78bb96c A3422;mov L0x7ffff78bb96d A3522;
mov L0x7ffff78bb96e A3622;mov L0x7ffff78bb96f A3722;mov L0x7ffff78bb970 A3822;
mov L0x7ffff78bb971 A3922;mov L0x7ffff78bb972 A3a22;mov L0x7ffff78bb973 A3b22;
mov L0x7ffff78bb974 A3c22;mov L0x7ffff78bb975 A3d22;mov L0x7ffff78bb976 A3e22;
mov L0x7ffff78bb977 A3f22;mov L0x7ffff78bb978 A4022;mov L0x7ffff78bb979 A4122;
mov L0x7ffff78bb97a A4222;mov L0x7ffff78bb97b A4322;
mov L0x7ffff78bb97c A0023;mov L0x7ffff78bb97d A0123;mov L0x7ffff78bb97e A0223;
mov L0x7ffff78bb97f A0323;mov L0x7ffff78bb980 A0423;mov L0x7ffff78bb981 A0523;
mov L0x7ffff78bb982 A0623;mov L0x7ffff78bb983 A0723;mov L0x7ffff78bb984 A0823;
mov L0x7ffff78bb985 A0923;mov L0x7ffff78bb986 A0a23;mov L0x7ffff78bb987 A0b23;
mov L0x7ffff78bb988 A0c23;mov L0x7ffff78bb989 A0d23;mov L0x7ffff78bb98a A0e23;
mov L0x7ffff78bb98b A0f23;mov L0x7ffff78bb98c A1023;mov L0x7ffff78bb98d A1123;
mov L0x7ffff78bb98e A1223;mov L0x7ffff78bb98f A1323;mov L0x7ffff78bb990 A1423;
mov L0x7ffff78bb991 A1523;mov L0x7ffff78bb992 A1623;mov L0x7ffff78bb993 A1723;
mov L0x7ffff78bb994 A1823;mov L0x7ffff78bb995 A1923;mov L0x7ffff78bb996 A1a23;
mov L0x7ffff78bb997 A1b23;mov L0x7ffff78bb998 A1c23;mov L0x7ffff78bb999 A1d23;
mov L0x7ffff78bb99a A1e23;mov L0x7ffff78bb99b A1f23;mov L0x7ffff78bb99c A2023;
mov L0x7ffff78bb99d A2123;mov L0x7ffff78bb99e A2223;mov L0x7ffff78bb99f A2323;
mov L0x7ffff78bb9a0 A2423;mov L0x7ffff78bb9a1 A2523;mov L0x7ffff78bb9a2 A2623;
mov L0x7ffff78bb9a3 A2723;mov L0x7ffff78bb9a4 A2823;mov L0x7ffff78bb9a5 A2923;
mov L0x7ffff78bb9a6 A2a23;mov L0x7ffff78bb9a7 A2b23;mov L0x7ffff78bb9a8 A2c23;
mov L0x7ffff78bb9a9 A2d23;mov L0x7ffff78bb9aa A2e23;mov L0x7ffff78bb9ab A2f23;
mov L0x7ffff78bb9ac A3023;mov L0x7ffff78bb9ad A3123;mov L0x7ffff78bb9ae A3223;
mov L0x7ffff78bb9af A3323;mov L0x7ffff78bb9b0 A3423;mov L0x7ffff78bb9b1 A3523;
mov L0x7ffff78bb9b2 A3623;mov L0x7ffff78bb9b3 A3723;mov L0x7ffff78bb9b4 A3823;
mov L0x7ffff78bb9b5 A3923;mov L0x7ffff78bb9b6 A3a23;mov L0x7ffff78bb9b7 A3b23;
mov L0x7ffff78bb9b8 A3c23;mov L0x7ffff78bb9b9 A3d23;mov L0x7ffff78bb9ba A3e23;
mov L0x7ffff78bb9bb A3f23;mov L0x7ffff78bb9bc A4023;mov L0x7ffff78bb9bd A4123;
mov L0x7ffff78bb9be A4223;mov L0x7ffff78bb9bf A4323;
mov L0x7ffff78bb9c0 A0024;mov L0x7ffff78bb9c1 A0124;mov L0x7ffff78bb9c2 A0224;
mov L0x7ffff78bb9c3 A0324;mov L0x7ffff78bb9c4 A0424;mov L0x7ffff78bb9c5 A0524;
mov L0x7ffff78bb9c6 A0624;mov L0x7ffff78bb9c7 A0724;mov L0x7ffff78bb9c8 A0824;
mov L0x7ffff78bb9c9 A0924;mov L0x7ffff78bb9ca A0a24;mov L0x7ffff78bb9cb A0b24;
mov L0x7ffff78bb9cc A0c24;mov L0x7ffff78bb9cd A0d24;mov L0x7ffff78bb9ce A0e24;
mov L0x7ffff78bb9cf A0f24;mov L0x7ffff78bb9d0 A1024;mov L0x7ffff78bb9d1 A1124;
mov L0x7ffff78bb9d2 A1224;mov L0x7ffff78bb9d3 A1324;mov L0x7ffff78bb9d4 A1424;
mov L0x7ffff78bb9d5 A1524;mov L0x7ffff78bb9d6 A1624;mov L0x7ffff78bb9d7 A1724;
mov L0x7ffff78bb9d8 A1824;mov L0x7ffff78bb9d9 A1924;mov L0x7ffff78bb9da A1a24;
mov L0x7ffff78bb9db A1b24;mov L0x7ffff78bb9dc A1c24;mov L0x7ffff78bb9dd A1d24;
mov L0x7ffff78bb9de A1e24;mov L0x7ffff78bb9df A1f24;mov L0x7ffff78bb9e0 A2024;
mov L0x7ffff78bb9e1 A2124;mov L0x7ffff78bb9e2 A2224;mov L0x7ffff78bb9e3 A2324;
mov L0x7ffff78bb9e4 A2424;mov L0x7ffff78bb9e5 A2524;mov L0x7ffff78bb9e6 A2624;
mov L0x7ffff78bb9e7 A2724;mov L0x7ffff78bb9e8 A2824;mov L0x7ffff78bb9e9 A2924;
mov L0x7ffff78bb9ea A2a24;mov L0x7ffff78bb9eb A2b24;mov L0x7ffff78bb9ec A2c24;
mov L0x7ffff78bb9ed A2d24;mov L0x7ffff78bb9ee A2e24;mov L0x7ffff78bb9ef A2f24;
mov L0x7ffff78bb9f0 A3024;mov L0x7ffff78bb9f1 A3124;mov L0x7ffff78bb9f2 A3224;
mov L0x7ffff78bb9f3 A3324;mov L0x7ffff78bb9f4 A3424;mov L0x7ffff78bb9f5 A3524;
mov L0x7ffff78bb9f6 A3624;mov L0x7ffff78bb9f7 A3724;mov L0x7ffff78bb9f8 A3824;
mov L0x7ffff78bb9f9 A3924;mov L0x7ffff78bb9fa A3a24;mov L0x7ffff78bb9fb A3b24;
mov L0x7ffff78bb9fc A3c24;mov L0x7ffff78bb9fd A3d24;mov L0x7ffff78bb9fe A3e24;
mov L0x7ffff78bb9ff A3f24;mov L0x7ffff78bba00 A4024;mov L0x7ffff78bba01 A4124;
mov L0x7ffff78bba02 A4224;mov L0x7ffff78bba03 A4324;
mov L0x7ffff78bba04 A0025;mov L0x7ffff78bba05 A0125;mov L0x7ffff78bba06 A0225;
mov L0x7ffff78bba07 A0325;mov L0x7ffff78bba08 A0425;mov L0x7ffff78bba09 A0525;
mov L0x7ffff78bba0a A0625;mov L0x7ffff78bba0b A0725;mov L0x7ffff78bba0c A0825;
mov L0x7ffff78bba0d A0925;mov L0x7ffff78bba0e A0a25;mov L0x7ffff78bba0f A0b25;
mov L0x7ffff78bba10 A0c25;mov L0x7ffff78bba11 A0d25;mov L0x7ffff78bba12 A0e25;
mov L0x7ffff78bba13 A0f25;mov L0x7ffff78bba14 A1025;mov L0x7ffff78bba15 A1125;
mov L0x7ffff78bba16 A1225;mov L0x7ffff78bba17 A1325;mov L0x7ffff78bba18 A1425;
mov L0x7ffff78bba19 A1525;mov L0x7ffff78bba1a A1625;mov L0x7ffff78bba1b A1725;
mov L0x7ffff78bba1c A1825;mov L0x7ffff78bba1d A1925;mov L0x7ffff78bba1e A1a25;
mov L0x7ffff78bba1f A1b25;mov L0x7ffff78bba20 A1c25;mov L0x7ffff78bba21 A1d25;
mov L0x7ffff78bba22 A1e25;mov L0x7ffff78bba23 A1f25;mov L0x7ffff78bba24 A2025;
mov L0x7ffff78bba25 A2125;mov L0x7ffff78bba26 A2225;mov L0x7ffff78bba27 A2325;
mov L0x7ffff78bba28 A2425;mov L0x7ffff78bba29 A2525;mov L0x7ffff78bba2a A2625;
mov L0x7ffff78bba2b A2725;mov L0x7ffff78bba2c A2825;mov L0x7ffff78bba2d A2925;
mov L0x7ffff78bba2e A2a25;mov L0x7ffff78bba2f A2b25;mov L0x7ffff78bba30 A2c25;
mov L0x7ffff78bba31 A2d25;mov L0x7ffff78bba32 A2e25;mov L0x7ffff78bba33 A2f25;
mov L0x7ffff78bba34 A3025;mov L0x7ffff78bba35 A3125;mov L0x7ffff78bba36 A3225;
mov L0x7ffff78bba37 A3325;mov L0x7ffff78bba38 A3425;mov L0x7ffff78bba39 A3525;
mov L0x7ffff78bba3a A3625;mov L0x7ffff78bba3b A3725;mov L0x7ffff78bba3c A3825;
mov L0x7ffff78bba3d A3925;mov L0x7ffff78bba3e A3a25;mov L0x7ffff78bba3f A3b25;
mov L0x7ffff78bba40 A3c25;mov L0x7ffff78bba41 A3d25;mov L0x7ffff78bba42 A3e25;
mov L0x7ffff78bba43 A3f25;mov L0x7ffff78bba44 A4025;mov L0x7ffff78bba45 A4125;
mov L0x7ffff78bba46 A4225;mov L0x7ffff78bba47 A4325;
mov L0x7ffff78bba48 A0026;mov L0x7ffff78bba49 A0126;mov L0x7ffff78bba4a A0226;
mov L0x7ffff78bba4b A0326;mov L0x7ffff78bba4c A0426;mov L0x7ffff78bba4d A0526;
mov L0x7ffff78bba4e A0626;mov L0x7ffff78bba4f A0726;mov L0x7ffff78bba50 A0826;
mov L0x7ffff78bba51 A0926;mov L0x7ffff78bba52 A0a26;mov L0x7ffff78bba53 A0b26;
mov L0x7ffff78bba54 A0c26;mov L0x7ffff78bba55 A0d26;mov L0x7ffff78bba56 A0e26;
mov L0x7ffff78bba57 A0f26;mov L0x7ffff78bba58 A1026;mov L0x7ffff78bba59 A1126;
mov L0x7ffff78bba5a A1226;mov L0x7ffff78bba5b A1326;mov L0x7ffff78bba5c A1426;
mov L0x7ffff78bba5d A1526;mov L0x7ffff78bba5e A1626;mov L0x7ffff78bba5f A1726;
mov L0x7ffff78bba60 A1826;mov L0x7ffff78bba61 A1926;mov L0x7ffff78bba62 A1a26;
mov L0x7ffff78bba63 A1b26;mov L0x7ffff78bba64 A1c26;mov L0x7ffff78bba65 A1d26;
mov L0x7ffff78bba66 A1e26;mov L0x7ffff78bba67 A1f26;mov L0x7ffff78bba68 A2026;
mov L0x7ffff78bba69 A2126;mov L0x7ffff78bba6a A2226;mov L0x7ffff78bba6b A2326;
mov L0x7ffff78bba6c A2426;mov L0x7ffff78bba6d A2526;mov L0x7ffff78bba6e A2626;
mov L0x7ffff78bba6f A2726;mov L0x7ffff78bba70 A2826;mov L0x7ffff78bba71 A2926;
mov L0x7ffff78bba72 A2a26;mov L0x7ffff78bba73 A2b26;mov L0x7ffff78bba74 A2c26;
mov L0x7ffff78bba75 A2d26;mov L0x7ffff78bba76 A2e26;mov L0x7ffff78bba77 A2f26;
mov L0x7ffff78bba78 A3026;mov L0x7ffff78bba79 A3126;mov L0x7ffff78bba7a A3226;
mov L0x7ffff78bba7b A3326;mov L0x7ffff78bba7c A3426;mov L0x7ffff78bba7d A3526;
mov L0x7ffff78bba7e A3626;mov L0x7ffff78bba7f A3726;mov L0x7ffff78bba80 A3826;
mov L0x7ffff78bba81 A3926;mov L0x7ffff78bba82 A3a26;mov L0x7ffff78bba83 A3b26;
mov L0x7ffff78bba84 A3c26;mov L0x7ffff78bba85 A3d26;mov L0x7ffff78bba86 A3e26;
mov L0x7ffff78bba87 A3f26;mov L0x7ffff78bba88 A4026;mov L0x7ffff78bba89 A4126;
mov L0x7ffff78bba8a A4226;mov L0x7ffff78bba8b A4326;
mov L0x7ffff78bba8c A0027;mov L0x7ffff78bba8d A0127;mov L0x7ffff78bba8e A0227;
mov L0x7ffff78bba8f A0327;mov L0x7ffff78bba90 A0427;mov L0x7ffff78bba91 A0527;
mov L0x7ffff78bba92 A0627;mov L0x7ffff78bba93 A0727;mov L0x7ffff78bba94 A0827;
mov L0x7ffff78bba95 A0927;mov L0x7ffff78bba96 A0a27;mov L0x7ffff78bba97 A0b27;
mov L0x7ffff78bba98 A0c27;mov L0x7ffff78bba99 A0d27;mov L0x7ffff78bba9a A0e27;
mov L0x7ffff78bba9b A0f27;mov L0x7ffff78bba9c A1027;mov L0x7ffff78bba9d A1127;
mov L0x7ffff78bba9e A1227;mov L0x7ffff78bba9f A1327;mov L0x7ffff78bbaa0 A1427;
mov L0x7ffff78bbaa1 A1527;mov L0x7ffff78bbaa2 A1627;mov L0x7ffff78bbaa3 A1727;
mov L0x7ffff78bbaa4 A1827;mov L0x7ffff78bbaa5 A1927;mov L0x7ffff78bbaa6 A1a27;
mov L0x7ffff78bbaa7 A1b27;mov L0x7ffff78bbaa8 A1c27;mov L0x7ffff78bbaa9 A1d27;
mov L0x7ffff78bbaaa A1e27;mov L0x7ffff78bbaab A1f27;mov L0x7ffff78bbaac A2027;
mov L0x7ffff78bbaad A2127;mov L0x7ffff78bbaae A2227;mov L0x7ffff78bbaaf A2327;
mov L0x7ffff78bbab0 A2427;mov L0x7ffff78bbab1 A2527;mov L0x7ffff78bbab2 A2627;
mov L0x7ffff78bbab3 A2727;mov L0x7ffff78bbab4 A2827;mov L0x7ffff78bbab5 A2927;
mov L0x7ffff78bbab6 A2a27;mov L0x7ffff78bbab7 A2b27;mov L0x7ffff78bbab8 A2c27;
mov L0x7ffff78bbab9 A2d27;mov L0x7ffff78bbaba A2e27;mov L0x7ffff78bbabb A2f27;
mov L0x7ffff78bbabc A3027;mov L0x7ffff78bbabd A3127;mov L0x7ffff78bbabe A3227;
mov L0x7ffff78bbabf A3327;mov L0x7ffff78bbac0 A3427;mov L0x7ffff78bbac1 A3527;
mov L0x7ffff78bbac2 A3627;mov L0x7ffff78bbac3 A3727;mov L0x7ffff78bbac4 A3827;
mov L0x7ffff78bbac5 A3927;mov L0x7ffff78bbac6 A3a27;mov L0x7ffff78bbac7 A3b27;
mov L0x7ffff78bbac8 A3c27;mov L0x7ffff78bbac9 A3d27;mov L0x7ffff78bbaca A3e27;
mov L0x7ffff78bbacb A3f27;mov L0x7ffff78bbacc A4027;mov L0x7ffff78bbacd A4127;
mov L0x7ffff78bbace A4227;mov L0x7ffff78bbacf A4327;
mov L0x7ffff78bbad0 A0028;mov L0x7ffff78bbad1 A0128;mov L0x7ffff78bbad2 A0228;
mov L0x7ffff78bbad3 A0328;mov L0x7ffff78bbad4 A0428;mov L0x7ffff78bbad5 A0528;
mov L0x7ffff78bbad6 A0628;mov L0x7ffff78bbad7 A0728;mov L0x7ffff78bbad8 A0828;
mov L0x7ffff78bbad9 A0928;mov L0x7ffff78bbada A0a28;mov L0x7ffff78bbadb A0b28;
mov L0x7ffff78bbadc A0c28;mov L0x7ffff78bbadd A0d28;mov L0x7ffff78bbade A0e28;
mov L0x7ffff78bbadf A0f28;mov L0x7ffff78bbae0 A1028;mov L0x7ffff78bbae1 A1128;
mov L0x7ffff78bbae2 A1228;mov L0x7ffff78bbae3 A1328;mov L0x7ffff78bbae4 A1428;
mov L0x7ffff78bbae5 A1528;mov L0x7ffff78bbae6 A1628;mov L0x7ffff78bbae7 A1728;
mov L0x7ffff78bbae8 A1828;mov L0x7ffff78bbae9 A1928;mov L0x7ffff78bbaea A1a28;
mov L0x7ffff78bbaeb A1b28;mov L0x7ffff78bbaec A1c28;mov L0x7ffff78bbaed A1d28;
mov L0x7ffff78bbaee A1e28;mov L0x7ffff78bbaef A1f28;mov L0x7ffff78bbaf0 A2028;
mov L0x7ffff78bbaf1 A2128;mov L0x7ffff78bbaf2 A2228;mov L0x7ffff78bbaf3 A2328;
mov L0x7ffff78bbaf4 A2428;mov L0x7ffff78bbaf5 A2528;mov L0x7ffff78bbaf6 A2628;
mov L0x7ffff78bbaf7 A2728;mov L0x7ffff78bbaf8 A2828;mov L0x7ffff78bbaf9 A2928;
mov L0x7ffff78bbafa A2a28;mov L0x7ffff78bbafb A2b28;mov L0x7ffff78bbafc A2c28;
mov L0x7ffff78bbafd A2d28;mov L0x7ffff78bbafe A2e28;mov L0x7ffff78bbaff A2f28;
mov L0x7ffff78bbb00 A3028;mov L0x7ffff78bbb01 A3128;mov L0x7ffff78bbb02 A3228;
mov L0x7ffff78bbb03 A3328;mov L0x7ffff78bbb04 A3428;mov L0x7ffff78bbb05 A3528;
mov L0x7ffff78bbb06 A3628;mov L0x7ffff78bbb07 A3728;mov L0x7ffff78bbb08 A3828;
mov L0x7ffff78bbb09 A3928;mov L0x7ffff78bbb0a A3a28;mov L0x7ffff78bbb0b A3b28;
mov L0x7ffff78bbb0c A3c28;mov L0x7ffff78bbb0d A3d28;mov L0x7ffff78bbb0e A3e28;
mov L0x7ffff78bbb0f A3f28;mov L0x7ffff78bbb10 A4028;mov L0x7ffff78bbb11 A4128;
mov L0x7ffff78bbb12 A4228;mov L0x7ffff78bbb13 A4328;
mov L0x7ffff78bbb14 A0029;mov L0x7ffff78bbb15 A0129;mov L0x7ffff78bbb16 A0229;
mov L0x7ffff78bbb17 A0329;mov L0x7ffff78bbb18 A0429;mov L0x7ffff78bbb19 A0529;
mov L0x7ffff78bbb1a A0629;mov L0x7ffff78bbb1b A0729;mov L0x7ffff78bbb1c A0829;
mov L0x7ffff78bbb1d A0929;mov L0x7ffff78bbb1e A0a29;mov L0x7ffff78bbb1f A0b29;
mov L0x7ffff78bbb20 A0c29;mov L0x7ffff78bbb21 A0d29;mov L0x7ffff78bbb22 A0e29;
mov L0x7ffff78bbb23 A0f29;mov L0x7ffff78bbb24 A1029;mov L0x7ffff78bbb25 A1129;
mov L0x7ffff78bbb26 A1229;mov L0x7ffff78bbb27 A1329;mov L0x7ffff78bbb28 A1429;
mov L0x7ffff78bbb29 A1529;mov L0x7ffff78bbb2a A1629;mov L0x7ffff78bbb2b A1729;
mov L0x7ffff78bbb2c A1829;mov L0x7ffff78bbb2d A1929;mov L0x7ffff78bbb2e A1a29;
mov L0x7ffff78bbb2f A1b29;mov L0x7ffff78bbb30 A1c29;mov L0x7ffff78bbb31 A1d29;
mov L0x7ffff78bbb32 A1e29;mov L0x7ffff78bbb33 A1f29;mov L0x7ffff78bbb34 A2029;
mov L0x7ffff78bbb35 A2129;mov L0x7ffff78bbb36 A2229;mov L0x7ffff78bbb37 A2329;
mov L0x7ffff78bbb38 A2429;mov L0x7ffff78bbb39 A2529;mov L0x7ffff78bbb3a A2629;
mov L0x7ffff78bbb3b A2729;mov L0x7ffff78bbb3c A2829;mov L0x7ffff78bbb3d A2929;
mov L0x7ffff78bbb3e A2a29;mov L0x7ffff78bbb3f A2b29;mov L0x7ffff78bbb40 A2c29;
mov L0x7ffff78bbb41 A2d29;mov L0x7ffff78bbb42 A2e29;mov L0x7ffff78bbb43 A2f29;
mov L0x7ffff78bbb44 A3029;mov L0x7ffff78bbb45 A3129;mov L0x7ffff78bbb46 A3229;
mov L0x7ffff78bbb47 A3329;mov L0x7ffff78bbb48 A3429;mov L0x7ffff78bbb49 A3529;
mov L0x7ffff78bbb4a A3629;mov L0x7ffff78bbb4b A3729;mov L0x7ffff78bbb4c A3829;
mov L0x7ffff78bbb4d A3929;mov L0x7ffff78bbb4e A3a29;mov L0x7ffff78bbb4f A3b29;
mov L0x7ffff78bbb50 A3c29;mov L0x7ffff78bbb51 A3d29;mov L0x7ffff78bbb52 A3e29;
mov L0x7ffff78bbb53 A3f29;mov L0x7ffff78bbb54 A4029;mov L0x7ffff78bbb55 A4129;
mov L0x7ffff78bbb56 A4229;mov L0x7ffff78bbb57 A4329;
mov L0x7ffff78bbb58 A002a;mov L0x7ffff78bbb59 A012a;mov L0x7ffff78bbb5a A022a;
mov L0x7ffff78bbb5b A032a;mov L0x7ffff78bbb5c A042a;mov L0x7ffff78bbb5d A052a;
mov L0x7ffff78bbb5e A062a;mov L0x7ffff78bbb5f A072a;mov L0x7ffff78bbb60 A082a;
mov L0x7ffff78bbb61 A092a;mov L0x7ffff78bbb62 A0a2a;mov L0x7ffff78bbb63 A0b2a;
mov L0x7ffff78bbb64 A0c2a;mov L0x7ffff78bbb65 A0d2a;mov L0x7ffff78bbb66 A0e2a;
mov L0x7ffff78bbb67 A0f2a;mov L0x7ffff78bbb68 A102a;mov L0x7ffff78bbb69 A112a;
mov L0x7ffff78bbb6a A122a;mov L0x7ffff78bbb6b A132a;mov L0x7ffff78bbb6c A142a;
mov L0x7ffff78bbb6d A152a;mov L0x7ffff78bbb6e A162a;mov L0x7ffff78bbb6f A172a;
mov L0x7ffff78bbb70 A182a;mov L0x7ffff78bbb71 A192a;mov L0x7ffff78bbb72 A1a2a;
mov L0x7ffff78bbb73 A1b2a;mov L0x7ffff78bbb74 A1c2a;mov L0x7ffff78bbb75 A1d2a;
mov L0x7ffff78bbb76 A1e2a;mov L0x7ffff78bbb77 A1f2a;mov L0x7ffff78bbb78 A202a;
mov L0x7ffff78bbb79 A212a;mov L0x7ffff78bbb7a A222a;mov L0x7ffff78bbb7b A232a;
mov L0x7ffff78bbb7c A242a;mov L0x7ffff78bbb7d A252a;mov L0x7ffff78bbb7e A262a;
mov L0x7ffff78bbb7f A272a;mov L0x7ffff78bbb80 A282a;mov L0x7ffff78bbb81 A292a;
mov L0x7ffff78bbb82 A2a2a;mov L0x7ffff78bbb83 A2b2a;mov L0x7ffff78bbb84 A2c2a;
mov L0x7ffff78bbb85 A2d2a;mov L0x7ffff78bbb86 A2e2a;mov L0x7ffff78bbb87 A2f2a;
mov L0x7ffff78bbb88 A302a;mov L0x7ffff78bbb89 A312a;mov L0x7ffff78bbb8a A322a;
mov L0x7ffff78bbb8b A332a;mov L0x7ffff78bbb8c A342a;mov L0x7ffff78bbb8d A352a;
mov L0x7ffff78bbb8e A362a;mov L0x7ffff78bbb8f A372a;mov L0x7ffff78bbb90 A382a;
mov L0x7ffff78bbb91 A392a;mov L0x7ffff78bbb92 A3a2a;mov L0x7ffff78bbb93 A3b2a;
mov L0x7ffff78bbb94 A3c2a;mov L0x7ffff78bbb95 A3d2a;mov L0x7ffff78bbb96 A3e2a;
mov L0x7ffff78bbb97 A3f2a;mov L0x7ffff78bbb98 A402a;mov L0x7ffff78bbb99 A412a;
mov L0x7ffff78bbb9a A422a;mov L0x7ffff78bbb9b A432a;
mov L0x7ffff78bbb9c A002b;mov L0x7ffff78bbb9d A012b;mov L0x7ffff78bbb9e A022b;
mov L0x7ffff78bbb9f A032b;mov L0x7ffff78bbba0 A042b;mov L0x7ffff78bbba1 A052b;
mov L0x7ffff78bbba2 A062b;mov L0x7ffff78bbba3 A072b;mov L0x7ffff78bbba4 A082b;
mov L0x7ffff78bbba5 A092b;mov L0x7ffff78bbba6 A0a2b;mov L0x7ffff78bbba7 A0b2b;
mov L0x7ffff78bbba8 A0c2b;mov L0x7ffff78bbba9 A0d2b;mov L0x7ffff78bbbaa A0e2b;
mov L0x7ffff78bbbab A0f2b;mov L0x7ffff78bbbac A102b;mov L0x7ffff78bbbad A112b;
mov L0x7ffff78bbbae A122b;mov L0x7ffff78bbbaf A132b;mov L0x7ffff78bbbb0 A142b;
mov L0x7ffff78bbbb1 A152b;mov L0x7ffff78bbbb2 A162b;mov L0x7ffff78bbbb3 A172b;
mov L0x7ffff78bbbb4 A182b;mov L0x7ffff78bbbb5 A192b;mov L0x7ffff78bbbb6 A1a2b;
mov L0x7ffff78bbbb7 A1b2b;mov L0x7ffff78bbbb8 A1c2b;mov L0x7ffff78bbbb9 A1d2b;
mov L0x7ffff78bbbba A1e2b;mov L0x7ffff78bbbbb A1f2b;mov L0x7ffff78bbbbc A202b;
mov L0x7ffff78bbbbd A212b;mov L0x7ffff78bbbbe A222b;mov L0x7ffff78bbbbf A232b;
mov L0x7ffff78bbbc0 A242b;mov L0x7ffff78bbbc1 A252b;mov L0x7ffff78bbbc2 A262b;
mov L0x7ffff78bbbc3 A272b;mov L0x7ffff78bbbc4 A282b;mov L0x7ffff78bbbc5 A292b;
mov L0x7ffff78bbbc6 A2a2b;mov L0x7ffff78bbbc7 A2b2b;mov L0x7ffff78bbbc8 A2c2b;
mov L0x7ffff78bbbc9 A2d2b;mov L0x7ffff78bbbca A2e2b;mov L0x7ffff78bbbcb A2f2b;
mov L0x7ffff78bbbcc A302b;mov L0x7ffff78bbbcd A312b;mov L0x7ffff78bbbce A322b;
mov L0x7ffff78bbbcf A332b;mov L0x7ffff78bbbd0 A342b;mov L0x7ffff78bbbd1 A352b;
mov L0x7ffff78bbbd2 A362b;mov L0x7ffff78bbbd3 A372b;mov L0x7ffff78bbbd4 A382b;
mov L0x7ffff78bbbd5 A392b;mov L0x7ffff78bbbd6 A3a2b;mov L0x7ffff78bbbd7 A3b2b;
mov L0x7ffff78bbbd8 A3c2b;mov L0x7ffff78bbbd9 A3d2b;mov L0x7ffff78bbbda A3e2b;
mov L0x7ffff78bbbdb A3f2b;mov L0x7ffff78bbbdc A402b;mov L0x7ffff78bbbdd A412b;
mov L0x7ffff78bbbde A422b;mov L0x7ffff78bbbdf A432b;
mov L0x7fffffffcb00 b00; mov L0x7fffffffcb01 b01; mov L0x7fffffffcb02 b02;
mov L0x7fffffffcb03 b03; mov L0x7fffffffcb04 b04; mov L0x7fffffffcb05 b05;
mov L0x7fffffffcb06 b06; mov L0x7fffffffcb07 b07; mov L0x7fffffffcb08 b08;
mov L0x7fffffffcb09 b09; mov L0x7fffffffcb0a b0a; mov L0x7fffffffcb0b b0b;
mov L0x7fffffffcb0c b0c; mov L0x7fffffffcb0d b0d; mov L0x7fffffffcb0e b0e;
mov L0x7fffffffcb0f b0f; mov L0x7fffffffcb10 b10; mov L0x7fffffffcb11 b11;
mov L0x7fffffffcb12 b12; mov L0x7fffffffcb13 b13; mov L0x7fffffffcb14 b14;
mov L0x7fffffffcb15 b15; mov L0x7fffffffcb16 b16; mov L0x7fffffffcb17 b17;
mov L0x7fffffffcb18 b18; mov L0x7fffffffcb19 b19; mov L0x7fffffffcb1a b1a;
mov L0x7fffffffcb1b b1b; mov L0x7fffffffcb1c b1c; mov L0x7fffffffcb1d b1d;
mov L0x7fffffffcb1e b1e; mov L0x7fffffffcb1f b1f; mov L0x7fffffffcb20 b20;
mov L0x7fffffffcb21 b21; mov L0x7fffffffcb22 b22; mov L0x7fffffffcb23 b23;
mov L0x7fffffffcb24 b24; mov L0x7fffffffcb25 b25; mov L0x7fffffffcb26 b26;
mov L0x7fffffffcb27 b27; mov L0x7fffffffcb28 b28; mov L0x7fffffffcb29 b29;
mov L0x7fffffffcb2a b2a; mov L0x7fffffffcb2b b2b;
nondet L0x7fffffffcb80@uint8; nondet L0x7fffffffcb81@uint8;
nondet L0x7fffffffcb82@uint8; nondet L0x7fffffffcb83@uint8;
nondet L0x7fffffffcb84@uint8; nondet L0x7fffffffcb85@uint8;
nondet L0x7fffffffcb86@uint8; nondet L0x7fffffffcb87@uint8;
nondet L0x7fffffffcb88@uint8; nondet L0x7fffffffcb89@uint8;
nondet L0x7fffffffcb8a@uint8; nondet L0x7fffffffcb8b@uint8;
nondet L0x7fffffffcb8c@uint8; nondet L0x7fffffffcb8d@uint8;
nondet L0x7fffffffcb8e@uint8; nondet L0x7fffffffcb8f@uint8;
nondet L0x7fffffffcb90@uint8; nondet L0x7fffffffcb91@uint8;
nondet L0x7fffffffcb92@uint8; nondet L0x7fffffffcb93@uint8;
nondet L0x7fffffffcb94@uint8; nondet L0x7fffffffcb95@uint8;
nondet L0x7fffffffcb96@uint8; nondet L0x7fffffffcb97@uint8;
nondet L0x7fffffffcb98@uint8; nondet L0x7fffffffcb99@uint8;
nondet L0x7fffffffcb9a@uint8; nondet L0x7fffffffcb9b@uint8;
nondet L0x7fffffffcb9c@uint8; nondet L0x7fffffffcb9d@uint8;
nondet L0x7fffffffcb9e@uint8; nondet L0x7fffffffcb9f@uint8;
nondet L0x7fffffffcba0@uint8; nondet L0x7fffffffcba1@uint8;
nondet L0x7fffffffcba2@uint8; nondet L0x7fffffffcba3@uint8;
nondet L0x7fffffffcba4@uint8; nondet L0x7fffffffcba5@uint8;
nondet L0x7fffffffcba6@uint8; nondet L0x7fffffffcba7@uint8;
nondet L0x7fffffffcba8@uint8; nondet L0x7fffffffcba9@uint8;
nondet L0x7fffffffcbaa@uint8; nondet L0x7fffffffcbab@uint8;
nondet L0x7fffffffcbac@uint8; nondet L0x7fffffffcbad@uint8;
nondet L0x7fffffffcbae@uint8; nondet L0x7fffffffcbaf@uint8;
nondet L0x7fffffffcbb0@uint8; nondet L0x7fffffffcbb1@uint8;
nondet L0x7fffffffcbb2@uint8; nondet L0x7fffffffcbb3@uint8;
nondet L0x7fffffffcbb4@uint8; nondet L0x7fffffffcbb5@uint8;
nondet L0x7fffffffcbb6@uint8; nondet L0x7fffffffcbb7@uint8;
nondet L0x7fffffffcbb8@uint8; nondet L0x7fffffffcbb9@uint8;
nondet L0x7fffffffcbba@uint8; nondet L0x7fffffffcbbb@uint8;
nondet L0x7fffffffcbbc@uint8; nondet L0x7fffffffcbbd@uint8;
nondet L0x7fffffffcbbe@uint8; nondet L0x7fffffffcbbf@uint8;
nondet L0x7fffffffcbc0@uint8; nondet L0x7fffffffcbc1@uint8;
nondet L0x7fffffffcbc2@uint8; nondet L0x7fffffffcbc3@uint8;
nondet m0@uint8;nondet m1@uint8;nondet m2@uint8;nondet m3@uint8;
nondet m4@uint8;nondet m5@uint8;nondet m6@uint8;nondet m7@uint8;
mov %r8 [m0, m1, m2, m3, m4, m5, m6, m7];
nondet m0@uint8;nondet m1@uint8;nondet m2@uint8;nondet m3@uint8;
nondet m4@uint8;nondet m5@uint8;nondet m6@uint8;nondet m7@uint8;
mov %r13 [m0, m1, m2, m3, m4, m5, m6, m7];
nondet m0@uint8;nondet m1@uint8;nondet m2@uint8;nondet m3@uint8;
nondet m4@uint8;nondet m5@uint8;nondet m6@uint8;nondet m7@uint8;
mov %r15 [m0, m1, m2, m3, m4, m5, m6, m7];
nondet m0@uint8;nondet m1@uint8;nondet m2@uint8;nondet m3@uint8;
nondet m4@uint8;nondet m5@uint8;nondet m6@uint8;nondet m7@uint8;
mov %rax [m0, m1, m2, m3, m4, m5, m6, m7];
nondet m0@uint8;nondet m1@uint8;nondet m2@uint8;nondet m3@uint8;
nondet m4@uint8;nondet m5@uint8;nondet m6@uint8;nondet m7@uint8;
mov %rcx [m0, m1, m2, m3, m4, m5, m6, m7];
nondet m0@uint8;nondet m1@uint8;nondet m2@uint8;nondet m3@uint8;
nondet m4@uint8;nondet m5@uint8;nondet m6@uint8;nondet m7@uint8;
mov %rdx [m0, m1, m2, m3, m4, m5, m6, m7];
nondet m0@uint8;nondet m1@uint8;nondet m2@uint8;nondet m3@uint8;
nondet m4@uint8;nondet m5@uint8;nondet m6@uint8;nondet m7@uint8;
mov %rdi [m0, m1, m2, m3, m4, m5, m6, m7];
nondet m0@uint8;nondet m1@uint8;nondet m2@uint8;nondet m3@uint8;
nondet m4@uint8;nondet m5@uint8;nondet m6@uint8;nondet m7@uint8;
mov %rsi [m0, m1, m2, m3, m4, m5, m6, m7];
nondet L0x7fffffffc6e4@uint8; nondet L0x7fffffffc6e5@uint8;
nondet L0x7fffffffc6e6@uint8; nondet L0x7fffffffc6e7@uint8;
nondet L0x7fffffffc6e8@uint8; nondet L0x7fffffffc6e9@uint8;
nondet L0x7fffffffc6ea@uint8; nondet L0x7fffffffc6eb@uint8;
nondet L0x7fffffffc6ec@uint8; nondet L0x7fffffffc6ed@uint8;
nondet L0x7fffffffc6ee@uint8; nondet L0x7fffffffc6ef@uint8;
nondet L0x7fffffffc684@uint8; nondet L0x7fffffffc685@uint8;
nondet L0x7fffffffc686@uint8; nondet L0x7fffffffc687@uint8;
nondet L0x7fffffffc688@uint8; nondet L0x7fffffffc689@uint8;
nondet L0x7fffffffc68a@uint8; nondet L0x7fffffffc68b@uint8;
nondet L0x7fffffffc68c@uint8; nondet L0x7fffffffc68d@uint8;
nondet L0x7fffffffc68e@uint8; nondet L0x7fffffffc68f@uint8;
nondet L0x7fffffffc750@uint8; nondet L0x7fffffffc751@uint8;
nondet L0x7fffffffc752@uint8; nondet L0x7fffffffc753@uint8;



(* #! -> SP = 0x7fffffffca58 *)
#! 0x7fffffffca58 = 0x7fffffffca58;
(* mov    %edx,%r12d                               #! PC = 0x55555555b1d0 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %r12 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,%ebx                                #! PC = 0x55555555b1d4 *)
mov [m0,m1,m2,m3,_,_,_,_] %rcx;
mov %rbx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rsi,-0x2d0(%rbp)                        #! EA = L0x7fffffffc780; PC = 0x55555555b1dd *)
mov [L0x7fffffffc780,L0x7fffffffc781,L0x7fffffffc782,L0x7fffffffc783,
     L0x7fffffffc784,L0x7fffffffc785,L0x7fffffffc786,L0x7fffffffc787] %rsi;
(* mov    %edx,%esi                                #! PC = 0x55555555b1e4 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,-0x2e0(%rbp)                        #! EA = L0x7fffffffc770; PC = 0x55555555b1e6 *)
mov [L0x7fffffffc770,L0x7fffffffc771,L0x7fffffffc772,L0x7fffffffc773,
     L0x7fffffffc774,L0x7fffffffc775,L0x7fffffffc776,L0x7fffffffc777] %rdi;
(* mov    %ecx,-0x2e4(%rbp)                        #! EA = L0x7fffffffc76c; PC = 0x55555555b1ed *)
mov [L0x7fffffffc76c,L0x7fffffffc76d,L0x7fffffffc76e,L0x7fffffffc76f,_,_,_,_]
    %rcx;
(* mov    %r8,-0x2f0(%rbp)                         #! EA = L0x7fffffffc760; PC = 0x55555555b1f3 *)
mov [L0x7fffffffc760,L0x7fffffffc761,L0x7fffffffc762,L0x7fffffffc763,
     L0x7fffffffc764,L0x7fffffffc765,L0x7fffffffc766,L0x7fffffffc767] %r8;
(* mov    %rax,-0x38(%rbp)                         #! EA = L0x7fffffffca18; PC = 0x55555555b203 *)
mov [L0x7fffffffca18,L0x7fffffffca19,L0x7fffffffca1a,L0x7fffffffca1b,
     L0x7fffffffca1c,L0x7fffffffca1d,L0x7fffffffca1e,L0x7fffffffca1f] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555b207 *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #call   0x5555555573e0 <gf256v_set_zero>        #! PC = 0x55555555b209 *)
#call   0x5555555573e0 <gf256v_set_zero>        #! 0x55555555b209 = 0x55555555b209;
(* #! -> SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* mov    %esi,%edx                                #! PC = 0x5555555573e0 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x5555555573e2 *)
mov %rsi %rdi;
(* #jmp    0x555555557260 <gf256v_add_sse>         #! PC = 0x5555555573e5 *)
#jmp    0x555555557260 <gf256v_add_sse>         #! 0x5555555573e5 = 0x5555555573e5;
(* mov    %rdi,%rcx                                #! PC = 0x555555557260 *)
mov %rcx %rdi;
(* mov    %edx,%edi                                #! PC = 0x555555557263 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rdi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #jbe    0x5555555572a4 <gf256v_add_sse+68>      #! PC = 0x555555557268 *)
#jbe    0x5555555572a4 <gf256v_add_sse+68>      #! 0x555555557268 = 0x555555557268;
(* xor    %eax,%eax                                #! PC = 0x55555555726d *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* movdqu (%rsi,%rax,1),%xmm0                      #! EA = L0x7fffffffcb80; Value = 0x1bfba9ea485eb084; PC = 0x555555557280 *)
mov %xmm0 [L0x7fffffffcb80, L0x7fffffffcb81, L0x7fffffffcb82, L0x7fffffffcb83,
           L0x7fffffffcb84, L0x7fffffffcb85, L0x7fffffffcb86, L0x7fffffffcb87,
           L0x7fffffffcb88, L0x7fffffffcb89, L0x7fffffffcb8a, L0x7fffffffcb8b,
           L0x7fffffffcb8c, L0x7fffffffcb8d, L0x7fffffffcb8e, L0x7fffffffcb8f];
(* movdqu (%rcx,%rax,1),%xmm2                      #! EA = L0x7fffffffcb80; Value = 0x1bfba9ea485eb084; PC = 0x555555557285 *)
mov %xmm2 [L0x7fffffffcb80, L0x7fffffffcb81, L0x7fffffffcb82, L0x7fffffffcb83,
           L0x7fffffffcb84, L0x7fffffffcb85, L0x7fffffffcb86, L0x7fffffffcb87,
           L0x7fffffffcb88, L0x7fffffffcb89, L0x7fffffffcb8a, L0x7fffffffcb8b,
           L0x7fffffffcb8c, L0x7fffffffcb8d, L0x7fffffffcb8e, L0x7fffffffcb8f];
(* pxor   %xmm2,%xmm0                              #! PC = 0x55555555728a *)
xor %xmm0@uint8[16] %xmm0 %xmm2;
(* movups %xmm0,(%rcx,%rax,1)                      #! EA = L0x7fffffffcb80; PC = 0x55555555728e *)
mov [L0x7fffffffcb80,L0x7fffffffcb81,L0x7fffffffcb82,L0x7fffffffcb83,
     L0x7fffffffcb84,L0x7fffffffcb85,L0x7fffffffcb86,L0x7fffffffcb87,
     L0x7fffffffcb88,L0x7fffffffcb89,L0x7fffffffcb8a,L0x7fffffffcb8b,
     L0x7fffffffcb8c,L0x7fffffffcb8d,L0x7fffffffcb8e,L0x7fffffffcb8f] %xmm0;
(* #jne    0x555555557280 <gf256v_add_sse+32>      #! PC = 0x555555557299 *)
#jne    0x555555557280 <gf256v_add_sse+32>      #! 0x555555557299 = 0x555555557299;
(* movdqu (%rsi,%rax,1),%xmm0                      #! EA = L0x7fffffffcb90; Value = 0xe339d82afda35f7b; PC = 0x555555557280 *)
mov %xmm0 [L0x7fffffffcb90, L0x7fffffffcb91, L0x7fffffffcb92, L0x7fffffffcb93,
           L0x7fffffffcb94, L0x7fffffffcb95, L0x7fffffffcb96, L0x7fffffffcb97,
           L0x7fffffffcb98, L0x7fffffffcb99, L0x7fffffffcb9a, L0x7fffffffcb9b,
           L0x7fffffffcb9c, L0x7fffffffcb9d, L0x7fffffffcb9e, L0x7fffffffcb9f];
(* movdqu (%rcx,%rax,1),%xmm2                      #! EA = L0x7fffffffcb90; Value = 0xe339d82afda35f7b; PC = 0x555555557285 *)
mov %xmm2 [L0x7fffffffcb90, L0x7fffffffcb91, L0x7fffffffcb92, L0x7fffffffcb93,
           L0x7fffffffcb94, L0x7fffffffcb95, L0x7fffffffcb96, L0x7fffffffcb97,
           L0x7fffffffcb98, L0x7fffffffcb99, L0x7fffffffcb9a, L0x7fffffffcb9b,
           L0x7fffffffcb9c, L0x7fffffffcb9d, L0x7fffffffcb9e, L0x7fffffffcb9f];
(* pxor   %xmm2,%xmm0                              #! PC = 0x55555555728a *)
xor %xmm0@uint8[16] %xmm0 %xmm2;
(* movups %xmm0,(%rcx,%rax,1)                      #! EA = L0x7fffffffcb90; PC = 0x55555555728e *)
mov [L0x7fffffffcb90,L0x7fffffffcb91,L0x7fffffffcb92,L0x7fffffffcb93,
     L0x7fffffffcb94,L0x7fffffffcb95,L0x7fffffffcb96,L0x7fffffffcb97,
     L0x7fffffffcb98,L0x7fffffffcb99,L0x7fffffffcb9a,L0x7fffffffcb9b,
     L0x7fffffffcb9c,L0x7fffffffcb9d,L0x7fffffffcb9e,L0x7fffffffcb9f] %xmm0;
(* #jne    0x555555557280 <gf256v_add_sse+32>      #! PC = 0x555555557299 *)
#jne    0x555555557280 <gf256v_add_sse+32>      #! 0x555555557299 = 0x555555557299;
(* movdqu (%rsi,%rax,1),%xmm0                      #! EA = L0x7fffffffcba0; Value = 0x78d123bdd39f82c1; PC = 0x555555557280 *)
mov %xmm0 [L0x7fffffffcba0, L0x7fffffffcba1, L0x7fffffffcba2, L0x7fffffffcba3,
           L0x7fffffffcba4, L0x7fffffffcba5, L0x7fffffffcba6, L0x7fffffffcba7,
           L0x7fffffffcba8, L0x7fffffffcba9, L0x7fffffffcbaa, L0x7fffffffcbab,
           L0x7fffffffcbac, L0x7fffffffcbad, L0x7fffffffcbae, L0x7fffffffcbaf];
(* movdqu (%rcx,%rax,1),%xmm2                      #! EA = L0x7fffffffcba0; Value = 0x78d123bdd39f82c1; PC = 0x555555557285 *)
mov %xmm2 [L0x7fffffffcba0, L0x7fffffffcba1, L0x7fffffffcba2, L0x7fffffffcba3,
           L0x7fffffffcba4, L0x7fffffffcba5, L0x7fffffffcba6, L0x7fffffffcba7,
           L0x7fffffffcba8, L0x7fffffffcba9, L0x7fffffffcbaa, L0x7fffffffcbab,
           L0x7fffffffcbac, L0x7fffffffcbad, L0x7fffffffcbae, L0x7fffffffcbaf];
(* pxor   %xmm2,%xmm0                              #! PC = 0x55555555728a *)
xor %xmm0@uint8[16] %xmm0 %xmm2;
(* movups %xmm0,(%rcx,%rax,1)                      #! EA = L0x7fffffffcba0; PC = 0x55555555728e *)
mov [L0x7fffffffcba0,L0x7fffffffcba1,L0x7fffffffcba2,L0x7fffffffcba3,
     L0x7fffffffcba4,L0x7fffffffcba5,L0x7fffffffcba6,L0x7fffffffcba7,
     L0x7fffffffcba8,L0x7fffffffcba9,L0x7fffffffcbaa,L0x7fffffffcbab,
     L0x7fffffffcbac,L0x7fffffffcbad,L0x7fffffffcbae,L0x7fffffffcbaf] %xmm0;
(* #jne    0x555555557280 <gf256v_add_sse+32>      #! PC = 0x555555557299 *)
#jne    0x555555557280 <gf256v_add_sse+32>      #! 0x555555557299 = 0x555555557299;
(* movdqu (%rsi,%rax,1),%xmm0                      #! EA = L0x7fffffffcbb0; Value = 0x046dd6bfbbd26900; PC = 0x555555557280 *)
mov %xmm0 [L0x7fffffffcbb0, L0x7fffffffcbb1, L0x7fffffffcbb2, L0x7fffffffcbb3,
           L0x7fffffffcbb4, L0x7fffffffcbb5, L0x7fffffffcbb6, L0x7fffffffcbb7,
           L0x7fffffffcbb8, L0x7fffffffcbb9, L0x7fffffffcbba, L0x7fffffffcbbb,
           L0x7fffffffcbbc, L0x7fffffffcbbd, L0x7fffffffcbbe, L0x7fffffffcbbf];
(* movdqu (%rcx,%rax,1),%xmm2                      #! EA = L0x7fffffffcbb0; Value = 0x046dd6bfbbd26900; PC = 0x555555557285 *)
mov %xmm2 [L0x7fffffffcbb0, L0x7fffffffcbb1, L0x7fffffffcbb2, L0x7fffffffcbb3,
           L0x7fffffffcbb4, L0x7fffffffcbb5, L0x7fffffffcbb6, L0x7fffffffcbb7,
           L0x7fffffffcbb8, L0x7fffffffcbb9, L0x7fffffffcbba, L0x7fffffffcbbb,
           L0x7fffffffcbbc, L0x7fffffffcbbd, L0x7fffffffcbbe, L0x7fffffffcbbf];
(* pxor   %xmm2,%xmm0                              #! PC = 0x55555555728a *)
xor %xmm0@uint8[16] %xmm0 %xmm2;
(* movups %xmm0,(%rcx,%rax,1)                      #! EA = L0x7fffffffcbb0; PC = 0x55555555728e *)
mov [L0x7fffffffcbb0,L0x7fffffffcbb1,L0x7fffffffcbb2,L0x7fffffffcbb3,
     L0x7fffffffcbb4,L0x7fffffffcbb5,L0x7fffffffcbb6,L0x7fffffffcbb7,
     L0x7fffffffcbb8,L0x7fffffffcbb9,L0x7fffffffcbba,L0x7fffffffcbbb,
     L0x7fffffffcbbc,L0x7fffffffcbbd,L0x7fffffffcbbe,L0x7fffffffcbbf] %xmm0;
(* #jne    0x555555557280 <gf256v_add_sse+32>      #! PC = 0x555555557299 *)
#jne    0x555555557280 <gf256v_add_sse+32>      #! 0x555555557299 = 0x555555557299;
(* #je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x5555555572a6 *)
#je     0x5555555573be <gf256v_add_sse+350>     #! 0x5555555572a6 = 0x5555555572a6;
(* mov    %rcx,%rax                                #! PC = 0x5555555572b0 *)
mov %rax %rcx;
(* #jbe    0x555555557350 <gf256v_add_sse+240>     #! PC = 0x5555555572ba *)
#jbe    0x555555557350 <gf256v_add_sse+240>     #! 0x5555555572ba = 0x5555555572ba;
(* #jbe    0x555555557350 <gf256v_add_sse+240>     #! PC = 0x5555555572c6 *)
#jbe    0x555555557350 <gf256v_add_sse+240>     #! 0x5555555572c6 = 0x5555555572c6;
(* movzbl (%rsi),%eax                              #! EA = L0x7fffffffcbc0; Value = 0x9f7c42a13edde300; PC = 0x555555557350 *)
mov %rax [L0x7fffffffcbc0,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* xor    %al,(%rcx)                               #! EA = L0x7fffffffcbc0; PC = 0x555555557353 *)
mov [m0,_,_,_,_,_,_,_] %rax; xor L0x7fffffffcbc0@uint8 L0x7fffffffcbc0 m0;
(* #je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x555555557358 *)
#je     0x5555555573be <gf256v_add_sse+350>     #! 0x555555557358 = 0x555555557358;
(* movzbl 0x1(%rsi),%eax                           #! EA = L0x7fffffffcbc1; Value = 0x599f7c42a13edde3; PC = 0x55555555735a *)
mov %rax [L0x7fffffffcbc1,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* xor    %al,0x1(%rcx)                            #! EA = L0x7fffffffcbc1; PC = 0x55555555735e *)
mov [m0,_,_,_,_,_,_,_] %rax; xor L0x7fffffffcbc1@uint8 L0x7fffffffcbc1 m0;
(* #je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x555555557364 *)
#je     0x5555555573be <gf256v_add_sse+350>     #! 0x555555557364 = 0x555555557364;
(* movzbl 0x2(%rsi),%eax                           #! EA = L0x7fffffffcbc2; Value = 0xba599f7c42a13edd; PC = 0x555555557366 *)
mov %rax [L0x7fffffffcbc2,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* xor    %al,0x2(%rcx)                            #! EA = L0x7fffffffcbc2; PC = 0x55555555736a *)
mov [m0,_,_,_,_,_,_,_] %rax; xor L0x7fffffffcbc2@uint8 L0x7fffffffcbc2 m0;
(* #je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x555555557370 *)
#je     0x5555555573be <gf256v_add_sse+350>     #! 0x555555557370 = 0x555555557370;
(* movzbl 0x3(%rsi),%eax                           #! EA = L0x7fffffffcbc3; Value = 0x84ba599f7c42a13e; PC = 0x555555557372 *)
mov %rax [L0x7fffffffcbc3,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* xor    %al,0x3(%rcx)                            #! EA = L0x7fffffffcbc3; PC = 0x555555557376 *)
mov [m0,_,_,_,_,_,_,_] %rax; xor L0x7fffffffcbc3@uint8 L0x7fffffffcbc3 m0;
(* #je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x55555555737c *)
#je     0x5555555573be <gf256v_add_sse+350>     #! 0x55555555737c = 0x55555555737c;
(* #! <- SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* #ret                                            #! PC = 0x5555555573be *)
#ret                                            #! 0x5555555573be = 0x5555555573be;
(* #je     0x55555555b321 <gf256mat_prod_sse+353>  #! PC = 0x55555555b210 *)
#je     0x55555555b321 <gf256mat_prod_sse+353>  #! 0x55555555b210 = 0x55555555b210;
(* mov    %rax,-0x2d8(%rbp)                        #! EA = L0x7fffffffc778; PC = 0x55555555b224 *)
mov [L0x7fffffffc778,L0x7fffffffc779,L0x7fffffffc77a,L0x7fffffffc77b,
     L0x7fffffffc77c,L0x7fffffffc77d,L0x7fffffffc77e,L0x7fffffffc77f] %rax;
(* mov    -0x2e4(%rbp),%eax                        #! EA = L0x7fffffffc76c; Value = 0xffffcb800000002c; PC = 0x55555555b230 *)
mov %rax [L0x7fffffffc76c,L0x7fffffffc76d,L0x7fffffffc76e,L0x7fffffffc76f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r13d,-0x2c8(%rbp)                       #! EA = L0x7fffffffc788; PC = 0x55555555b243 *)
mov [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,_,_,_,_]
    %r13;
(* #jbe    0x55555555b340 <gf256mat_prod_sse+384>  #! PC = 0x55555555b24d *)
#jbe    0x55555555b340 <gf256mat_prod_sse+384>  #! 0x55555555b24d = 0x55555555b24d;
(* mov    -0x2f0(%rbp),%rax                        #! EA = L0x7fffffffc760; Value = 0x00007fffffffcb00; PC = 0x55555555b253 *)
mov %rax [L0x7fffffffc760,L0x7fffffffc761,L0x7fffffffc762,L0x7fffffffc763,
          L0x7fffffffc764,L0x7fffffffc765,L0x7fffffffc766,L0x7fffffffc767];
(* mov    %r13d,%esi                               #! PC = 0x55555555b25a *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movdqu (%rax),%xmm0                             #! EA = L0x7fffffffcb00; Value = 0x96530b370ed525d0; PC = 0x55555555b25d *)
mov %xmm0 [L0x7fffffffcb00, L0x7fffffffcb01, L0x7fffffffcb02, L0x7fffffffcb03,
           L0x7fffffffcb04, L0x7fffffffcb05, L0x7fffffffcb06, L0x7fffffffcb07,
           L0x7fffffffcb08, L0x7fffffffcb09, L0x7fffffffcb0a, L0x7fffffffcb0b,
           L0x7fffffffcb0c, L0x7fffffffcb0d, L0x7fffffffcb0e, L0x7fffffffcb0f];
(* mov    -0x2d8(%rbp),%rdi                        #! EA = L0x7fffffffc778; Value = 0x00007fffffffc810; PC = 0x55555555b261 *)
mov %rdi [L0x7fffffffc778,L0x7fffffffc779,L0x7fffffffc77a,L0x7fffffffc77b,
          L0x7fffffffc77c,L0x7fffffffc77d,L0x7fffffffc77e,L0x7fffffffc77f];
(* #call   0x555555557410 <gf256v_generate_multab_16_sse>#! PC = 0x55555555b268 *)
#call   0x555555557410 <gf256v_generate_multab_16_sse>#! 0x55555555b268 = 0x55555555b268;
(* #! -> SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* movdqa %xmm0,%xmm1                              #! PC = 0x555555557411 *)
mov %xmm1 %xmm0;
(* movdqa %xmm0,%xmm10                             #! PC = 0x555555557415 *)
mov %xmm10 %xmm0;
(* movdqa %xmm1,%xmm13                             #! PC = 0x55555555741a *)
mov %xmm13 %xmm1;
(* psrlw  $0x4,%xmm10                              #! PC = 0x55555555741f *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm10 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* movaps %xmm1,-0x10(%rbp)                        #! EA = L0x7fffffffc740; PC = 0x555555557428 *)
mov [L0x7fffffffc740,L0x7fffffffc741,L0x7fffffffc742,L0x7fffffffc743,
     L0x7fffffffc744,L0x7fffffffc745,L0x7fffffffc746,L0x7fffffffc747,
     L0x7fffffffc748,L0x7fffffffc749,L0x7fffffffc74a,L0x7fffffffc74b,
     L0x7fffffffc74c,L0x7fffffffc74d,L0x7fffffffc74e,L0x7fffffffc74f] %xmm1;
(* movdqa 0xebfc(%rip),%xmm0        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x55555555742c *)
mov %xmm0 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqu 0x10ca4(%rip),%xmm7        # 0x5555555680e0 <__gf256_mulbase+96>#! EA = L0x5555555680e0; Value = 0x3830282018100800; PC = 0x555555557434 *)
mov %xmm7 [L0x5555555680e0, L0x5555555680e1, L0x5555555680e2, L0x5555555680e3,
           L0x5555555680e4, L0x5555555680e5, L0x5555555680e6, L0x5555555680e7,
           L0x5555555680e8, L0x5555555680e9, L0x5555555680ea, L0x5555555680eb,
           L0x5555555680ec, L0x5555555680ed, L0x5555555680ee, L0x5555555680ef];
(* movdqu 0x10cdc(%rip),%xmm6        # 0x555555568120 <__gf256_mulbase+160>#! EA = L0x555555568120; Value = 0xe0c0a08060402000; PC = 0x55555555743c *)
mov %xmm6 [L0x555555568120, L0x555555568121, L0x555555568122, L0x555555568123,
           L0x555555568124, L0x555555568125, L0x555555568126, L0x555555568127,
           L0x555555568128, L0x555555568129, L0x55555556812a, L0x55555556812b,
           L0x55555556812c, L0x55555556812d, L0x55555556812e, L0x55555556812f];
(* movdqu 0x10c64(%rip),%xmm5        # 0x5555555680b0 <__gf256_mulbase+48>#! EA = L0x5555555680b0; Value = 0xe0c0a08060402000; PC = 0x555555557444 *)
mov %xmm5 [L0x5555555680b0, L0x5555555680b1, L0x5555555680b2, L0x5555555680b3,
           L0x5555555680b4, L0x5555555680b5, L0x5555555680b6, L0x5555555680b7,
           L0x5555555680b8, L0x5555555680b9, L0x5555555680ba, L0x5555555680bb,
           L0x5555555680bc, L0x5555555680bd, L0x5555555680be, L0x5555555680bf];
(* movdqu 0x10c4b(%rip),%xmm9        # 0x5555555680a0 <__gf256_mulbase+32>#! EA = L0x5555555680a0; Value = 0x0e0c0a0806040200; PC = 0x55555555744c *)
mov %xmm9 [L0x5555555680a0, L0x5555555680a1, L0x5555555680a2, L0x5555555680a3,
           L0x5555555680a4, L0x5555555680a5, L0x5555555680a6, L0x5555555680a7,
           L0x5555555680a8, L0x5555555680a9, L0x5555555680aa, L0x5555555680ab,
           L0x5555555680ac, L0x5555555680ad, L0x5555555680ae, L0x5555555680af];
(* pand   %xmm0,%xmm13                             #! PC = 0x555555557455 *)
and %xmm13@uint8[16] %xmm13 %xmm0;
(* movdqu 0x10c5d(%rip),%xmm8        # 0x5555555680c0 <__gf256_mulbase+64>#! EA = L0x5555555680c0; Value = 0x1c1814100c080400; PC = 0x55555555745a *)
mov %xmm8 [L0x5555555680c0, L0x5555555680c1, L0x5555555680c2, L0x5555555680c3,
           L0x5555555680c4, L0x5555555680c5, L0x5555555680c6, L0x5555555680c7,
           L0x5555555680c8, L0x5555555680c9, L0x5555555680ca, L0x5555555680cb,
           L0x5555555680cc, L0x5555555680cd, L0x5555555680ce, L0x5555555680cf];
(* pand   %xmm0,%xmm10                             #! PC = 0x555555557463 *)
and %xmm10@uint8[16] %xmm10 %xmm0;
(* movdqu 0x10c8f(%rip),%xmm11        # 0x555555568100 <__gf256_mulbase+128>#! EA = L0x555555568100; Value = 0x7060504030201000; PC = 0x555555557468 *)
mov %xmm11 [L0x555555568100, L0x555555568101, L0x555555568102, L0x555555568103,
           L0x555555568104, L0x555555568105, L0x555555568106, L0x555555568107,
           L0x555555568108, L0x555555568109, L0x55555556810a, L0x55555556810b,
           L0x55555556810c, L0x55555556810d, L0x55555556810e, L0x55555556810f];
(* movdqu 0x10c57(%rip),%xmm2        # 0x5555555680d0 <__gf256_mulbase+80>#! EA = L0x5555555680d0; Value = 0xdb9b5b1bc0804000; PC = 0x555555557471 *)
mov %xmm2 [L0x5555555680d0, L0x5555555680d1, L0x5555555680d2, L0x5555555680d3,
           L0x5555555680d4, L0x5555555680d5, L0x5555555680d6, L0x5555555680d7,
           L0x5555555680d8, L0x5555555680d9, L0x5555555680da, L0x5555555680db,
           L0x5555555680dc, L0x5555555680dd, L0x5555555680de, L0x5555555680df];
(* pshufb %xmm13,%xmm7                             #! PC = 0x555555557479 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm7;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm7 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm6                             #! PC = 0x55555555747f *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10cb2(%rip),%xmm12        # 0x555555568140 <__gf256_mulbase+192>#! EA = L0x555555568140; Value = 0xdb9b5b1bc0804000; PC = 0x555555557485 *)
mov %xmm12 [L0x555555568140, L0x555555568141, L0x555555568142, L0x555555568143,
           L0x555555568144, L0x555555568145, L0x555555568146, L0x555555568147,
           L0x555555568148, L0x555555568149, L0x55555556814a, L0x55555556814b,
           L0x55555556814c, L0x55555556814d, L0x55555556814e, L0x55555556814f];
(* movdqu 0x10c5a(%rip),%xmm4        # 0x5555555680f0 <__gf256_mulbase+112>#! EA = L0x5555555680f0; Value = 0xad2db6369b1b8000; PC = 0x55555555748e *)
mov %xmm4 [L0x5555555680f0, L0x5555555680f1, L0x5555555680f2, L0x5555555680f3,
           L0x5555555680f4, L0x5555555680f5, L0x5555555680f6, L0x5555555680f7,
           L0x5555555680f8, L0x5555555680f9, L0x5555555680fa, L0x5555555680fb,
           L0x5555555680fc, L0x5555555680fd, L0x5555555680fe, L0x5555555680ff];
(* pshufb %xmm13,%xmm9                             #! PC = 0x555555557496 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm9;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm9 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm8                             #! PC = 0x55555555749c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm8;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm8 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10cb5(%rip),%xmm15        # 0x555555568160 <__gf256_mulbase+224>#! EA = L0x555555568160; Value = 0xad2db6369b1b8000; PC = 0x5555555574a2 *)
mov %xmm15 [L0x555555568160, L0x555555568161, L0x555555568162, L0x555555568163,
           L0x555555568164, L0x555555568165, L0x555555568166, L0x555555568167,
           L0x555555568168, L0x555555568169, L0x55555556816a, L0x55555556816b,
           L0x55555556816c, L0x55555556816d, L0x55555556816e, L0x55555556816f];
(* pshufb %xmm13,%xmm11                            #! PC = 0x5555555574ab *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c57(%rip),%xmm0        # 0x555555568110 <__gf256_mulbase+144>#! EA = L0x555555568110; Value = 0x415a776c2d361b00; PC = 0x5555555574b1 *)
mov %xmm0 [L0x555555568110, L0x555555568111, L0x555555568112, L0x555555568113,
           L0x555555568114, L0x555555568115, L0x555555568116, L0x555555568117,
           L0x555555568118, L0x555555568119, L0x55555556811a, L0x55555556811b,
           L0x55555556811c, L0x55555556811d, L0x55555556811e, L0x55555556811f];
(* pshufb %xmm10,%xmm5                             #! PC = 0x5555555574b9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm12                            #! PC = 0x5555555574bf *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c63(%rip),%xmm3        # 0x555555568130 <__gf256_mulbase+176>#! EA = L0x555555568130; Value = 0x82b4eed85a6c3600; PC = 0x5555555574c5 *)
mov %xmm3 [L0x555555568130, L0x555555568131, L0x555555568132, L0x555555568133,
           L0x555555568134, L0x555555568135, L0x555555568136, L0x555555568137,
           L0x555555568138, L0x555555568139, L0x55555556813a, L0x55555556813b,
           L0x55555556813c, L0x55555556813d, L0x55555556813e, L0x55555556813f];
(* pxor   %xmm9,%xmm5                              #! PC = 0x5555555574cd *)
xor %xmm5@uint8[16] %xmm5 %xmm9;
(* movdqu 0x10c75(%rip),%xmm14        # 0x555555568150 <__gf256_mulbase+208>#! EA = L0x555555568150; Value = 0x1f73c7abb4d86c00; PC = 0x5555555574d2 *)
mov %xmm14 [L0x555555568150, L0x555555568151, L0x555555568152, L0x555555568153,
           L0x555555568154, L0x555555568155, L0x555555568156, L0x555555568157,
           L0x555555568158, L0x555555568159, L0x55555556815a, L0x55555556815b,
           L0x55555556815c, L0x55555556815d, L0x55555556815e, L0x55555556815f];
(* pshufb %xmm13,%xmm15                            #! PC = 0x5555555574db *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm15;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm15 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm2                             #! PC = 0x5555555574e1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm2;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm2 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c80(%rip),%xmm13        # 0x555555568170 <__gf256_mulbase+240>#! EA = L0x555555568170; Value = 0x3ee6954d73abd800; PC = 0x5555555574e7 *)
mov %xmm13 [L0x555555568170, L0x555555568171, L0x555555568172, L0x555555568173,
           L0x555555568174, L0x555555568175, L0x555555568176, L0x555555568177,
           L0x555555568178, L0x555555568179, L0x55555556817a, L0x55555556817b,
           L0x55555556817c, L0x55555556817d, L0x55555556817e, L0x55555556817f];
(* pshufb %xmm10,%xmm4                             #! PC = 0x5555555574f0 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm14                            #! PC = 0x5555555574f6 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm14;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm14 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm8,%xmm2                              #! PC = 0x5555555574fc *)
xor %xmm2@uint8[16] %xmm2 %xmm8;
(* pxor   %xmm7,%xmm4                              #! PC = 0x555555557501 *)
xor %xmm4@uint8[16] %xmm4 %xmm7;
(* movdqa 0xeb52(%rip),%xmm9        # 0x555555566060#! EA = L0x555555566060; Value = 0x0000f0f00000f0f0; PC = 0x555555557505 *)
mov %xmm9 [L0x555555566060, L0x555555566061, L0x555555566062, L0x555555566063,
           L0x555555566064, L0x555555566065, L0x555555566066, L0x555555566067,
           L0x555555566068, L0x555555566069, L0x55555556606a, L0x55555556606b,
           L0x55555556606c, L0x55555556606d, L0x55555556606e, L0x55555556606f];
(* pshufb %xmm10,%xmm13                            #! PC = 0x55555555750e *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm13;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm13 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm0                             #! PC = 0x555555557514 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm3                             #! PC = 0x55555555751a *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa 0xeb27(%rip),%xmm8        # 0x555555566050#! EA = L0x555555566050; Value = 0x00000000f0f0f0f0; PC = 0x555555557520 *)
mov %xmm8 [L0x555555566050, L0x555555566051, L0x555555566052, L0x555555566053,
           L0x555555566054, L0x555555566055, L0x555555566056, L0x555555566057,
           L0x555555566058, L0x555555566059, L0x55555556605a, L0x55555556605b,
           L0x55555556605c, L0x55555556605d, L0x55555556605e, L0x55555556605f];
(* movdqa 0xeb0f(%rip),%xmm7        # 0x555555566040#! EA = L0x555555566040; Value = 0xf0f0f0f0f0f0f0f0; PC = 0x555555557529 *)
mov %xmm7 [L0x555555566040, L0x555555566041, L0x555555566042, L0x555555566043,
           L0x555555566044, L0x555555566045, L0x555555566046, L0x555555566047,
           L0x555555566048, L0x555555566049, L0x55555556604a, L0x55555556604b,
           L0x55555556604c, L0x55555556604d, L0x55555556604e, L0x55555556604f];
(* movaps %xmm5,-0x20(%rbp)                        #! EA = L0x7fffffffc730; PC = 0x555555557531 *)
mov [L0x7fffffffc730,L0x7fffffffc731,L0x7fffffffc732,L0x7fffffffc733,
     L0x7fffffffc734,L0x7fffffffc735,L0x7fffffffc736,L0x7fffffffc737,
     L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
     L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f] %xmm5;
(* pshufb %xmm9,%xmm5                              #! PC = 0x555555557535 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm9;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa 0xeb2c(%rip),%xmm10        # 0x555555566070#! EA = L0x555555566070; Value = 0x00f000f000f000f0; PC = 0x55555555753b *)
mov %xmm10 [L0x555555566070, L0x555555566071, L0x555555566072, L0x555555566073,
           L0x555555566074, L0x555555566075, L0x555555566076, L0x555555566077,
           L0x555555566078, L0x555555566079, L0x55555556607a, L0x55555556607b,
           L0x55555556607c, L0x55555556607d, L0x55555556607e, L0x55555556607f];
(* movaps %xmm2,-0x30(%rbp)                        #! EA = L0x7fffffffc720; PC = 0x555555557544 *)
mov [L0x7fffffffc720,L0x7fffffffc721,L0x7fffffffc722,L0x7fffffffc723,
     L0x7fffffffc724,L0x7fffffffc725,L0x7fffffffc726,L0x7fffffffc727,
     L0x7fffffffc728,L0x7fffffffc729,L0x7fffffffc72a,L0x7fffffffc72b,
     L0x7fffffffc72c,L0x7fffffffc72d,L0x7fffffffc72e,L0x7fffffffc72f] %xmm2;
(* pshufb %xmm8,%xmm2                              #! PC = 0x555555557548 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm8;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm2;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm2 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm11,%xmm0                             #! PC = 0x55555555754e *)
xor %xmm0@uint8[16] %xmm0 %xmm11;
(* pxor   %xmm6,%xmm3                              #! PC = 0x555555557553 *)
xor %xmm3@uint8[16] %xmm3 %xmm6;
(* pshufb %xmm10,%xmm1                             #! PC = 0x555555557557 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movaps %xmm4,-0x40(%rbp)                        #! EA = L0x7fffffffc710; PC = 0x55555555755d *)
mov [L0x7fffffffc710,L0x7fffffffc711,L0x7fffffffc712,L0x7fffffffc713,
     L0x7fffffffc714,L0x7fffffffc715,L0x7fffffffc716,L0x7fffffffc717,
     L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
     L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f] %xmm4;
(* pshufb %xmm7,%xmm4                              #! PC = 0x555555557561 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm7;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm14,%xmm12                            #! PC = 0x555555557566 *)
xor %xmm12@uint8[16] %xmm12 %xmm14;
(* pxor   %xmm5,%xmm1                              #! PC = 0x55555555756b *)
xor %xmm1@uint8[16] %xmm1 %xmm5;
(* pxor   %xmm4,%xmm2                              #! PC = 0x55555555756f *)
xor %xmm2@uint8[16] %xmm2 %xmm4;
(* movaps %xmm13,-0x60(%rbp)                       #! EA = L0x7fffffffc6f0; PC = 0x555555557573 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm13;
(* movdqa %xmm12,%xmm14                            #! PC = 0x555555557578 *)
mov %xmm14 %xmm12;
(* pxor   %xmm2,%xmm1                              #! PC = 0x55555555757d *)
xor %xmm1@uint8[16] %xmm1 %xmm2;
(* movaps %xmm0,-0x50(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x555555557581 *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm0;
(* movdqa %xmm3,%xmm13                             #! PC = 0x555555557585 *)
mov %xmm13 %xmm3;
(* pshufb %xmm10,%xmm0                             #! PC = 0x55555555758a *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movaps %xmm1,(%rdi)                             #! EA = L0x7fffffffc810; PC = 0x555555557590 *)
mov [L0x7fffffffc810,L0x7fffffffc811,L0x7fffffffc812,L0x7fffffffc813,
     L0x7fffffffc814,L0x7fffffffc815,L0x7fffffffc816,L0x7fffffffc817,
     L0x7fffffffc818,L0x7fffffffc819,L0x7fffffffc81a,L0x7fffffffc81b,
     L0x7fffffffc81c,L0x7fffffffc81d,L0x7fffffffc81e,L0x7fffffffc81f] %xmm1;
(* movdqa -0x60(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x42950073000fab0f; PC = 0x555555557593 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* pshufb %xmm9,%xmm3                              #! PC = 0x555555557598 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm9;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm8,%xmm12                             #! PC = 0x55555555759e *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm8;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm3,%xmm0                              #! PC = 0x5555555575a4 *)
xor %xmm0@uint8[16] %xmm0 %xmm3;
(* pxor   %xmm15,%xmm1                             #! PC = 0x5555555575a8 *)
xor %xmm1@uint8[16] %xmm1 %xmm15;
(* movdqa %xmm1,%xmm15                             #! PC = 0x5555555575ad *)
mov %xmm15 %xmm1;
(* pshufb %xmm7,%xmm1                              #! PC = 0x5555555575b2 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm7;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm12                             #! PC = 0x5555555575b7 *)
xor %xmm12@uint8[16] %xmm12 %xmm1;
(* pxor   %xmm12,%xmm0                             #! PC = 0x5555555575bc *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movaps %xmm0,0x10(%rdi)                         #! EA = L0x7fffffffc820; PC = 0x5555555575c1 *)
mov [L0x7fffffffc820,L0x7fffffffc821,L0x7fffffffc822,L0x7fffffffc823,
     L0x7fffffffc824,L0x7fffffffc825,L0x7fffffffc826,L0x7fffffffc827,
     L0x7fffffffc828,L0x7fffffffc829,L0x7fffffffc82a,L0x7fffffffc82b,
     L0x7fffffffc82c,L0x7fffffffc82d,L0x7fffffffc82e,L0x7fffffffc82f] %xmm0;
(* #jbe    0x5555555576c9 <gf256v_generate_multab_16_sse+697>#! PC = 0x5555555575c8 *)
#jbe    0x5555555576c9 <gf256v_generate_multab_16_sse+697>#! 0x5555555575c8 = 0x5555555575c8;
(* movdqa 0xea62(%rip),%xmm10        # 0x555555566040#! EA = L0x555555566040; Value = 0xf0f0f0f0f0f0f0f0; PC = 0x5555555575d5 *)
mov %xmm10 [L0x555555566040, L0x555555566041, L0x555555566042, L0x555555566043,
           L0x555555566044, L0x555555566045, L0x555555566046, L0x555555566047,
           L0x555555566048, L0x555555566049, L0x55555556604a, L0x55555556604b,
           L0x55555556604c, L0x55555556604d, L0x55555556604e, L0x55555556604f];
(* movdqa 0xea69(%rip),%xmm9        # 0x555555566050#! EA = L0x555555566050; Value = 0x00000000f0f0f0f0; PC = 0x5555555575de *)
mov %xmm9 [L0x555555566050, L0x555555566051, L0x555555566052, L0x555555566053,
           L0x555555566054, L0x555555566055, L0x555555566056, L0x555555566057,
           L0x555555566058, L0x555555566059, L0x55555556605a, L0x55555556605b,
           L0x55555556605c, L0x55555556605d, L0x55555556605e, L0x55555556605f];
(* movdqa 0xea7d(%rip),%xmm7        # 0x555555566070#! EA = L0x555555566070; Value = 0x00f000f000f000f0; PC = 0x5555555575eb *)
mov %xmm7 [L0x555555566070, L0x555555566071, L0x555555566072, L0x555555566073,
           L0x555555566074, L0x555555566075, L0x555555566076, L0x555555566077,
           L0x555555566078, L0x555555566079, L0x55555556607a, L0x55555556607b,
           L0x55555556607c, L0x55555556607d, L0x55555556607e, L0x55555556607f];
(* movdqa 0xea64(%rip),%xmm8        # 0x555555566060#! EA = L0x555555566060; Value = 0x0000f0f00000f0f0; PC = 0x5555555575f3 *)
mov %xmm8 [L0x555555566060, L0x555555566061, L0x555555566062, L0x555555566063,
           L0x555555566064, L0x555555566065, L0x555555566066, L0x555555566067,
           L0x555555566068, L0x555555566069, L0x55555556606a, L0x55555556606b,
           L0x55555556606c, L0x55555556606d, L0x55555556606e, L0x55555556606f];
(* movdqa 0xea1c(%rip),%xmm1        # 0x555555566020#! EA = L0x555555566020; Value = 0x0101010101010101; PC = 0x5555555575fc *)
mov %xmm1 [L0x555555566020, L0x555555566021, L0x555555566022, L0x555555566023,
           L0x555555566024, L0x555555566025, L0x555555566026, L0x555555566027,
           L0x555555566028, L0x555555566029, L0x55555556602a, L0x55555556602b,
           L0x55555556602c, L0x55555556602d, L0x55555556602e, L0x55555556602f];
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc830; PC = 0x555555557684 *)
mov [L0x7fffffffc830,L0x7fffffffc831,L0x7fffffffc832,L0x7fffffffc833,
     L0x7fffffffc834,L0x7fffffffc835,L0x7fffffffc836,L0x7fffffffc837,
     L0x7fffffffc838,L0x7fffffffc839,L0x7fffffffc83a,L0x7fffffffc83b,
     L0x7fffffffc83c,L0x7fffffffc83d,L0x7fffffffc83e,L0x7fffffffc83f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc840; PC = 0x5555555576bc *)
mov [L0x7fffffffc840,L0x7fffffffc841,L0x7fffffffc842,L0x7fffffffc843,
     L0x7fffffffc844,L0x7fffffffc845,L0x7fffffffc846,L0x7fffffffc847,
     L0x7fffffffc848,L0x7fffffffc849,L0x7fffffffc84a,L0x7fffffffc84b,
     L0x7fffffffc84c,L0x7fffffffc84d,L0x7fffffffc84e,L0x7fffffffc84f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc850; PC = 0x555555557684 *)
mov [L0x7fffffffc850,L0x7fffffffc851,L0x7fffffffc852,L0x7fffffffc853,
     L0x7fffffffc854,L0x7fffffffc855,L0x7fffffffc856,L0x7fffffffc857,
     L0x7fffffffc858,L0x7fffffffc859,L0x7fffffffc85a,L0x7fffffffc85b,
     L0x7fffffffc85c,L0x7fffffffc85d,L0x7fffffffc85e,L0x7fffffffc85f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc860; PC = 0x5555555576bc *)
mov [L0x7fffffffc860,L0x7fffffffc861,L0x7fffffffc862,L0x7fffffffc863,
     L0x7fffffffc864,L0x7fffffffc865,L0x7fffffffc866,L0x7fffffffc867,
     L0x7fffffffc868,L0x7fffffffc869,L0x7fffffffc86a,L0x7fffffffc86b,
     L0x7fffffffc86c,L0x7fffffffc86d,L0x7fffffffc86e,L0x7fffffffc86f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc870; PC = 0x555555557684 *)
mov [L0x7fffffffc870,L0x7fffffffc871,L0x7fffffffc872,L0x7fffffffc873,
     L0x7fffffffc874,L0x7fffffffc875,L0x7fffffffc876,L0x7fffffffc877,
     L0x7fffffffc878,L0x7fffffffc879,L0x7fffffffc87a,L0x7fffffffc87b,
     L0x7fffffffc87c,L0x7fffffffc87d,L0x7fffffffc87e,L0x7fffffffc87f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc880; PC = 0x5555555576bc *)
mov [L0x7fffffffc880,L0x7fffffffc881,L0x7fffffffc882,L0x7fffffffc883,
     L0x7fffffffc884,L0x7fffffffc885,L0x7fffffffc886,L0x7fffffffc887,
     L0x7fffffffc888,L0x7fffffffc889,L0x7fffffffc88a,L0x7fffffffc88b,
     L0x7fffffffc88c,L0x7fffffffc88d,L0x7fffffffc88e,L0x7fffffffc88f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc890; PC = 0x555555557684 *)
mov [L0x7fffffffc890,L0x7fffffffc891,L0x7fffffffc892,L0x7fffffffc893,
     L0x7fffffffc894,L0x7fffffffc895,L0x7fffffffc896,L0x7fffffffc897,
     L0x7fffffffc898,L0x7fffffffc899,L0x7fffffffc89a,L0x7fffffffc89b,
     L0x7fffffffc89c,L0x7fffffffc89d,L0x7fffffffc89e,L0x7fffffffc89f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8a0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8a0,L0x7fffffffc8a1,L0x7fffffffc8a2,L0x7fffffffc8a3,
     L0x7fffffffc8a4,L0x7fffffffc8a5,L0x7fffffffc8a6,L0x7fffffffc8a7,
     L0x7fffffffc8a8,L0x7fffffffc8a9,L0x7fffffffc8aa,L0x7fffffffc8ab,
     L0x7fffffffc8ac,L0x7fffffffc8ad,L0x7fffffffc8ae,L0x7fffffffc8af] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8b0; PC = 0x555555557684 *)
mov [L0x7fffffffc8b0,L0x7fffffffc8b1,L0x7fffffffc8b2,L0x7fffffffc8b3,
     L0x7fffffffc8b4,L0x7fffffffc8b5,L0x7fffffffc8b6,L0x7fffffffc8b7,
     L0x7fffffffc8b8,L0x7fffffffc8b9,L0x7fffffffc8ba,L0x7fffffffc8bb,
     L0x7fffffffc8bc,L0x7fffffffc8bd,L0x7fffffffc8be,L0x7fffffffc8bf] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8c0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8c0,L0x7fffffffc8c1,L0x7fffffffc8c2,L0x7fffffffc8c3,
     L0x7fffffffc8c4,L0x7fffffffc8c5,L0x7fffffffc8c6,L0x7fffffffc8c7,
     L0x7fffffffc8c8,L0x7fffffffc8c9,L0x7fffffffc8ca,L0x7fffffffc8cb,
     L0x7fffffffc8cc,L0x7fffffffc8cd,L0x7fffffffc8ce,L0x7fffffffc8cf] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8d0; PC = 0x555555557684 *)
mov [L0x7fffffffc8d0,L0x7fffffffc8d1,L0x7fffffffc8d2,L0x7fffffffc8d3,
     L0x7fffffffc8d4,L0x7fffffffc8d5,L0x7fffffffc8d6,L0x7fffffffc8d7,
     L0x7fffffffc8d8,L0x7fffffffc8d9,L0x7fffffffc8da,L0x7fffffffc8db,
     L0x7fffffffc8dc,L0x7fffffffc8dd,L0x7fffffffc8de,L0x7fffffffc8df] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8e0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8e0,L0x7fffffffc8e1,L0x7fffffffc8e2,L0x7fffffffc8e3,
     L0x7fffffffc8e4,L0x7fffffffc8e5,L0x7fffffffc8e6,L0x7fffffffc8e7,
     L0x7fffffffc8e8,L0x7fffffffc8e9,L0x7fffffffc8ea,L0x7fffffffc8eb,
     L0x7fffffffc8ec,L0x7fffffffc8ed,L0x7fffffffc8ee,L0x7fffffffc8ef] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8f0; PC = 0x555555557684 *)
mov [L0x7fffffffc8f0,L0x7fffffffc8f1,L0x7fffffffc8f2,L0x7fffffffc8f3,
     L0x7fffffffc8f4,L0x7fffffffc8f5,L0x7fffffffc8f6,L0x7fffffffc8f7,
     L0x7fffffffc8f8,L0x7fffffffc8f9,L0x7fffffffc8fa,L0x7fffffffc8fb,
     L0x7fffffffc8fc,L0x7fffffffc8fd,L0x7fffffffc8fe,L0x7fffffffc8ff] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc900; PC = 0x5555555576bc *)
mov [L0x7fffffffc900,L0x7fffffffc901,L0x7fffffffc902,L0x7fffffffc903,
     L0x7fffffffc904,L0x7fffffffc905,L0x7fffffffc906,L0x7fffffffc907,
     L0x7fffffffc908,L0x7fffffffc909,L0x7fffffffc90a,L0x7fffffffc90b,
     L0x7fffffffc90c,L0x7fffffffc90d,L0x7fffffffc90e,L0x7fffffffc90f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc910; PC = 0x555555557684 *)
mov [L0x7fffffffc910,L0x7fffffffc911,L0x7fffffffc912,L0x7fffffffc913,
     L0x7fffffffc914,L0x7fffffffc915,L0x7fffffffc916,L0x7fffffffc917,
     L0x7fffffffc918,L0x7fffffffc919,L0x7fffffffc91a,L0x7fffffffc91b,
     L0x7fffffffc91c,L0x7fffffffc91d,L0x7fffffffc91e,L0x7fffffffc91f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc920; PC = 0x5555555576bc *)
mov [L0x7fffffffc920,L0x7fffffffc921,L0x7fffffffc922,L0x7fffffffc923,
     L0x7fffffffc924,L0x7fffffffc925,L0x7fffffffc926,L0x7fffffffc927,
     L0x7fffffffc928,L0x7fffffffc929,L0x7fffffffc92a,L0x7fffffffc92b,
     L0x7fffffffc92c,L0x7fffffffc92d,L0x7fffffffc92e,L0x7fffffffc92f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc930; PC = 0x555555557684 *)
mov [L0x7fffffffc930,L0x7fffffffc931,L0x7fffffffc932,L0x7fffffffc933,
     L0x7fffffffc934,L0x7fffffffc935,L0x7fffffffc936,L0x7fffffffc937,
     L0x7fffffffc938,L0x7fffffffc939,L0x7fffffffc93a,L0x7fffffffc93b,
     L0x7fffffffc93c,L0x7fffffffc93d,L0x7fffffffc93e,L0x7fffffffc93f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc940; PC = 0x5555555576bc *)
mov [L0x7fffffffc940,L0x7fffffffc941,L0x7fffffffc942,L0x7fffffffc943,
     L0x7fffffffc944,L0x7fffffffc945,L0x7fffffffc946,L0x7fffffffc947,
     L0x7fffffffc948,L0x7fffffffc949,L0x7fffffffc94a,L0x7fffffffc94b,
     L0x7fffffffc94c,L0x7fffffffc94d,L0x7fffffffc94e,L0x7fffffffc94f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc950; PC = 0x555555557684 *)
mov [L0x7fffffffc950,L0x7fffffffc951,L0x7fffffffc952,L0x7fffffffc953,
     L0x7fffffffc954,L0x7fffffffc955,L0x7fffffffc956,L0x7fffffffc957,
     L0x7fffffffc958,L0x7fffffffc959,L0x7fffffffc95a,L0x7fffffffc95b,
     L0x7fffffffc95c,L0x7fffffffc95d,L0x7fffffffc95e,L0x7fffffffc95f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc960; PC = 0x5555555576bc *)
mov [L0x7fffffffc960,L0x7fffffffc961,L0x7fffffffc962,L0x7fffffffc963,
     L0x7fffffffc964,L0x7fffffffc965,L0x7fffffffc966,L0x7fffffffc967,
     L0x7fffffffc968,L0x7fffffffc969,L0x7fffffffc96a,L0x7fffffffc96b,
     L0x7fffffffc96c,L0x7fffffffc96d,L0x7fffffffc96e,L0x7fffffffc96f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc970; PC = 0x555555557684 *)
mov [L0x7fffffffc970,L0x7fffffffc971,L0x7fffffffc972,L0x7fffffffc973,
     L0x7fffffffc974,L0x7fffffffc975,L0x7fffffffc976,L0x7fffffffc977,
     L0x7fffffffc978,L0x7fffffffc979,L0x7fffffffc97a,L0x7fffffffc97b,
     L0x7fffffffc97c,L0x7fffffffc97d,L0x7fffffffc97e,L0x7fffffffc97f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc980; PC = 0x5555555576bc *)
mov [L0x7fffffffc980,L0x7fffffffc981,L0x7fffffffc982,L0x7fffffffc983,
     L0x7fffffffc984,L0x7fffffffc985,L0x7fffffffc986,L0x7fffffffc987,
     L0x7fffffffc988,L0x7fffffffc989,L0x7fffffffc98a,L0x7fffffffc98b,
     L0x7fffffffc98c,L0x7fffffffc98d,L0x7fffffffc98e,L0x7fffffffc98f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc990; PC = 0x555555557684 *)
mov [L0x7fffffffc990,L0x7fffffffc991,L0x7fffffffc992,L0x7fffffffc993,
     L0x7fffffffc994,L0x7fffffffc995,L0x7fffffffc996,L0x7fffffffc997,
     L0x7fffffffc998,L0x7fffffffc999,L0x7fffffffc99a,L0x7fffffffc99b,
     L0x7fffffffc99c,L0x7fffffffc99d,L0x7fffffffc99e,L0x7fffffffc99f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc9a0; PC = 0x5555555576bc *)
mov [L0x7fffffffc9a0,L0x7fffffffc9a1,L0x7fffffffc9a2,L0x7fffffffc9a3,
     L0x7fffffffc9a4,L0x7fffffffc9a5,L0x7fffffffc9a6,L0x7fffffffc9a7,
     L0x7fffffffc9a8,L0x7fffffffc9a9,L0x7fffffffc9aa,L0x7fffffffc9ab,
     L0x7fffffffc9ac,L0x7fffffffc9ad,L0x7fffffffc9ae,L0x7fffffffc9af] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc9b0; PC = 0x555555557684 *)
mov [L0x7fffffffc9b0,L0x7fffffffc9b1,L0x7fffffffc9b2,L0x7fffffffc9b3,
     L0x7fffffffc9b4,L0x7fffffffc9b5,L0x7fffffffc9b6,L0x7fffffffc9b7,
     L0x7fffffffc9b8,L0x7fffffffc9b9,L0x7fffffffc9ba,L0x7fffffffc9bb,
     L0x7fffffffc9bc,L0x7fffffffc9bd,L0x7fffffffc9be,L0x7fffffffc9bf] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc9c0; PC = 0x5555555576bc *)
mov [L0x7fffffffc9c0,L0x7fffffffc9c1,L0x7fffffffc9c2,L0x7fffffffc9c3,
     L0x7fffffffc9c4,L0x7fffffffc9c5,L0x7fffffffc9c6,L0x7fffffffc9c7,
     L0x7fffffffc9c8,L0x7fffffffc9c9,L0x7fffffffc9ca,L0x7fffffffc9cb,
     L0x7fffffffc9cc,L0x7fffffffc9cd,L0x7fffffffc9ce,L0x7fffffffc9cf] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc9d0; PC = 0x555555557684 *)
mov [L0x7fffffffc9d0,L0x7fffffffc9d1,L0x7fffffffc9d2,L0x7fffffffc9d3,
     L0x7fffffffc9d4,L0x7fffffffc9d5,L0x7fffffffc9d6,L0x7fffffffc9d7,
     L0x7fffffffc9d8,L0x7fffffffc9d9,L0x7fffffffc9da,L0x7fffffffc9db,
     L0x7fffffffc9dc,L0x7fffffffc9dd,L0x7fffffffc9de,L0x7fffffffc9df] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc9e0; PC = 0x5555555576bc *)
mov [L0x7fffffffc9e0,L0x7fffffffc9e1,L0x7fffffffc9e2,L0x7fffffffc9e3,
     L0x7fffffffc9e4,L0x7fffffffc9e5,L0x7fffffffc9e6,L0x7fffffffc9e7,
     L0x7fffffffc9e8,L0x7fffffffc9e9,L0x7fffffffc9ea,L0x7fffffffc9eb,
     L0x7fffffffc9ec,L0x7fffffffc9ed,L0x7fffffffc9ee,L0x7fffffffc9ef] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x96530b370ed525d0; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x37a6166e1cb14abb; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x6e572cdc3879946d; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xdcae58a370f233da; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc9f0; PC = 0x555555557684 *)
mov [L0x7fffffffc9f0,L0x7fffffffc9f1,L0x7fffffffc9f2,L0x7fffffffc9f3,
     L0x7fffffffc9f4,L0x7fffffffc9f5,L0x7fffffffc9f6,L0x7fffffffc9f7,
     L0x7fffffffc9f8,L0x7fffffffc9f9,L0x7fffffffc9fa,L0x7fffffffc9fb,
     L0x7fffffffc9fc,L0x7fffffffc9fd,L0x7fffffffc9fe,L0x7fffffffc9ff] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa347b05de0ff66af; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffca00; PC = 0x5555555576bc *)
mov [L0x7fffffffca00,L0x7fffffffca01,L0x7fffffffca02,L0x7fffffffca03,
     L0x7fffffffca04,L0x7fffffffca05,L0x7fffffffca06,L0x7fffffffca07,
     L0x7fffffffca08,L0x7fffffffca09,L0x7fffffffca0a,L0x7fffffffca0b,
     L0x7fffffffca0c,L0x7fffffffca0d,L0x7fffffffca0e,L0x7fffffffca0f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* #! <- SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* #ret                                            #! PC = 0x5555555576ca *)
#ret                                            #! 0x5555555576ca = 0x5555555576ca;
(* #je     0x55555555b2fa <gf256mat_prod_sse+314>  #! PC = 0x55555555b270 *)
#je     0x55555555b2fa <gf256mat_prod_sse+314>  #! 0x55555555b270 = 0x55555555b270;
(* mov    %r12d,%r14d                              #! PC = 0x55555555b276 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %r14 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r12d,%ecx                               #! PC = 0x55555555b286 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %rcx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    -0x2e0(%rbp),%rax                        #! EA = L0x7fffffffc770; Value = 0x00007fffffffcb80; PC = 0x55555555b289 *)
mov %rax [L0x7fffffffc770,L0x7fffffffc771,L0x7fffffffc772,L0x7fffffffc773,
          L0x7fffffffc774,L0x7fffffffc775,L0x7fffffffc776,L0x7fffffffc777];
(* mov    %rbx,%rdi                                #! PC = 0x55555555b290 *)
mov %rdi %rbx;
(* mov    %ecx,%r10d                               #! PC = 0x55555555b29d *)
mov [m0,m1,m2,m3,_,_,_,_] %rcx;
mov %r10 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,-0x2c4(%rbp)                        #! EA = L0x7fffffffc78c; PC = 0x55555555b2a0 *)
mov [L0x7fffffffc78c,L0x7fffffffc78d,L0x7fffffffc78e,L0x7fffffffc78f,_,_,_,_]
    %rcx;
(* mov    %r8d,%edx                                #! PC = 0x55555555b2aa *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r8d,%r13d                               #! PC = 0x55555555b2ad *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r13 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r15,%rsi                                #! PC = 0x55555555b2b0 *)
mov %rsi %r15;
(* #call   0x555555557040 <loadu_xmm>              #! PC = 0x55555555b2b3 *)
#call   0x555555557040 <loadu_xmm>              #! 0x55555555b2b3 = 0x55555555b2b3;
(* #! -> SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* mov    %edx,%eax                                #! PC = 0x555555557041 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rbx                                #! PC = 0x55555555704a *)
mov %rbx %rdi;
(* mov    %rsi,%rdi                                #! PC = 0x55555555704d *)
mov %rdi %rsi;
(* mov    %edx,%esi                                #! PC = 0x555555557050 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x5555555570d2 <loadu_xmm+146>          #! PC = 0x55555555705b *)
#je     0x5555555570d2 <loadu_xmm+146>          #! 0x55555555705b = 0x55555555705b;
(* movdqu (%rdi),%xmm1                             #! EA = L0x7fffffffcb80; Value = 0x0000000000000000; PC = 0x55555555705d *)
mov %xmm1 [L0x7fffffffcb80, L0x7fffffffcb81, L0x7fffffffcb82, L0x7fffffffcb83,
           L0x7fffffffcb84, L0x7fffffffcb85, L0x7fffffffcb86, L0x7fffffffcb87,
           L0x7fffffffcb88, L0x7fffffffcb89, L0x7fffffffcb8a, L0x7fffffffcb8b,
           L0x7fffffffcb8c, L0x7fffffffcb8d, L0x7fffffffcb8e, L0x7fffffffcb8f];
(* movaps %xmm1,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x555555557064 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm1;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557069 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557069 = 0x555555557069;
(* movdqu 0x10(%rdi),%xmm2                         #! EA = L0x7fffffffcb90; Value = 0x0000000000000000; PC = 0x55555555706b *)
mov %xmm2 [L0x7fffffffcb90, L0x7fffffffcb91, L0x7fffffffcb92, L0x7fffffffcb93,
           L0x7fffffffcb94, L0x7fffffffcb95, L0x7fffffffcb96, L0x7fffffffcb97,
           L0x7fffffffcb98, L0x7fffffffcb99, L0x7fffffffcb9a, L0x7fffffffcb9b,
           L0x7fffffffcb9c, L0x7fffffffcb9d, L0x7fffffffcb9e, L0x7fffffffcb9f];
(* movaps %xmm2,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x555555557070 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm2;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557077 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557077 = 0x555555557077;
(* movdqu 0x20(%rdi),%xmm3                         #! EA = L0x7fffffffcba0; Value = 0x0000000000000000; PC = 0x555555557079 *)
mov %xmm3 [L0x7fffffffcba0, L0x7fffffffcba1, L0x7fffffffcba2, L0x7fffffffcba3,
           L0x7fffffffcba4, L0x7fffffffcba5, L0x7fffffffcba6, L0x7fffffffcba7,
           L0x7fffffffcba8, L0x7fffffffcba9, L0x7fffffffcbaa, L0x7fffffffcbab,
           L0x7fffffffcbac, L0x7fffffffcbad, L0x7fffffffcbae, L0x7fffffffcbaf];
(* movaps %xmm3,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555707e *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm3;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557085 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557085 = 0x555555557085;
(* movdqu 0x30(%rdi),%xmm4                         #! EA = L0x7fffffffcbb0; Value = 0x0000000000000000; PC = 0x555555557087 *)
mov %xmm4 [L0x7fffffffcbb0, L0x7fffffffcbb1, L0x7fffffffcbb2, L0x7fffffffcbb3,
           L0x7fffffffcbb4, L0x7fffffffcbb5, L0x7fffffffcbb6, L0x7fffffffcbb7,
           L0x7fffffffcbb8, L0x7fffffffcbb9, L0x7fffffffcbba, L0x7fffffffcbbb,
           L0x7fffffffcbbc, L0x7fffffffcbbd, L0x7fffffffcbbe, L0x7fffffffcbbf];
(* movaps %xmm4,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555708c *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm4;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557093 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557093 = 0x555555557093;
(* #je     0x5555555570de <loadu_xmm+158>          #! PC = 0x5555555570d4 *)
#je     0x5555555570de <loadu_xmm+158>          #! 0x5555555570d4 = 0x5555555570d4;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x5555555570d6 *)
#call   0x555555556ff0 <_load_xmm>              #! 0x5555555570d6 = 0x5555555570d6;
(* #! -> SP = 0x7fffffffc738 *)
#! 0x7fffffffc738 = 0x7fffffffc738;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc718; PC = 0x555555557005 *)
mov [L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
     L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc6d8 *)
#! 0x7fffffffc6d8 = 0x7fffffffc6d8;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7fffffffcbc0; Value = 0x9f7c42a100000000; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7fffffffcbc0; Value = 0x9f7c42a100000000; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc6e0; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc6e0; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc6d8 *)
#! 0x7fffffffc6d8 = 0x7fffffffc6d8;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc6e0; Value = 0x0000000000000000; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc6e0, L0x7fffffffc6e1, L0x7fffffffc6e2, L0x7fffffffc6e3,
           L0x7fffffffc6e4, L0x7fffffffc6e5, L0x7fffffffc6e6, L0x7fffffffc6e7,
           L0x7fffffffc6e8, L0x7fffffffc6e9, L0x7fffffffc6ea, L0x7fffffffc6eb,
           L0x7fffffffc6ec, L0x7fffffffc6ed, L0x7fffffffc6ee, L0x7fffffffc6ef];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc718; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
          L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc738 *)
#! 0x7fffffffc738 = 0x7fffffffc738;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc7d0; PC = 0x5555555570db *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* mov    -0x8(%rbp),%rbx                          #! EA = L0x7fffffffc748; Value = 0x00007fffffffc790; PC = 0x5555555570de *)
mov %rbx [L0x7fffffffc748,L0x7fffffffc749,L0x7fffffffc74a,L0x7fffffffc74b,
          L0x7fffffffc74c,L0x7fffffffc74d,L0x7fffffffc74e,L0x7fffffffc74f];
(* #! <- SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* #ret                                            #! PC = 0x5555555570e3 *)
#ret                                            #! 0x5555555570e3 = 0x5555555570e3;
(* mov    -0x2c8(%rbp),%eax                        #! EA = L0x7fffffffc788; Value = 0x0000000000000010; PC = 0x55555555b2b8 *)
mov %rax [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    -0x2d8(%rbp),%r9                         #! EA = L0x7fffffffc778; Value = 0x00007fffffffc810; PC = 0x55555555b2c2 *)
mov %r9 [L0x7fffffffc778,L0x7fffffffc779,L0x7fffffffc77a,L0x7fffffffc77b,
          L0x7fffffffc77c,L0x7fffffffc77d,L0x7fffffffc77e,L0x7fffffffc77f];
(* mov    -0x2c4(%rbp),%ecx                        #! EA = L0x7fffffffc78c; Value = 0x0000000000000000; PC = 0x55555555b2c9 *)
mov %rcx [L0x7fffffffc78c,L0x7fffffffc78d,L0x7fffffffc78e,L0x7fffffffc78f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r13d,%r8d                               #! PC = 0x55555555b2cf *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %r8 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r12d,%edx                               #! PC = 0x55555555b2d2 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rbx,%rdi                                #! PC = 0x55555555b2d5 *)
mov %rdi %rbx;
(* mov    -0x2d0(%rbp),%rsi                        #! EA = L0x7fffffffc780; Value = 0x00007ffff78bb030; PC = 0x55555555b2d9 *)
mov %rsi [L0x7fffffffc780,L0x7fffffffc781,L0x7fffffffc782,L0x7fffffffc783,
          L0x7fffffffc784,L0x7fffffffc785,L0x7fffffffc786,L0x7fffffffc787];
(* #call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! PC = 0x55555555b2e0 *)
#call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! 0x55555555b2e0 = 0x55555555b2e0;
(* #! -> SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* mov    %r8d,%eax                                #! PC = 0x55555555aa51 *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,%ecx                                #! PC = 0x55555555aa54 *)
mov [m0,m1,m2,m3,_,_,_,_] %rcx;
mov %rcx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r8d,%r15d                               #! PC = 0x55555555aa5e *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r15 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r9,%r14                                 #! PC = 0x55555555aa67 *)
mov %r14 %r9;
(* mov    %r8d,%r13d                               #! PC = 0x55555555aa6c *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r13 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rbx                                #! PC = 0x55555555aa7a *)
mov %rbx %rdi;
(* mov    %rax,-0x68(%rbp)                         #! EA = L0x7fffffffc6d8; PC = 0x55555555aa81 *)
mov [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
     L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df] %rax;
(* mov    %r13d,%eax                               #! PC = 0x55555555aa85 *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x70(%rbp)                         #! EA = L0x7fffffffc6d0; PC = 0x55555555aa8f *)
mov [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
     L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7] %rax;
(* mov    %edx,%eax                                #! PC = 0x55555555aa93 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x60(%rbp)                         #! EA = L0x7fffffffc6e0; PC = 0x55555555aa95 *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,
     L0x7fffffffc6e4,L0x7fffffffc6e5,L0x7fffffffc6e6,L0x7fffffffc6e7] %rax;
(* mov    0x10(%rbp),%eax                          #! EA = L0x7fffffffc750; Value = 0x0000000000000010; PC = 0x55555555aa99 *)
mov %rax [L0x7fffffffc750,L0x7fffffffc751,L0x7fffffffc752,L0x7fffffffc753,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x58(%rbp)                         #! EA = L0x7fffffffc6e8; PC = 0x55555555aaa3 *)
mov [L0x7fffffffc6e8,L0x7fffffffc6e9,L0x7fffffffc6ea,L0x7fffffffc6eb,
     L0x7fffffffc6ec,L0x7fffffffc6ed,L0x7fffffffc6ee,L0x7fffffffc6ef] %rax;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc810; Value = 0x06d6bd6d6bbbd000; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc810, L0x7fffffffc811, L0x7fffffffc812, L0x7fffffffc813,
           L0x7fffffffc814, L0x7fffffffc815, L0x7fffffffc816, L0x7fffffffc817,
           L0x7fffffffc818, L0x7fffffffc819, L0x7fffffffc81a, L0x7fffffffc81b,
           L0x7fffffffc81c, L0x7fffffffc81d, L0x7fffffffc81e, L0x7fffffffc81f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc820; Value = 0x60cf258aea45af00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc820, L0x7fffffffc821, L0x7fffffffc822, L0x7fffffffc823,
           L0x7fffffffc824, L0x7fffffffc825, L0x7fffffffc826, L0x7fffffffc827,
           L0x7fffffffc828, L0x7fffffffc829, L0x7fffffffc82a, L0x7fffffffc82b,
           L0x7fffffffc82c, L0x7fffffffc82d, L0x7fffffffc82e, L0x7fffffffc82f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb030; Value = 0xd8f44c8b8897dd19; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb030, L0x7ffff78bb031, L0x7ffff78bb032, L0x7ffff78bb033,
           L0x7ffff78bb034, L0x7ffff78bb035, L0x7ffff78bb036, L0x7ffff78bb037,
           L0x7ffff78bb038, L0x7ffff78bb039, L0x7ffff78bb03a, L0x7ffff78bb03b,
           L0x7ffff78bb03c, L0x7ffff78bb03d, L0x7ffff78bb03e, L0x7ffff78bb03f];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x0000000000000000; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x60cf258aea45af00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb040; Value = 0x77b0218feb23f21f; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb040, L0x7ffff78bb041, L0x7ffff78bb042, L0x7ffff78bb043,
           L0x7ffff78bb044, L0x7ffff78bb045, L0x7ffff78bb046, L0x7ffff78bb047,
           L0x7ffff78bb048, L0x7ffff78bb049, L0x7ffff78bb04a, L0x7ffff78bb04b,
           L0x7ffff78bb04c, L0x7ffff78bb04d, L0x7ffff78bb04e, L0x7ffff78bb04f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x0000000000000000; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x60cf258aea45af00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb050; Value = 0xb8eee2fd3319998d; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb050, L0x7ffff78bb051, L0x7ffff78bb052, L0x7ffff78bb053,
           L0x7ffff78bb054, L0x7ffff78bb055, L0x7ffff78bb056, L0x7ffff78bb057,
           L0x7ffff78bb058, L0x7ffff78bb059, L0x7ffff78bb05a, L0x7ffff78bb05b,
           L0x7ffff78bb05c, L0x7ffff78bb05d, L0x7ffff78bb05e, L0x7ffff78bb05f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x0000000000000000; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x60cf258aea45af00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb060; Value = 0xb1e86f87cda64cf4; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb060, L0x7ffff78bb061, L0x7ffff78bb062, L0x7ffff78bb063,
           L0x7ffff78bb064, L0x7ffff78bb065, L0x7ffff78bb066, L0x7ffff78bb067,
           L0x7ffff78bb068, L0x7ffff78bb069, L0x7ffff78bb06a, L0x7ffff78bb06b,
           L0x7ffff78bb06c, L0x7ffff78bb06d, L0x7ffff78bb06e, L0x7ffff78bb06f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x0000000000000000; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x60cf258aea45af00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb070; Value = 0x6a7d4402d0246ef4; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb070,L0x7ffff78bb071,L0x7ffff78bb072,L0x7ffff78bb073,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb070; Value = 0x6a7d4402d0246ef4; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb070,L0x7ffff78bb071,L0x7ffff78bb072,L0x7ffff78bb073,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000d0246ef4; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x60cf258aea45af00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x06d6bd6d6bbbd000; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000000000000; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc830; Value = 0xfbdeb1946f4a2500; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc830, L0x7fffffffc831, L0x7fffffffc832, L0x7fffffffc833,
           L0x7fffffffc834, L0x7fffffffc835, L0x7fffffffc836, L0x7fffffffc837,
           L0x7fffffffc838, L0x7fffffffc839, L0x7fffffffc83a, L0x7fffffffc83b,
           L0x7fffffffc83c, L0x7fffffffc83d, L0x7fffffffc83e, L0x7fffffffc83f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc840; Value = 0x294fe583aacc6600; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc840, L0x7fffffffc841, L0x7fffffffc842, L0x7fffffffc843,
           L0x7fffffffc844, L0x7fffffffc845, L0x7fffffffc846, L0x7fffffffc847,
           L0x7fffffffc848, L0x7fffffffc849, L0x7fffffffc84a, L0x7fffffffc84b,
           L0x7fffffffc84c, L0x7fffffffc84d, L0x7fffffffc84e, L0x7fffffffc84f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb074; Value = 0xaf46b5bc6a7d4402; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb074, L0x7ffff78bb075, L0x7ffff78bb076, L0x7ffff78bb077,
           L0x7ffff78bb078, L0x7ffff78bb079, L0x7ffff78bb07a, L0x7ffff78bb07b,
           L0x7ffff78bb07c, L0x7ffff78bb07d, L0x7ffff78bb07e, L0x7ffff78bb07f,
           L0x7ffff78bb080, L0x7ffff78bb081, L0x7ffff78bb082, L0x7ffff78bb083];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xf0023dbed5a64da5; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb084; Value = 0x2a333b0b8e2802e0; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb084, L0x7ffff78bb085, L0x7ffff78bb086, L0x7ffff78bb087,
           L0x7ffff78bb088, L0x7ffff78bb089, L0x7ffff78bb08a, L0x7ffff78bb08b,
           L0x7ffff78bb08c, L0x7ffff78bb08d, L0x7ffff78bb08e, L0x7ffff78bb08f,
           L0x7ffff78bb090, L0x7ffff78bb091, L0x7ffff78bb092, L0x7ffff78bb093];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x66e595d3712ed473; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb094; Value = 0xd33f56596494de5a; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb094, L0x7ffff78bb095, L0x7ffff78bb096, L0x7ffff78bb097,
           L0x7ffff78bb098, L0x7ffff78bb099, L0x7ffff78bb09a, L0x7ffff78bb09b,
           L0x7ffff78bb09c, L0x7ffff78bb09d, L0x7ffff78bb09e, L0x7ffff78bb09f,
           L0x7ffff78bb0a0, L0x7ffff78bb0a1, L0x7ffff78bb0a2, L0x7ffff78bb0a3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x3fcc7b0881a5aa68; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb0a4; Value = 0xf1823fdea341cb64; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb0a4, L0x7ffff78bb0a5, L0x7ffff78bb0a6, L0x7ffff78bb0a7,
           L0x7ffff78bb0a8, L0x7ffff78bb0a9, L0x7ffff78bb0aa, L0x7ffff78bb0ab,
           L0x7ffff78bb0ac, L0x7ffff78bb0ad, L0x7ffff78bb0ae, L0x7ffff78bb0af,
           L0x7ffff78bb0b0, L0x7ffff78bb0b1, L0x7ffff78bb0b2, L0x7ffff78bb0b3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x351a1309e29c3d02; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb0b4; Value = 0xc385876789cc66df; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb0b4,L0x7ffff78bb0b5,L0x7ffff78bb0b6,L0x7ffff78bb0b7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb0b4; Value = 0xc385876789cc66df; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb0b4,L0x7ffff78bb0b5,L0x7ffff78bb0b6,L0x7ffff78bb0b7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000089cc66df; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xfbdeb1946f4a2500; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000002a28c302; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc850; Value = 0x1dc8ac7964b1d500; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc850, L0x7fffffffc851, L0x7fffffffc852, L0x7fffffffc853,
           L0x7fffffffc854, L0x7fffffffc855, L0x7fffffffc856, L0x7fffffffc857,
           L0x7fffffffc858, L0x7fffffffc859, L0x7fffffffc85a, L0x7fffffffc85b,
           L0x7fffffffc85c, L0x7fffffffc85d, L0x7fffffffc85e, L0x7fffffffc85f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc860; Value = 0xcb342ed11ae5ff00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc860, L0x7fffffffc861, L0x7fffffffc862, L0x7fffffffc863,
           L0x7fffffffc864, L0x7fffffffc865, L0x7fffffffc866, L0x7fffffffc867,
           L0x7fffffffc868, L0x7fffffffc869, L0x7fffffffc86a, L0x7fffffffc86b,
           L0x7fffffffc86c, L0x7fffffffc86d, L0x7fffffffc86e, L0x7fffffffc86f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb0b8; Value = 0x54fe6c00c3858767; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb0b8, L0x7ffff78bb0b9, L0x7ffff78bb0ba, L0x7ffff78bb0bb,
           L0x7ffff78bb0bc, L0x7ffff78bb0bd, L0x7ffff78bb0be, L0x7ffff78bb0bf,
           L0x7ffff78bb0c0, L0x7ffff78bb0c1, L0x7ffff78bb0c2, L0x7ffff78bb0c3,
           L0x7ffff78bb0c4, L0x7ffff78bb0c5, L0x7ffff78bb0c6, L0x7ffff78bb0c7];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xe95f3baee30d5aef; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb0c8; Value = 0x8fc0ed3ac4b5e7d1; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb0c8, L0x7ffff78bb0c9, L0x7ffff78bb0ca, L0x7ffff78bb0cb,
           L0x7ffff78bb0cc, L0x7ffff78bb0cd, L0x7ffff78bb0ce, L0x7ffff78bb0cf,
           L0x7ffff78bb0d0, L0x7ffff78bb0d1, L0x7ffff78bb0d2, L0x7ffff78bb0d3,
           L0x7ffff78bb0d4, L0x7ffff78bb0d5, L0x7ffff78bb0d6, L0x7ffff78bb0d7];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xd320638f81d19e21; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb0d8; Value = 0xa906eeb6350d9c0a; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb0d8, L0x7ffff78bb0d9, L0x7ffff78bb0da, L0x7ffff78bb0db,
           L0x7ffff78bb0dc, L0x7ffff78bb0dd, L0x7ffff78bb0de, L0x7ffff78bb0df,
           L0x7ffff78bb0e0, L0x7ffff78bb0e1, L0x7ffff78bb0e2, L0x7ffff78bb0e3,
           L0x7ffff78bb0e4, L0x7ffff78bb0e5, L0x7ffff78bb0e6, L0x7ffff78bb0e7];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xa8ae40fb5a4abff4; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb0e8; Value = 0x3d5bd8e1cf61a8f7; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb0e8, L0x7ffff78bb0e9, L0x7ffff78bb0ea, L0x7ffff78bb0eb,
           L0x7ffff78bb0ec, L0x7ffff78bb0ed, L0x7ffff78bb0ee, L0x7ffff78bb0ef,
           L0x7ffff78bb0f0, L0x7ffff78bb0f1, L0x7ffff78bb0f2, L0x7ffff78bb0f3,
           L0x7ffff78bb0f4, L0x7ffff78bb0f5, L0x7ffff78bb0f6, L0x7ffff78bb0f7];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x244d711c5c3affd9; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb0f8; Value = 0x5398ad44c86a76b9; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb0f8,L0x7ffff78bb0f9,L0x7ffff78bb0fa,L0x7ffff78bb0fb,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb0f8; Value = 0x5398ad44c86a76b9; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb0f8,L0x7ffff78bb0f9,L0x7ffff78bb0fa,L0x7ffff78bb0fb,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000c86a76b9; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x1dc8ac7964b1d500; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000021115232; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc870; Value = 0x2a243638121c0e00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc870, L0x7fffffffc871, L0x7fffffffc872, L0x7fffffffc873,
           L0x7fffffffc874, L0x7fffffffc875, L0x7fffffffc876, L0x7fffffffc877,
           L0x7fffffffc878, L0x7fffffffc879, L0x7fffffffc87a, L0x7fffffffc87b,
           L0x7fffffffc87c, L0x7fffffffc87d, L0x7fffffffc87e, L0x7fffffffc87f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc880; Value = 0x96764dad3bdbe000; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc880, L0x7fffffffc881, L0x7fffffffc882, L0x7fffffffc883,
           L0x7fffffffc884, L0x7fffffffc885, L0x7fffffffc886, L0x7fffffffc887,
           L0x7fffffffc888, L0x7fffffffc889, L0x7fffffffc88a, L0x7fffffffc88b,
           L0x7fffffffc88c, L0x7fffffffc88d, L0x7fffffffc88e, L0x7fffffffc88f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb0fc; Value = 0xe442ae135398ad44; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb0fc, L0x7ffff78bb0fd, L0x7ffff78bb0fe, L0x7ffff78bb0ff,
           L0x7ffff78bb100, L0x7ffff78bb101, L0x7ffff78bb102, L0x7ffff78bb103,
           L0x7ffff78bb104, L0x7ffff78bb105, L0x7ffff78bb106, L0x7ffff78bb107,
           L0x7ffff78bb108, L0x7ffff78bb109, L0x7ffff78bb10a, L0x7ffff78bb10b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xbe1784aeef18fec6; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x96764dad3bdbe000; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb10c; Value = 0xb69c58b2793d3a85; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb10c, L0x7ffff78bb10d, L0x7ffff78bb10e, L0x7ffff78bb10f,
           L0x7ffff78bb110, L0x7ffff78bb111, L0x7ffff78bb112, L0x7ffff78bb113,
           L0x7ffff78bb114, L0x7ffff78bb115, L0x7ffff78bb116, L0x7ffff78bb117,
           L0x7ffff78bb118, L0x7ffff78bb119, L0x7ffff78bb11a, L0x7ffff78bb11b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x8548b0d690de0e63; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x96764dad3bdbe000; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb11c; Value = 0xcafb04e5c8e517d6; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb11c, L0x7ffff78bb11d, L0x7ffff78bb11e, L0x7ffff78bb11f,
           L0x7ffff78bb120, L0x7ffff78bb121, L0x7ffff78bb122, L0x7ffff78bb123,
           L0x7ffff78bb124, L0x7ffff78bb125, L0x7ffff78bb126, L0x7ffff78bb127,
           L0x7ffff78bb128, L0x7ffff78bb129, L0x7ffff78bb12a, L0x7ffff78bb12b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xd366f790ec1472b7; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x96764dad3bdbe000; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb12c; Value = 0x231c4953d9440b52; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb12c, L0x7ffff78bb12d, L0x7ffff78bb12e, L0x7ffff78bb12f,
           L0x7ffff78bb130, L0x7ffff78bb131, L0x7ffff78bb132, L0x7ffff78bb133,
           L0x7ffff78bb134, L0x7ffff78bb135, L0x7ffff78bb136, L0x7ffff78bb137,
           L0x7ffff78bb138, L0x7ffff78bb139, L0x7ffff78bb13a, L0x7ffff78bb13b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x60f51444dbdb51b6; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x96764dad3bdbe000; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb13c; Value = 0x0905e3c65ef4fdba; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb13c,L0x7ffff78bb13d,L0x7ffff78bb13e,L0x7ffff78bb13f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb13c; Value = 0x0905e3c65ef4fdba; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb13c,L0x7ffff78bb13d,L0x7ffff78bb13e,L0x7ffff78bb13f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000005ef4fdba; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x96764dad3bdbe000; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x2a243638121c0e00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000bb6651b6; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc890; Value = 0x85b2ebdc596e3700; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc890, L0x7fffffffc891, L0x7fffffffc892, L0x7fffffffc893,
           L0x7fffffffc894, L0x7fffffffc895, L0x7fffffffc896, L0x7fffffffc897,
           L0x7fffffffc898, L0x7fffffffc899, L0x7fffffffc89a, L0x7fffffffc89b,
           L0x7fffffffc89c, L0x7fffffffc89d, L0x7fffffffc89e, L0x7fffffffc89f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8a0; Value = 0x88d5326fe7ba5d00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8a0, L0x7fffffffc8a1, L0x7fffffffc8a2, L0x7fffffffc8a3,
           L0x7fffffffc8a4, L0x7fffffffc8a5, L0x7fffffffc8a6, L0x7fffffffc8a7,
           L0x7fffffffc8a8, L0x7fffffffc8a9, L0x7fffffffc8aa, L0x7fffffffc8ab,
           L0x7fffffffc8ac, L0x7fffffffc8ad, L0x7fffffffc8ae, L0x7fffffffc8af];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb140; Value = 0x2609c77d0905e3c6; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb140, L0x7ffff78bb141, L0x7ffff78bb142, L0x7ffff78bb143,
           L0x7ffff78bb144, L0x7ffff78bb145, L0x7ffff78bb146, L0x7ffff78bb147,
           L0x7ffff78bb148, L0x7ffff78bb149, L0x7ffff78bb14a, L0x7ffff78bb14b,
           L0x7ffff78bb14c, L0x7ffff78bb14d, L0x7ffff78bb14e, L0x7ffff78bb14f];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xb1a64a5cb0c92253; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x88d5326fe7ba5d00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb150; Value = 0x8030c758a947a471; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb150, L0x7ffff78bb151, L0x7ffff78bb152, L0x7ffff78bb153,
           L0x7ffff78bb154, L0x7ffff78bb155, L0x7ffff78bb156, L0x7ffff78bb157,
           L0x7ffff78bb158, L0x7ffff78bb159, L0x7ffff78bb15a, L0x7ffff78bb15b,
           L0x7ffff78bb15c, L0x7ffff78bb15d, L0x7ffff78bb15e, L0x7ffff78bb15f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xdba18db078a35914; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x88d5326fe7ba5d00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb160; Value = 0x27d21288b63781d9; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb160, L0x7ffff78bb161, L0x7ffff78bb162, L0x7ffff78bb163,
           L0x7ffff78bb164, L0x7ffff78bb165, L0x7ffff78bb166, L0x7ffff78bb167,
           L0x7ffff78bb168, L0x7ffff78bb169, L0x7ffff78bb16a, L0x7ffff78bb16b,
           L0x7ffff78bb16c, L0x7ffff78bb16d, L0x7ffff78bb16e, L0x7ffff78bb16f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x53d3cf917015b89f; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x88d5326fe7ba5d00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb170; Value = 0xe776c89d531d1935; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb170, L0x7ffff78bb171, L0x7ffff78bb172, L0x7ffff78bb173,
           L0x7ffff78bb174, L0x7ffff78bb175, L0x7ffff78bb176, L0x7ffff78bb177,
           L0x7ffff78bb178, L0x7ffff78bb179, L0x7ffff78bb17a, L0x7ffff78bb17b,
           L0x7ffff78bb17c, L0x7ffff78bb17d, L0x7ffff78bb17e, L0x7ffff78bb17f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xa95dc71ba94e33e7; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x88d5326fe7ba5d00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb180; Value = 0x544ddb864d9b79d5; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb180,L0x7ffff78bb181,L0x7ffff78bb182,L0x7ffff78bb183,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb180; Value = 0x544ddb864d9b79d5; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb180,L0x7ffff78bb181,L0x7ffff78bb182,L0x7ffff78bb183,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000004d9b79d5; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x88d5326fe7ba5d00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x85b2ebdc596e3700; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000a289c0a0; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8b0; Value = 0x313a272c1d160b00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8b0, L0x7fffffffc8b1, L0x7fffffffc8b2, L0x7fffffffc8b3,
           L0x7fffffffc8b4, L0x7fffffffc8b5, L0x7fffffffc8b6, L0x7fffffffc8b7,
           L0x7fffffffc8b8, L0x7fffffffc8b9, L0x7fffffffc8ba, L0x7fffffffc8bb,
           L0x7fffffffc8bc, L0x7fffffffc8bd, L0x7fffffffc8be, L0x7fffffffc8bf];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8c0; Value = 0x3d8d46f6cb7bb000; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8c0, L0x7fffffffc8c1, L0x7fffffffc8c2, L0x7fffffffc8c3,
           L0x7fffffffc8c4, L0x7fffffffc8c5, L0x7fffffffc8c6, L0x7fffffffc8c7,
           L0x7fffffffc8c8, L0x7fffffffc8c9, L0x7fffffffc8ca, L0x7fffffffc8cb,
           L0x7fffffffc8cc, L0x7fffffffc8cd, L0x7fffffffc8ce, L0x7fffffffc8cf];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb184; Value = 0x4c0022cd544ddb86; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb184, L0x7ffff78bb185, L0x7ffff78bb186, L0x7ffff78bb187,
           L0x7ffff78bb188, L0x7ffff78bb189, L0x7ffff78bb18a, L0x7ffff78bb18b,
           L0x7ffff78bb18c, L0x7ffff78bb18d, L0x7ffff78bb18e, L0x7ffff78bb18f,
           L0x7ffff78bb190, L0x7ffff78bb191, L0x7ffff78bb192, L0x7ffff78bb193];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xb9327e9c24227050; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x3d8d46f6cb7bb000; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb194; Value = 0x445a885bc140710f; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb194, L0x7ffff78bb195, L0x7ffff78bb196, L0x7ffff78bb197,
           L0x7ffff78bb198, L0x7ffff78bb199, L0x7ffff78bb19a, L0x7ffff78bb19b,
           L0x7ffff78bb19c, L0x7ffff78bb19d, L0x7ffff78bb19e, L0x7ffff78bb19f,
           L0x7ffff78bb1a0, L0x7ffff78bb1a1, L0x7ffff78bb1a2, L0x7ffff78bb1a3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x0546b9218849e1ab; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x3d8d46f6cb7bb000; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb1a4; Value = 0x0981e4394ef8845a; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb1a4, L0x7ffff78bb1a5, L0x7ffff78bb1a6, L0x7ffff78bb1a7,
           L0x7ffff78bb1a8, L0x7ffff78bb1a9, L0x7ffff78bb1aa, L0x7ffff78bb1ab,
           L0x7ffff78bb1ac, L0x7ffff78bb1ad, L0x7ffff78bb1ae, L0x7ffff78bb1af,
           L0x7ffff78bb1b0, L0x7ffff78bb1b1, L0x7ffff78bb1b2, L0x7ffff78bb1b3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x6c51fcecfb7751e7; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x3d8d46f6cb7bb000; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb1b4; Value = 0xda0d58d9fed14169; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb1b4, L0x7ffff78bb1b5, L0x7ffff78bb1b6, L0x7ffff78bb1b7,
           L0x7ffff78bb1b8, L0x7ffff78bb1b9, L0x7ffff78bb1ba, L0x7ffff78bb1bb,
           L0x7ffff78bb1bc, L0x7ffff78bb1bd, L0x7ffff78bb1be, L0x7ffff78bb1bf,
           L0x7ffff78bb1c0, L0x7ffff78bb1c1, L0x7ffff78bb1c2, L0x7ffff78bb1c3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x2767d5d0c25bfaeb; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x3d8d46f6cb7bb000; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb1c4; Value = 0x52070078002f5e7f; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb1c4,L0x7ffff78bb1c5,L0x7ffff78bb1c6,L0x7ffff78bb1c7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb1c4; Value = 0x52070078002f5e7f; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb1c4,L0x7ffff78bb1c5,L0x7ffff78bb1c6,L0x7ffff78bb1c7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000002f5e7f; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x3d8d46f6cb7bb000; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x313a272c1d160b00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000085f0dca7; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8d0; Value = 0xa2f10457f5a65300; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8d0, L0x7fffffffc8d1, L0x7fffffffc8d2, L0x7fffffffc8d3,
           L0x7fffffffc8d4, L0x7fffffffc8d5, L0x7fffffffc8d6, L0x7fffffffc8d7,
           L0x7fffffffc8d8, L0x7fffffffc8d9, L0x7fffffffc8da, L0x7fffffffc8db,
           L0x7fffffffc8dc, L0x7fffffffc8dd, L0x7fffffffc8de, L0x7fffffffc8df];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8e0; Value = 0xce894007c98e4700; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8e0, L0x7fffffffc8e1, L0x7fffffffc8e2, L0x7fffffffc8e3,
           L0x7fffffffc8e4, L0x7fffffffc8e5, L0x7fffffffc8e6, L0x7fffffffc8e7,
           L0x7fffffffc8e8, L0x7fffffffc8e9, L0x7fffffffc8ea, L0x7fffffffc8eb,
           L0x7fffffffc8ec, L0x7fffffffc8ed, L0x7fffffffc8ee, L0x7fffffffc8ef];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb1c8; Value = 0x612ef2c652070078; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb1c8, L0x7ffff78bb1c9, L0x7ffff78bb1ca, L0x7ffff78bb1cb,
           L0x7ffff78bb1cc, L0x7ffff78bb1cd, L0x7ffff78bb1ce, L0x7ffff78bb1cf,
           L0x7ffff78bb1d0, L0x7ffff78bb1d1, L0x7ffff78bb1d2, L0x7ffff78bb1d3,
           L0x7ffff78bb1d4, L0x7ffff78bb1d5, L0x7ffff78bb1d6, L0x7ffff78bb1d7];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x3b3213e24eab849d; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xce894007c98e4700; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb1d8; Value = 0x08ae1d597962be67; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb1d8, L0x7ffff78bb1d9, L0x7ffff78bb1da, L0x7ffff78bb1db,
           L0x7ffff78bb1dc, L0x7ffff78bb1dd, L0x7ffff78bb1de, L0x7ffff78bb1df,
           L0x7ffff78bb1e0, L0x7ffff78bb1e1, L0x7ffff78bb1e2, L0x7ffff78bb1e3,
           L0x7ffff78bb1e4, L0x7ffff78bb1e5, L0x7ffff78bb1e6, L0x7ffff78bb1e7];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xdf4e162282bfd7c2; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xce894007c98e4700; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb1e8; Value = 0x14247245b11d1345; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb1e8, L0x7ffff78bb1e9, L0x7ffff78bb1ea, L0x7ffff78bb1eb,
           L0x7ffff78bb1ec, L0x7ffff78bb1ed, L0x7ffff78bb1ee, L0x7ffff78bb1ef,
           L0x7ffff78bb1f0, L0x7ffff78bb1f1, L0x7ffff78bb1f2, L0x7ffff78bb1f3,
           L0x7ffff78bb1f4, L0x7ffff78bb1f5, L0x7ffff78bb1f6, L0x7ffff78bb1f7];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x3fadaa746fe58aef; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xce894007c98e4700; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb1f8; Value = 0x7fd2d4c507242ae7; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb1f8, L0x7ffff78bb1f9, L0x7ffff78bb1fa, L0x7ffff78bb1fb,
           L0x7ffff78bb1fc, L0x7ffff78bb1fd, L0x7ffff78bb1fe, L0x7ffff78bb1ff,
           L0x7ffff78bb200, L0x7ffff78bb201, L0x7ffff78bb202, L0x7ffff78bb203,
           L0x7ffff78bb204, L0x7ffff78bb205, L0x7ffff78bb206, L0x7ffff78bb207];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xd818cb326ae10735; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xce894007c98e4700; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb208; Value = 0x561324836ef6c20f; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb208,L0x7ffff78bb209,L0x7ffff78bb20a,L0x7ffff78bb20b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb208; Value = 0x561324836ef6c20f; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb208,L0x7ffff78bb209,L0x7ffff78bb20a,L0x7ffff78bb20b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000006ef6c20f; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xce894007c98e4700; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa2f10457f5a65300; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000085e2f8f3; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8f0; Value = 0xcf59f86ea1379600; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8f0, L0x7fffffffc8f1, L0x7fffffffc8f2, L0x7fffffffc8f3,
           L0x7fffffffc8f4, L0x7fffffffc8f5, L0x7fffffffc8f6, L0x7fffffffc8f7,
           L0x7fffffffc8f8, L0x7fffffffc8f9, L0x7fffffffc8fa, L0x7fffffffc8fb,
           L0x7fffffffc8fc, L0x7fffffffc8fd, L0x7fffffffc8fe, L0x7fffffffc8ff];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc900; Value = 0x44e719bafe5da300; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc900, L0x7fffffffc901, L0x7fffffffc902, L0x7fffffffc903,
           L0x7fffffffc904, L0x7fffffffc905, L0x7fffffffc906, L0x7fffffffc907,
           L0x7fffffffc908, L0x7fffffffc909, L0x7fffffffc90a, L0x7fffffffc90b,
           L0x7fffffffc90c, L0x7fffffffc90d, L0x7fffffffc90e, L0x7fffffffc90f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb20c; Value = 0xa976992e56132483; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb20c, L0x7ffff78bb20d, L0x7ffff78bb20e, L0x7ffff78bb20f,
           L0x7ffff78bb210, L0x7ffff78bb211, L0x7ffff78bb212, L0x7ffff78bb213,
           L0x7ffff78bb214, L0x7ffff78bb215, L0x7ffff78bb216, L0x7ffff78bb217,
           L0x7ffff78bb218, L0x7ffff78bb219, L0x7ffff78bb21a, L0x7ffff78bb21b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xe1e3751aa80984fd; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x44e719bafe5da300; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb21c; Value = 0x8041b7601cfe0d08; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb21c, L0x7ffff78bb21d, L0x7ffff78bb21e, L0x7ffff78bb21f,
           L0x7ffff78bb220, L0x7ffff78bb221, L0x7ffff78bb222, L0x7ffff78bb223,
           L0x7ffff78bb224, L0x7ffff78bb225, L0x7ffff78bb226, L0x7ffff78bb227,
           L0x7ffff78bb228, L0x7ffff78bb229, L0x7ffff78bb22a, L0x7ffff78bb22b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x7191fb9fb1904fe9; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x44e719bafe5da300; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb22c; Value = 0xf18b163dfb9b8a9e; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb22c, L0x7ffff78bb22d, L0x7ffff78bb22e, L0x7ffff78bb22f,
           L0x7ffff78bb230, L0x7ffff78bb231, L0x7ffff78bb232, L0x7ffff78bb233,
           L0x7ffff78bb234, L0x7ffff78bb235, L0x7ffff78bb236, L0x7ffff78bb237,
           L0x7ffff78bb238, L0x7ffff78bb239, L0x7ffff78bb23a, L0x7ffff78bb23b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x2f74c277fb0838ec; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x44e719bafe5da300; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb23c; Value = 0xf272f419b687dbd6; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb23c, L0x7ffff78bb23d, L0x7ffff78bb23e, L0x7ffff78bb23f,
           L0x7ffff78bb240, L0x7ffff78bb241, L0x7ffff78bb242, L0x7ffff78bb243,
           L0x7ffff78bb244, L0x7ffff78bb245, L0x7ffff78bb246, L0x7ffff78bb247,
           L0x7ffff78bb248, L0x7ffff78bb249, L0x7ffff78bb24a, L0x7ffff78bb24b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x1af0d23fc8388110; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x44e719bafe5da300; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb24c; Value = 0x7e253fdc49084152; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb24c,L0x7ffff78bb24d,L0x7ffff78bb24e,L0x7ffff78bb24f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb24c; Value = 0x7e253fdc49084152; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb24c,L0x7ffff78bb24d,L0x7ffff78bb24e,L0x7ffff78bb24f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000049084152; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x44e719bafe5da300; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xcf59f86ea1379600; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000053d357ff; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc910; Value = 0xd8f088a078502800; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc910, L0x7fffffffc911, L0x7fffffffc912, L0x7fffffffc913,
           L0x7fffffffc914, L0x7fffffffc915, L0x7fffffffc916, L0x7fffffffc917,
           L0x7fffffffc918, L0x7fffffffc919, L0x7fffffffc91a, L0x7fffffffc91b,
           L0x7fffffffc91c, L0x7fffffffc91d, L0x7fffffffc91e, L0x7fffffffc91f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc920; Value = 0x2f9958eec177b600; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc920, L0x7fffffffc921, L0x7fffffffc922, L0x7fffffffc923,
           L0x7fffffffc924, L0x7fffffffc925, L0x7fffffffc926, L0x7fffffffc927,
           L0x7fffffffc928, L0x7fffffffc929, L0x7fffffffc92a, L0x7fffffffc92b,
           L0x7fffffffc92c, L0x7fffffffc92d, L0x7fffffffc92e, L0x7fffffffc92f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb250; Value = 0x4626bbe47e253fdc; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb250, L0x7ffff78bb251, L0x7ffff78bb252, L0x7ffff78bb253,
           L0x7ffff78bb254, L0x7ffff78bb255, L0x7ffff78bb256, L0x7ffff78bb257,
           L0x7ffff78bb258, L0x7ffff78bb259, L0x7ffff78bb25a, L0x7ffff78bb25b,
           L0x7ffff78bb25c, L0x7ffff78bb25d, L0x7ffff78bb25e, L0x7ffff78bb25f];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x99fef3c2e80bb733; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x2f9958eec177b600; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb260; Value = 0x5ead3a4e9f1a2dbb; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb260, L0x7ffff78bb261, L0x7ffff78bb262, L0x7ffff78bb263,
           L0x7ffff78bb264, L0x7ffff78bb265, L0x7ffff78bb266, L0x7ffff78bb267,
           L0x7ffff78bb268, L0x7ffff78bb269, L0x7ffff78bb26a, L0x7ffff78bb26b,
           L0x7ffff78bb26c, L0x7ffff78bb26d, L0x7ffff78bb26e, L0x7ffff78bb26f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x1ebda578a03e6b35; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x2f9958eec177b600; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb270; Value = 0xe2107900a6d179bf; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb270, L0x7ffff78bb271, L0x7ffff78bb272, L0x7ffff78bb273,
           L0x7ffff78bb274, L0x7ffff78bb275, L0x7ffff78bb276, L0x7ffff78bb277,
           L0x7ffff78bb278, L0x7ffff78bb279, L0x7ffff78bb27a, L0x7ffff78bb27b,
           L0x7ffff78bb27c, L0x7ffff78bb27d, L0x7ffff78bb27e, L0x7ffff78bb27f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x926638adadb9bca5; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x2f9958eec177b600; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb280; Value = 0x14ea02731d066d71; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb280, L0x7ffff78bb281, L0x7ffff78bb282, L0x7ffff78bb283,
           L0x7ffff78bb284, L0x7ffff78bb285, L0x7ffff78bb286, L0x7ffff78bb287,
           L0x7ffff78bb288, L0x7ffff78bb289, L0x7ffff78bb28a, L0x7ffff78bb28b,
           L0x7ffff78bb28c, L0x7ffff78bb28d, L0x7ffff78bb28e, L0x7ffff78bb28f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x068397d600988a3f; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x2f9958eec177b600; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb290; Value = 0x9960e6fde18ab0b7; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb290,L0x7ffff78bb291,L0x7ffff78bb292,L0x7ffff78bb293,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb290; Value = 0x9960e6fde18ab0b7; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb290,L0x7ffff78bb291,L0x7ffff78bb292,L0x7ffff78bb293,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000e18ab0b7; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x2f9958eec177b600; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xd8f088a078502800; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000a30f7bd1; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc930; Value = 0xe57dce56b32b9800; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc930, L0x7fffffffc931, L0x7fffffffc932, L0x7fffffffc933,
           L0x7fffffffc934, L0x7fffffffc935, L0x7fffffffc936, L0x7fffffffc937,
           L0x7fffffffc938, L0x7fffffffc939, L0x7fffffffc93a, L0x7fffffffc93b,
           L0x7fffffffc93c, L0x7fffffffc93d, L0x7fffffffc93e, L0x7fffffffc93f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc940; Value = 0xd2915417c5864300; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc940, L0x7fffffffc941, L0x7fffffffc942, L0x7fffffffc943,
           L0x7fffffffc944, L0x7fffffffc945, L0x7fffffffc946, L0x7fffffffc947,
           L0x7fffffffc948, L0x7fffffffc949, L0x7fffffffc94a, L0x7fffffffc94b,
           L0x7fffffffc94c, L0x7fffffffc94d, L0x7fffffffc94e, L0x7fffffffc94f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb294; Value = 0x13c9635c9960e6fd; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb294, L0x7ffff78bb295, L0x7ffff78bb296, L0x7ffff78bb297,
           L0x7ffff78bb298, L0x7ffff78bb299, L0x7ffff78bb29a, L0x7ffff78bb29b,
           L0x7ffff78bb29c, L0x7ffff78bb29d, L0x7ffff78bb29e, L0x7ffff78bb29f,
           L0x7ffff78bb2a0, L0x7ffff78bb2a1, L0x7ffff78bb2a2, L0x7ffff78bb2a3];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x8779d63c6cf4f557; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd2915417c5864300; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb2a4; Value = 0xecd6f7702e66badd; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb2a4, L0x7ffff78bb2a5, L0x7ffff78bb2a6, L0x7ffff78bb2a7,
           L0x7ffff78bb2a8, L0x7ffff78bb2a9, L0x7ffff78bb2aa, L0x7ffff78bb2ab,
           L0x7ffff78bb2ac, L0x7ffff78bb2ad, L0x7ffff78bb2ae, L0x7ffff78bb2af,
           L0x7ffff78bb2b0, L0x7ffff78bb2b1, L0x7ffff78bb2b2, L0x7ffff78bb2b3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xedde6f3d5283cf10; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd2915417c5864300; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb2b4; Value = 0x2a51602b65c8ba39; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb2b4, L0x7ffff78bb2b5, L0x7ffff78bb2b6, L0x7ffff78bb2b7,
           L0x7ffff78bb2b8, L0x7ffff78bb2b9, L0x7ffff78bb2ba, L0x7ffff78bb2bb,
           L0x7ffff78bb2bc, L0x7ffff78bb2bd, L0x7ffff78bb2be, L0x7ffff78bb2bf,
           L0x7ffff78bb2c0, L0x7ffff78bb2c1, L0x7ffff78bb2c2, L0x7ffff78bb2c3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x9cd064aded0ee020; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd2915417c5864300; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb2c4; Value = 0x4cc9aa3ad94cc27e; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb2c4, L0x7ffff78bb2c5, L0x7ffff78bb2c6, L0x7ffff78bb2c7,
           L0x7ffff78bb2c8, L0x7ffff78bb2c9, L0x7ffff78bb2ca, L0x7ffff78bb2cb,
           L0x7ffff78bb2cc, L0x7ffff78bb2cd, L0x7ffff78bb2ce, L0x7ffff78bb2cf,
           L0x7ffff78bb2d0, L0x7ffff78bb2d1, L0x7ffff78bb2d2, L0x7ffff78bb2d3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x10d6c7816568c038; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd2915417c5864300; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb2d4; Value = 0x137d1cb540386d5a; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb2d4,L0x7ffff78bb2d5,L0x7ffff78bb2d6,L0x7ffff78bb2d7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb2d4; Value = 0x137d1cb540386d5a; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb2d4,L0x7ffff78bb2d5,L0x7ffff78bb2d6,L0x7ffff78bb2d7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000040386d5a; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd2915417c5864300; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xe57dce56b32b9800; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000d5c37d0f; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc950; Value = 0xf6b96827d19e4f00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc950, L0x7fffffffc951, L0x7fffffffc952, L0x7fffffffc953,
           L0x7fffffffc954, L0x7fffffffc955, L0x7fffffffc956, L0x7fffffffc957,
           L0x7fffffffc958, L0x7fffffffc959, L0x7fffffffc95a, L0x7fffffffc95b,
           L0x7fffffffc95c, L0x7fffffffc95d, L0x7fffffffc95e, L0x7fffffffc95f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc960; Value = 0xf965da46bf239c00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc960, L0x7fffffffc961, L0x7fffffffc962, L0x7fffffffc963,
           L0x7fffffffc964, L0x7fffffffc965, L0x7fffffffc966, L0x7fffffffc967,
           L0x7fffffffc968, L0x7fffffffc969, L0x7fffffffc96a, L0x7fffffffc96b,
           L0x7fffffffc96c, L0x7fffffffc96d, L0x7fffffffc96e, L0x7fffffffc96f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb2d8; Value = 0x330ef57e137d1cb5; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb2d8, L0x7ffff78bb2d9, L0x7ffff78bb2da, L0x7ffff78bb2db,
           L0x7ffff78bb2dc, L0x7ffff78bb2dd, L0x7ffff78bb2de, L0x7ffff78bb2df,
           L0x7ffff78bb2e0, L0x7ffff78bb2e1, L0x7ffff78bb2e2, L0x7ffff78bb2e3,
           L0x7ffff78bb2e4, L0x7ffff78bb2e5, L0x7ffff78bb2e6, L0x7ffff78bb2e7];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x7774f492356537c9; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf965da46bf239c00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb2e8; Value = 0x2a9292bb71d7fccb; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb2e8, L0x7ffff78bb2e9, L0x7ffff78bb2ea, L0x7ffff78bb2eb,
           L0x7ffff78bb2ec, L0x7ffff78bb2ed, L0x7ffff78bb2ee, L0x7ffff78bb2ef,
           L0x7ffff78bb2f0, L0x7ffff78bb2f1, L0x7ffff78bb2f2, L0x7ffff78bb2f3,
           L0x7ffff78bb2f4, L0x7ffff78bb2f5, L0x7ffff78bb2f6, L0x7ffff78bb2f7];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xa8d976ef056fa308; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf965da46bf239c00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb2f8; Value = 0xd72d5d16e1ac9f11; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb2f8, L0x7ffff78bb2f9, L0x7ffff78bb2fa, L0x7ffff78bb2fb,
           L0x7ffff78bb2fc, L0x7ffff78bb2fd, L0x7ffff78bb2fe, L0x7ffff78bb2ff,
           L0x7ffff78bb300, L0x7ffff78bb301, L0x7ffff78bb302, L0x7ffff78bb303,
           L0x7ffff78bb304, L0x7ffff78bb305, L0x7ffff78bb306, L0x7ffff78bb307];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x9d1cf534b29b8cd1; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf965da46bf239c00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb308; Value = 0xb1d63c58fac5d7c1; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb308, L0x7ffff78bb309, L0x7ffff78bb30a, L0x7ffff78bb30b,
           L0x7ffff78bb30c, L0x7ffff78bb30d, L0x7ffff78bb30e, L0x7ffff78bb30f,
           L0x7ffff78bb310, L0x7ffff78bb311, L0x7ffff78bb312, L0x7ffff78bb313,
           L0x7ffff78bb314, L0x7ffff78bb315, L0x7ffff78bb316, L0x7ffff78bb317];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xfddbe8c32b85d23b; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf965da46bf239c00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb318; Value = 0x6f10039fe664c574; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb318,L0x7ffff78bb319,L0x7ffff78bb31a,L0x7ffff78bb31b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb318; Value = 0x6f10039fe664c574; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb318,L0x7ffff78bb319,L0x7ffff78bb31a,L0x7ffff78bb31b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000e664c574; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf965da46bf239c00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xf6b96827d19e4f00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000c2aa8edc; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc970; Value = 0xb25e719d2fc3ec00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc970, L0x7fffffffc971, L0x7fffffffc972, L0x7fffffffc973,
           L0x7fffffffc974, L0x7fffffffc975, L0x7fffffffc976, L0x7fffffffc977,
           L0x7fffffffc978, L0x7fffffffc979, L0x7fffffffc97a, L0x7fffffffc97b,
           L0x7fffffffc97c, L0x7fffffffc97d, L0x7fffffffc97e, L0x7fffffffc97f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc980; Value = 0xd5975113c6844200; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc980, L0x7fffffffc981, L0x7fffffffc982, L0x7fffffffc983,
           L0x7fffffffc984, L0x7fffffffc985, L0x7fffffffc986, L0x7fffffffc987,
           L0x7fffffffc988, L0x7fffffffc989, L0x7fffffffc98a, L0x7fffffffc98b,
           L0x7fffffffc98c, L0x7fffffffc98d, L0x7fffffffc98e, L0x7fffffffc98f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb31c; Value = 0x3c40f4126f10039f; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb31c, L0x7ffff78bb31d, L0x7ffff78bb31e, L0x7ffff78bb31f,
           L0x7ffff78bb320, L0x7ffff78bb321, L0x7ffff78bb322, L0x7ffff78bb323,
           L0x7ffff78bb324, L0x7ffff78bb325, L0x7ffff78bb326, L0x7ffff78bb327,
           L0x7ffff78bb328, L0x7ffff78bb329, L0x7ffff78bb32a, L0x7ffff78bb32b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x1983e99c78bac292; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd5975113c6844200; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb32c; Value = 0x80d9fb29eae5943b; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb32c, L0x7ffff78bb32d, L0x7ffff78bb32e, L0x7ffff78bb32f,
           L0x7ffff78bb330, L0x7ffff78bb331, L0x7ffff78bb332, L0x7ffff78bb333,
           L0x7ffff78bb334, L0x7ffff78bb335, L0x7ffff78bb336, L0x7ffff78bb337,
           L0x7ffff78bb338, L0x7ffff78bb339, L0x7ffff78bb33a, L0x7ffff78bb33b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x5b57f843b3cfbf5d; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd5975113c6844200; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb33c; Value = 0x8031c26f52a66625; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb33c, L0x7ffff78bb33d, L0x7ffff78bb33e, L0x7ffff78bb33f,
           L0x7ffff78bb340, L0x7ffff78bb341, L0x7ffff78bb342, L0x7ffff78bb343,
           L0x7ffff78bb344, L0x7ffff78bb345, L0x7ffff78bb346, L0x7ffff78bb347,
           L0x7ffff78bb348, L0x7ffff78bb349, L0x7ffff78bb34a, L0x7ffff78bb34b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x3d190911145d2402; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd5975113c6844200; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb34c; Value = 0xf402277a1f4a7013; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb34c, L0x7ffff78bb34d, L0x7ffff78bb34e, L0x7ffff78bb34f,
           L0x7ffff78bb350, L0x7ffff78bb351, L0x7ffff78bb352, L0x7ffff78bb353,
           L0x7ffff78bb354, L0x7ffff78bb355, L0x7ffff78bb356, L0x7ffff78bb357,
           L0x7ffff78bb358, L0x7ffff78bb359, L0x7ffff78bb35a, L0x7ffff78bb35b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x81343e578e2772be; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd5975113c6844200; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb35c; Value = 0xee42c65ba5f0dab8; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb35c,L0x7ffff78bb35d,L0x7ffff78bb35e,L0x7ffff78bb35f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb35c; Value = 0xee42c65ba5f0dab8; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb35c,L0x7ffff78bb35d,L0x7ffff78bb35e,L0x7ffff78bb35f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000a5f0dab8; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xd5975113c6844200; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xb25e719d2fc3ec00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000092e82c02; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc990; Value = 0xde2635cd13ebf800; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc990, L0x7fffffffc991, L0x7fffffffc992, L0x7fffffffc993,
           L0x7fffffffc994, L0x7fffffffc995, L0x7fffffffc996, L0x7fffffffc997,
           L0x7fffffffc998, L0x7fffffffc999, L0x7fffffffc99a, L0x7fffffffc99b,
           L0x7fffffffc99c, L0x7fffffffc99d, L0x7fffffffc99e, L0x7fffffffc99f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc9a0; Value = 0x4f567d642b321900; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc9a0, L0x7fffffffc9a1, L0x7fffffffc9a2, L0x7fffffffc9a3,
           L0x7fffffffc9a4, L0x7fffffffc9a5, L0x7fffffffc9a6, L0x7fffffffc9a7,
           L0x7fffffffc9a8, L0x7fffffffc9a9, L0x7fffffffc9aa, L0x7fffffffc9ab,
           L0x7fffffffc9ac, L0x7fffffffc9ad, L0x7fffffffc9ae, L0x7fffffffc9af];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb360; Value = 0x09cb3423ee42c65b; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb360, L0x7ffff78bb361, L0x7ffff78bb362, L0x7ffff78bb363,
           L0x7ffff78bb364, L0x7ffff78bb365, L0x7ffff78bb366, L0x7ffff78bb367,
           L0x7ffff78bb368, L0x7ffff78bb369, L0x7ffff78bb36a, L0x7ffff78bb36b,
           L0x7ffff78bb36c, L0x7ffff78bb36d, L0x7ffff78bb36e, L0x7ffff78bb36f];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x6390871d7cf8ed65; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4f567d642b321900; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb370; Value = 0x1305d94b531b8845; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb370, L0x7ffff78bb371, L0x7ffff78bb372, L0x7ffff78bb373,
           L0x7ffff78bb374, L0x7ffff78bb375, L0x7ffff78bb376, L0x7ffff78bb377,
           L0x7ffff78bb378, L0x7ffff78bb379, L0x7ffff78bb37a, L0x7ffff78bb37b,
           L0x7ffff78bb37c, L0x7ffff78bb37d, L0x7ffff78bb37e, L0x7ffff78bb37f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x7ded050ae00f4695; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4f567d642b321900; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb380; Value = 0x5d6992c6a05bd9bb; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb380, L0x7ffff78bb381, L0x7ffff78bb382, L0x7ffff78bb383,
           L0x7ffff78bb384, L0x7ffff78bb385, L0x7ffff78bb386, L0x7ffff78bb387,
           L0x7ffff78bb388, L0x7ffff78bb389, L0x7ffff78bb38a, L0x7ffff78bb38b,
           L0x7ffff78bb38c, L0x7ffff78bb38d, L0x7ffff78bb38e, L0x7ffff78bb38f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x1b33ff1586a1edf7; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4f567d642b321900; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb390; Value = 0x284c9300e6d0155a; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb390, L0x7ffff78bb391, L0x7ffff78bb392, L0x7ffff78bb393,
           L0x7ffff78bb394, L0x7ffff78bb395, L0x7ffff78bb396, L0x7ffff78bb397,
           L0x7ffff78bb398, L0x7ffff78bb399, L0x7ffff78bb39a, L0x7ffff78bb39b,
           L0x7ffff78bb39c, L0x7ffff78bb39d, L0x7ffff78bb39e, L0x7ffff78bb39f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xeff708605fd6a7d3; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4f567d642b321900; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb3a0; Value = 0xf536d28baa7bd68b; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb3a0,L0x7ffff78bb3a1,L0x7ffff78bb3a2,L0x7ffff78bb3a3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb3a0; Value = 0xf536d28baa7bd68b; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb3a0,L0x7ffff78bb3a1,L0x7ffff78bb3a2,L0x7ffff78bb3a3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000aa7bd68b; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4f567d642b321900; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xde2635cd13ebf800; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000411bb9c3; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc9b0; Value = 0xa19ad7ec4d763b00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc9b0, L0x7fffffffc9b1, L0x7fffffffc9b2, L0x7fffffffc9b3,
           L0x7fffffffc9b4, L0x7fffffffc9b5, L0x7fffffffc9b6, L0x7fffffffc9b7,
           L0x7fffffffc9b8, L0x7fffffffc9b9, L0x7fffffffc9ba, L0x7fffffffc9bb,
           L0x7fffffffc9bc, L0x7fffffffc9bd, L0x7fffffffc9be, L0x7fffffffc9bf];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc9c0; Value = 0xfe63df42bc219d00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc9c0, L0x7fffffffc9c1, L0x7fffffffc9c2, L0x7fffffffc9c3,
           L0x7fffffffc9c4, L0x7fffffffc9c5, L0x7fffffffc9c6, L0x7fffffffc9c7,
           L0x7fffffffc9c8, L0x7fffffffc9c9, L0x7fffffffc9ca, L0x7fffffffc9cb,
           L0x7fffffffc9cc, L0x7fffffffc9cd, L0x7fffffffc9ce, L0x7fffffffc9cf];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb3a4; Value = 0xb7ad57c6f536d28b; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb3a4, L0x7ffff78bb3a5, L0x7ffff78bb3a6, L0x7ffff78bb3a7,
           L0x7ffff78bb3a8, L0x7ffff78bb3a9, L0x7ffff78bb3aa, L0x7ffff78bb3ab,
           L0x7ffff78bb3ac, L0x7ffff78bb3ad, L0x7ffff78bb3ae, L0x7ffff78bb3af,
           L0x7ffff78bb3b0, L0x7ffff78bb3b1, L0x7ffff78bb3b2, L0x7ffff78bb3b3];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x1aae613c4577678a; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xfe63df42bc219d00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb3b4; Value = 0x71e2f21e2250f77d; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb3b4, L0x7ffff78bb3b5, L0x7ffff78bb3b6, L0x7ffff78bb3b7,
           L0x7ffff78bb3b8, L0x7ffff78bb3b9, L0x7ffff78bb3ba, L0x7ffff78bb3bb,
           L0x7ffff78bb3bc, L0x7ffff78bb3bd, L0x7ffff78bb3be, L0x7ffff78bb3bf,
           L0x7ffff78bb3c0, L0x7ffff78bb3c1, L0x7ffff78bb3c2, L0x7ffff78bb3c3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x77d8c9fc8e840fc4; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xfe63df42bc219d00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb3c4; Value = 0xfbee1933011d2de7; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb3c4, L0x7ffff78bb3c5, L0x7ffff78bb3c6, L0x7ffff78bb3c7,
           L0x7ffff78bb3c8, L0x7ffff78bb3c9, L0x7ffff78bb3ca, L0x7ffff78bb3cb,
           L0x7ffff78bb3cc, L0x7ffff78bb3cd, L0x7ffff78bb3ce, L0x7ffff78bb3cf,
           L0x7ffff78bb3d0, L0x7ffff78bb3d1, L0x7ffff78bb3d2, L0x7ffff78bb3d3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xd21cc59f7c4e2186; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xfe63df42bc219d00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb3d4; Value = 0x150e99293df2e3e3; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb3d4, L0x7ffff78bb3d5, L0x7ffff78bb3d6, L0x7ffff78bb3d7,
           L0x7ffff78bb3d8, L0x7ffff78bb3d9, L0x7ffff78bb3da, L0x7ffff78bb3db,
           L0x7ffff78bb3dc, L0x7ffff78bb3dd, L0x7ffff78bb3de, L0x7ffff78bb3df,
           L0x7ffff78bb3e0, L0x7ffff78bb3e1, L0x7ffff78bb3e2, L0x7ffff78bb3e3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x5cdfca60e7638bc4; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xfe63df42bc219d00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb3e4; Value = 0xf775ffcc11f1a829; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb3e4,L0x7ffff78bb3e5,L0x7ffff78bb3e6,L0x7ffff78bb3e7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb3e4; Value = 0xf775ffcc11f1a829; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb3e4,L0x7ffff78bb3e5,L0x7ffff78bb3e6,L0x7ffff78bb3e7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000011f1a829; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xfe63df42bc219d00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa19ad7ec4d763b00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000d1c62a99; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc9d0; Value = 0x43e11cbefd5fa200; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc9d0, L0x7fffffffc9d1, L0x7fffffffc9d2, L0x7fffffffc9d3,
           L0x7fffffffc9d4, L0x7fffffffc9d5, L0x7fffffffc9d6, L0x7fffffffc9d7,
           L0x7fffffffc9d8, L0x7fffffffc9d9, L0x7fffffffc9da, L0x7fffffffc9db,
           L0x7fffffffc9dc, L0x7fffffffc9dd, L0x7fffffffc9de, L0x7fffffffc9df];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc9e0; Value = 0x5c92db154987ce00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc9e0, L0x7fffffffc9e1, L0x7fffffffc9e2, L0x7fffffffc9e3,
           L0x7fffffffc9e4, L0x7fffffffc9e5, L0x7fffffffc9e6, L0x7fffffffc9e7,
           L0x7fffffffc9e8, L0x7fffffffc9e9, L0x7fffffffc9ea, L0x7fffffffc9eb,
           L0x7fffffffc9ec, L0x7fffffffc9ed, L0x7fffffffc9ee, L0x7fffffffc9ef];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb3e8; Value = 0xb705e383f775ffcc; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb3e8, L0x7ffff78bb3e9, L0x7ffff78bb3ea, L0x7ffff78bb3eb,
           L0x7ffff78bb3ec, L0x7ffff78bb3ed, L0x7ffff78bb3ee, L0x7ffff78bb3ef,
           L0x7ffff78bb3f0, L0x7ffff78bb3f1, L0x7ffff78bb3f2, L0x7ffff78bb3f3,
           L0x7ffff78bb3f4, L0x7ffff78bb3f5, L0x7ffff78bb3f6, L0x7ffff78bb3f7];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x831f1f60e8514a80; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x5c92db154987ce00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb3f8; Value = 0x675b32151422a742; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb3f8, L0x7ffff78bb3f9, L0x7ffff78bb3fa, L0x7ffff78bb3fb,
           L0x7ffff78bb3fc, L0x7ffff78bb3fd, L0x7ffff78bb3fe, L0x7ffff78bb3ff,
           L0x7ffff78bb400, L0x7ffff78bb401, L0x7ffff78bb402, L0x7ffff78bb403,
           L0x7ffff78bb404, L0x7ffff78bb405, L0x7ffff78bb406, L0x7ffff78bb407];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xb249c538d95bd42e; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x5c92db154987ce00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb408; Value = 0x635c6f134f64990d; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb408, L0x7ffff78bb409, L0x7ffff78bb40a, L0x7ffff78bb40b,
           L0x7ffff78bb40c, L0x7ffff78bb40d, L0x7ffff78bb40e, L0x7ffff78bb40f,
           L0x7ffff78bb410, L0x7ffff78bb411, L0x7ffff78bb412, L0x7ffff78bb413,
           L0x7ffff78bb414, L0x7ffff78bb415, L0x7ffff78bb416, L0x7ffff78bb417];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x26a2a06e47c714c0; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x5c92db154987ce00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb418; Value = 0xd6ce14703b75104b; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb418, L0x7ffff78bb419, L0x7ffff78bb41a, L0x7ffff78bb41b,
           L0x7ffff78bb41c, L0x7ffff78bb41d, L0x7ffff78bb41e, L0x7ffff78bb41f,
           L0x7ffff78bb420, L0x7ffff78bb421, L0x7ffff78bb422, L0x7ffff78bb423,
           L0x7ffff78bb424, L0x7ffff78bb425, L0x7ffff78bb426, L0x7ffff78bb427];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x16862bb94f6f216e; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x5c92db154987ce00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb428; Value = 0xc5fe16ff60f47e57; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb428,L0x7ffff78bb429,L0x7ffff78bb42a,L0x7ffff78bb42b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb428; Value = 0xc5fe16ff60f47e57; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb428,L0x7ffff78bb429,L0x7ffff78bb42a,L0x7ffff78bb42b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000060f47e57; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x5c92db154987ce00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x43e11cbefd5fa200; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000077874c40; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc9f0; Value = 0x7fbce2215e9dc300; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc9f0, L0x7fffffffc9f1, L0x7fffffffc9f2, L0x7fffffffc9f3,
           L0x7fffffffc9f4, L0x7fffffffc9f5, L0x7fffffffc9f6, L0x7fffffffc9f7,
           L0x7fffffffc9f8, L0x7fffffffc9f9, L0x7fffffffc9fa, L0x7fffffffc9fb,
           L0x7fffffffc9fc, L0x7fffffffc9fd, L0x7fffffffc9fe, L0x7fffffffc9ff];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffca00; Value = 0xb135a22697138400; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffca00, L0x7fffffffca01, L0x7fffffffca02, L0x7fffffffca03,
           L0x7fffffffca04, L0x7fffffffca05, L0x7fffffffca06, L0x7fffffffca07,
           L0x7fffffffca08, L0x7fffffffca09, L0x7fffffffca0a, L0x7fffffffca0b,
           L0x7fffffffca0c, L0x7fffffffca0d, L0x7fffffffca0e, L0x7fffffffca0f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb42c; Value = 0x3e6b1e1cc5fe16ff; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb42c, L0x7ffff78bb42d, L0x7ffff78bb42e, L0x7ffff78bb42f,
           L0x7ffff78bb430, L0x7ffff78bb431, L0x7ffff78bb432, L0x7ffff78bb433,
           L0x7ffff78bb434, L0x7ffff78bb435, L0x7ffff78bb436, L0x7ffff78bb437,
           L0x7ffff78bb438, L0x7ffff78bb439, L0x7ffff78bb43a, L0x7ffff78bb43b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xa3035ab7dd111866; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb135a22697138400; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb43c; Value = 0x385ad33fd3d68462; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb43c, L0x7ffff78bb43d, L0x7ffff78bb43e, L0x7ffff78bb43f,
           L0x7ffff78bb440, L0x7ffff78bb441, L0x7ffff78bb442, L0x7ffff78bb443,
           L0x7ffff78bb444, L0x7ffff78bb445, L0x7ffff78bb446, L0x7ffff78bb447,
           L0x7ffff78bb448, L0x7ffff78bb449, L0x7ffff78bb44a, L0x7ffff78bb44b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x6308d3eaa9833a64; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb135a22697138400; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb44c; Value = 0xea3bddaee8f54c84; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb44c, L0x7ffff78bb44d, L0x7ffff78bb44e, L0x7ffff78bb44f,
           L0x7ffff78bb450, L0x7ffff78bb451, L0x7ffff78bb452, L0x7ffff78bb453,
           L0x7ffff78bb454, L0x7ffff78bb455, L0x7ffff78bb456, L0x7ffff78bb457,
           L0x7ffff78bb458, L0x7ffff78bb459, L0x7ffff78bb45a, L0x7ffff78bb45b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x49a0165d76eb35bb; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb135a22697138400; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb45c; Value = 0xbdd488852aca68a4; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb45c, L0x7ffff78bb45d, L0x7ffff78bb45e, L0x7ffff78bb45f,
           L0x7ffff78bb460, L0x7ffff78bb461, L0x7ffff78bb462, L0x7ffff78bb463,
           L0x7ffff78bb464, L0x7ffff78bb465, L0x7ffff78bb466, L0x7ffff78bb467,
           L0x7ffff78bb468, L0x7ffff78bb469, L0x7ffff78bb46a, L0x7ffff78bb46b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x063f5be59c2fefe1; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb135a22697138400; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb46c; Value = 0xe09738ffd5d036e7; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb46c,L0x7ffff78bb46d,L0x7ffff78bb46e,L0x7ffff78bb46f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb46c; Value = 0xe09738ffd5d036e7; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb46c,L0x7ffff78bb46d,L0x7ffff78bb46e,L0x7ffff78bb46f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000d5d036e7; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb135a22697138400; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7fbce2215e9dc300; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000e54f96d8; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* #! <- SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* #ret                                            #! PC = 0x55555555ac4e *)
#ret                                            #! 0x55555555ac4e = 0x55555555ac4e;
(* mov    %rbx,%rdx                                #! PC = 0x55555555b2e5 *)
mov %rdx %rbx;
(* mov    %r13d,%esi                               #! PC = 0x55555555b2e8 *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r15,%rdi                                #! PC = 0x55555555b2eb *)
mov %rdi %r15;
(* #call   0x5555555571c0 <storeu_xmm>             #! PC = 0x55555555b2ee *)
#call   0x5555555571c0 <storeu_xmm>             #! 0x55555555b2ee = 0x55555555b2ee;
(* #! -> SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* mov    %esi,%eax                                #! PC = 0x5555555571c0 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557241 <storeu_xmm+129>         #! PC = 0x5555555571cd *)
#je     0x555555557241 <storeu_xmm+129>         #! 0x5555555571cd = 0x5555555571cd;
(* movdqa (%rdx),%xmm1                             #! EA = L0x7fffffffc790; Value = 0xca2a2050551220a6; PC = 0x5555555571cf *)
mov %xmm1 [L0x7fffffffc790, L0x7fffffffc791, L0x7fffffffc792, L0x7fffffffc793,
           L0x7fffffffc794, L0x7fffffffc795, L0x7fffffffc796, L0x7fffffffc797,
           L0x7fffffffc798, L0x7fffffffc799, L0x7fffffffc79a, L0x7fffffffc79b,
           L0x7fffffffc79c, L0x7fffffffc79d, L0x7fffffffc79e, L0x7fffffffc79f];
(* movups %xmm1,(%rdi)                             #! EA = L0x7fffffffcb80; PC = 0x5555555571d3 *)
mov [L0x7fffffffcb80,L0x7fffffffcb81,L0x7fffffffcb82,L0x7fffffffcb83,
     L0x7fffffffcb84,L0x7fffffffcb85,L0x7fffffffcb86,L0x7fffffffcb87,
     L0x7fffffffcb88,L0x7fffffffcb89,L0x7fffffffcb8a,L0x7fffffffcb8b,
     L0x7fffffffcb8c,L0x7fffffffcb8d,L0x7fffffffcb8e,L0x7fffffffcb8f] %xmm1;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571d8 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571d8 = 0x5555555571d8;
(* movdqa 0x10(%rdx),%xmm2                         #! EA = L0x7fffffffc7a0; Value = 0xb675634019d157cc; PC = 0x5555555571da *)
mov %xmm2 [L0x7fffffffc7a0, L0x7fffffffc7a1, L0x7fffffffc7a2, L0x7fffffffc7a3,
           L0x7fffffffc7a4, L0x7fffffffc7a5, L0x7fffffffc7a6, L0x7fffffffc7a7,
           L0x7fffffffc7a8, L0x7fffffffc7a9, L0x7fffffffc7aa, L0x7fffffffc7ab,
           L0x7fffffffc7ac, L0x7fffffffc7ad, L0x7fffffffc7ae, L0x7fffffffc7af];
(* movups %xmm2,0x10(%rdi)                         #! EA = L0x7fffffffcb90; PC = 0x5555555571df *)
mov [L0x7fffffffcb90,L0x7fffffffcb91,L0x7fffffffcb92,L0x7fffffffcb93,
     L0x7fffffffcb94,L0x7fffffffcb95,L0x7fffffffcb96,L0x7fffffffcb97,
     L0x7fffffffcb98,L0x7fffffffcb99,L0x7fffffffcb9a,L0x7fffffffcb9b,
     L0x7fffffffcb9c,L0x7fffffffcb9d,L0x7fffffffcb9e,L0x7fffffffcb9f] %xmm2;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571e6 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571e6 = 0x5555555571e6;
(* movdqa 0x20(%rdx),%xmm3                         #! EA = L0x7fffffffc7b0; Value = 0xef2b58fc4df470d6; PC = 0x5555555571e8 *)
mov %xmm3 [L0x7fffffffc7b0, L0x7fffffffc7b1, L0x7fffffffc7b2, L0x7fffffffc7b3,
           L0x7fffffffc7b4, L0x7fffffffc7b5, L0x7fffffffc7b6, L0x7fffffffc7b7,
           L0x7fffffffc7b8, L0x7fffffffc7b9, L0x7fffffffc7ba, L0x7fffffffc7bb,
           L0x7fffffffc7bc, L0x7fffffffc7bd, L0x7fffffffc7be, L0x7fffffffc7bf];
(* movups %xmm3,0x20(%rdi)                         #! EA = L0x7fffffffcba0; PC = 0x5555555571ed *)
mov [L0x7fffffffcba0,L0x7fffffffcba1,L0x7fffffffcba2,L0x7fffffffcba3,
     L0x7fffffffcba4,L0x7fffffffcba5,L0x7fffffffcba6,L0x7fffffffcba7,
     L0x7fffffffcba8,L0x7fffffffcba9,L0x7fffffffcbaa,L0x7fffffffcbab,
     L0x7fffffffcbac,L0x7fffffffcbad,L0x7fffffffcbae,L0x7fffffffcbaf] %xmm3;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571f4 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571f4 = 0x5555555571f4;
(* movdqa 0x30(%rdx),%xmm4                         #! EA = L0x7fffffffc7c0; Value = 0x7df0554b509a989f; PC = 0x5555555571f6 *)
mov %xmm4 [L0x7fffffffc7c0, L0x7fffffffc7c1, L0x7fffffffc7c2, L0x7fffffffc7c3,
           L0x7fffffffc7c4, L0x7fffffffc7c5, L0x7fffffffc7c6, L0x7fffffffc7c7,
           L0x7fffffffc7c8, L0x7fffffffc7c9, L0x7fffffffc7ca, L0x7fffffffc7cb,
           L0x7fffffffc7cc, L0x7fffffffc7cd, L0x7fffffffc7ce, L0x7fffffffc7cf];
(* movups %xmm4,0x30(%rdi)                         #! EA = L0x7fffffffcbb0; PC = 0x5555555571fb *)
mov [L0x7fffffffcbb0,L0x7fffffffcbb1,L0x7fffffffcbb2,L0x7fffffffcbb3,
     L0x7fffffffcbb4,L0x7fffffffcbb5,L0x7fffffffcbb6,L0x7fffffffcbb7,
     L0x7fffffffcbb8,L0x7fffffffcbb9,L0x7fffffffcbba,L0x7fffffffcbbb,
     L0x7fffffffcbbc,L0x7fffffffcbbd,L0x7fffffffcbbe,L0x7fffffffcbbf] %xmm4;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x555555557202 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x555555557202 = 0x555555557202;
(* #jne    0x555555557250 <storeu_xmm+144>         #! PC = 0x555555557243 *)
#jne    0x555555557250 <storeu_xmm+144>         #! 0x555555557243 = 0x555555557243;
(* movdqa (%rdx),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000e9a1bdde; PC = 0x555555557250 *)
mov %xmm0 [L0x7fffffffc7d0, L0x7fffffffc7d1, L0x7fffffffc7d2, L0x7fffffffc7d3,
           L0x7fffffffc7d4, L0x7fffffffc7d5, L0x7fffffffc7d6, L0x7fffffffc7d7,
           L0x7fffffffc7d8, L0x7fffffffc7d9, L0x7fffffffc7da, L0x7fffffffc7db,
           L0x7fffffffc7dc, L0x7fffffffc7dd, L0x7fffffffc7de, L0x7fffffffc7df];
(* #jmp    0x5555555570f0 <_store_xmm>             #! PC = 0x555555557254 *)
#jmp    0x5555555570f0 <_store_xmm>             #! 0x555555557254 = 0x555555557254;
(* mov    %rdx,0x38(%rsp)                          #! EA = L0x7fffffffc738; PC = 0x555555557105 *)
mov [L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
     L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f] %rdx;
(* xor    %edx,%edx                                #! PC = 0x55555555710a *)
mov %rdx [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm0,(%rsp)                             #! EA = L0x7fffffffc700; PC = 0x55555555710c *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm0;
(* #je     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557112 *)
#je     0x555555557160 <_store_xmm+112>         #! 0x555555557112 = 0x555555557112;
(* mov    %rdi,%rax                                #! PC = 0x555555557114 *)
mov %rax %rdi;
(* #jb     0x555555557178 <_store_xmm+136>         #! PC = 0x55555555711d *)
#jb     0x555555557178 <_store_xmm+136>         #! 0x55555555711d = 0x55555555711d;
(* #jne    0x55555555719c <_store_xmm+172>         #! PC = 0x55555555717c *)
#jne    0x55555555719c <_store_xmm+172>         #! 0x55555555717c = 0x55555555717c;
(* mov    (%rsp),%ecx                              #! EA = L0x7fffffffc700; Value = 0x00000000e9a1bdde; PC = 0x55555555719c *)
mov %rcx [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %esi,%esi                                #! PC = 0x55555555719f *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffcbc0; PC = 0x5555555571a1 *)
mov [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,_,_,_,_]
    %rcx;
(* mov    -0x4(%rdx,%rsi,1),%edx                   #! EA = L0x7fffffffc700; Value = 0x00000000e9a1bdde; PC = 0x5555555571a3 *)
mov %rdx [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %edx,-0x4(%rdi,%rsi,1)                   #! EA = L0x7fffffffcbc0; PC = 0x5555555571a7 *)
mov [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,_,_,_,_]
    %rdx;
(* #jmp    0x555555557160 <_store_xmm+112>         #! PC = 0x5555555571ab *)
#jmp    0x555555557160 <_store_xmm+112>         #! 0x5555555571ab = 0x5555555571ab;
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc738; Value = 0x843472637f9f7c00; PC = 0x555555557160 *)
mov %rax [L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
          L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f];
(* #jne    0x5555555571ad <_store_xmm+189>         #! PC = 0x55555555716e *)
#jne    0x5555555571ad <_store_xmm+189>         #! 0x55555555716e = 0x55555555716e;
(* #! <- SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* #ret                                            #! PC = 0x555555557171 *)
#ret                                            #! 0x555555557171 = 0x555555557171;
(* #jne    0x55555555b280 <gf256mat_prod_sse+192>  #! PC = 0x55555555b2f8 *)
#jne    0x55555555b280 <gf256mat_prod_sse+192>  #! 0x55555555b2f8 = 0x55555555b2f8;
(* mov    -0x2c8(%rbp),%eax                        #! EA = L0x7fffffffc788; Value = 0x0000000000000010; PC = 0x55555555b2fa *)
mov %rax [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,%rdx                                #! PC = 0x55555555b307 *)
mov %rdx %rax;
(* #jne    0x55555555b230 <gf256mat_prod_sse+112>  #! PC = 0x55555555b31b *)
#jne    0x55555555b230 <gf256mat_prod_sse+112>  #! 0x55555555b31b = 0x55555555b31b;
(* mov    -0x2e4(%rbp),%eax                        #! EA = L0x7fffffffc76c; Value = 0xffffcb800000001c; PC = 0x55555555b230 *)
mov %rax [L0x7fffffffc76c,L0x7fffffffc76d,L0x7fffffffc76e,L0x7fffffffc76f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r13d,-0x2c8(%rbp)                       #! EA = L0x7fffffffc788; PC = 0x55555555b243 *)
mov [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,_,_,_,_]
    %r13;
(* #jbe    0x55555555b340 <gf256mat_prod_sse+384>  #! PC = 0x55555555b24d *)
#jbe    0x55555555b340 <gf256mat_prod_sse+384>  #! 0x55555555b24d = 0x55555555b24d;
(* mov    -0x2f0(%rbp),%rax                        #! EA = L0x7fffffffc760; Value = 0x00007fffffffcb10; PC = 0x55555555b253 *)
mov %rax [L0x7fffffffc760,L0x7fffffffc761,L0x7fffffffc762,L0x7fffffffc763,
          L0x7fffffffc764,L0x7fffffffc765,L0x7fffffffc766,L0x7fffffffc767];
(* mov    %r13d,%esi                               #! PC = 0x55555555b25a *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movdqu (%rax),%xmm0                             #! EA = L0x7fffffffcb10; Value = 0xdd12a058dc4825a9; PC = 0x55555555b25d *)
mov %xmm0 [L0x7fffffffcb10, L0x7fffffffcb11, L0x7fffffffcb12, L0x7fffffffcb13,
           L0x7fffffffcb14, L0x7fffffffcb15, L0x7fffffffcb16, L0x7fffffffcb17,
           L0x7fffffffcb18, L0x7fffffffcb19, L0x7fffffffcb1a, L0x7fffffffcb1b,
           L0x7fffffffcb1c, L0x7fffffffcb1d, L0x7fffffffcb1e, L0x7fffffffcb1f];
(* mov    -0x2d8(%rbp),%rdi                        #! EA = L0x7fffffffc778; Value = 0x00007fffffffc810; PC = 0x55555555b261 *)
mov %rdi [L0x7fffffffc778,L0x7fffffffc779,L0x7fffffffc77a,L0x7fffffffc77b,
          L0x7fffffffc77c,L0x7fffffffc77d,L0x7fffffffc77e,L0x7fffffffc77f];
(* #call   0x555555557410 <gf256v_generate_multab_16_sse>#! PC = 0x55555555b268 *)
#call   0x555555557410 <gf256v_generate_multab_16_sse>#! 0x55555555b268 = 0x55555555b268;
(* #! -> SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* movdqa %xmm0,%xmm1                              #! PC = 0x555555557411 *)
mov %xmm1 %xmm0;
(* movdqa %xmm0,%xmm10                             #! PC = 0x555555557415 *)
mov %xmm10 %xmm0;
(* movdqa %xmm1,%xmm13                             #! PC = 0x55555555741a *)
mov %xmm13 %xmm1;
(* psrlw  $0x4,%xmm10                              #! PC = 0x55555555741f *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm10 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* movaps %xmm1,-0x10(%rbp)                        #! EA = L0x7fffffffc740; PC = 0x555555557428 *)
mov [L0x7fffffffc740,L0x7fffffffc741,L0x7fffffffc742,L0x7fffffffc743,
     L0x7fffffffc744,L0x7fffffffc745,L0x7fffffffc746,L0x7fffffffc747,
     L0x7fffffffc748,L0x7fffffffc749,L0x7fffffffc74a,L0x7fffffffc74b,
     L0x7fffffffc74c,L0x7fffffffc74d,L0x7fffffffc74e,L0x7fffffffc74f] %xmm1;
(* movdqa 0xebfc(%rip),%xmm0        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x55555555742c *)
mov %xmm0 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqu 0x10ca4(%rip),%xmm7        # 0x5555555680e0 <__gf256_mulbase+96>#! EA = L0x5555555680e0; Value = 0x3830282018100800; PC = 0x555555557434 *)
mov %xmm7 [L0x5555555680e0, L0x5555555680e1, L0x5555555680e2, L0x5555555680e3,
           L0x5555555680e4, L0x5555555680e5, L0x5555555680e6, L0x5555555680e7,
           L0x5555555680e8, L0x5555555680e9, L0x5555555680ea, L0x5555555680eb,
           L0x5555555680ec, L0x5555555680ed, L0x5555555680ee, L0x5555555680ef];
(* movdqu 0x10cdc(%rip),%xmm6        # 0x555555568120 <__gf256_mulbase+160>#! EA = L0x555555568120; Value = 0xe0c0a08060402000; PC = 0x55555555743c *)
mov %xmm6 [L0x555555568120, L0x555555568121, L0x555555568122, L0x555555568123,
           L0x555555568124, L0x555555568125, L0x555555568126, L0x555555568127,
           L0x555555568128, L0x555555568129, L0x55555556812a, L0x55555556812b,
           L0x55555556812c, L0x55555556812d, L0x55555556812e, L0x55555556812f];
(* movdqu 0x10c64(%rip),%xmm5        # 0x5555555680b0 <__gf256_mulbase+48>#! EA = L0x5555555680b0; Value = 0xe0c0a08060402000; PC = 0x555555557444 *)
mov %xmm5 [L0x5555555680b0, L0x5555555680b1, L0x5555555680b2, L0x5555555680b3,
           L0x5555555680b4, L0x5555555680b5, L0x5555555680b6, L0x5555555680b7,
           L0x5555555680b8, L0x5555555680b9, L0x5555555680ba, L0x5555555680bb,
           L0x5555555680bc, L0x5555555680bd, L0x5555555680be, L0x5555555680bf];
(* movdqu 0x10c4b(%rip),%xmm9        # 0x5555555680a0 <__gf256_mulbase+32>#! EA = L0x5555555680a0; Value = 0x0e0c0a0806040200; PC = 0x55555555744c *)
mov %xmm9 [L0x5555555680a0, L0x5555555680a1, L0x5555555680a2, L0x5555555680a3,
           L0x5555555680a4, L0x5555555680a5, L0x5555555680a6, L0x5555555680a7,
           L0x5555555680a8, L0x5555555680a9, L0x5555555680aa, L0x5555555680ab,
           L0x5555555680ac, L0x5555555680ad, L0x5555555680ae, L0x5555555680af];
(* pand   %xmm0,%xmm13                             #! PC = 0x555555557455 *)
and %xmm13@uint8[16] %xmm13 %xmm0;
(* movdqu 0x10c5d(%rip),%xmm8        # 0x5555555680c0 <__gf256_mulbase+64>#! EA = L0x5555555680c0; Value = 0x1c1814100c080400; PC = 0x55555555745a *)
mov %xmm8 [L0x5555555680c0, L0x5555555680c1, L0x5555555680c2, L0x5555555680c3,
           L0x5555555680c4, L0x5555555680c5, L0x5555555680c6, L0x5555555680c7,
           L0x5555555680c8, L0x5555555680c9, L0x5555555680ca, L0x5555555680cb,
           L0x5555555680cc, L0x5555555680cd, L0x5555555680ce, L0x5555555680cf];
(* pand   %xmm0,%xmm10                             #! PC = 0x555555557463 *)
and %xmm10@uint8[16] %xmm10 %xmm0;
(* movdqu 0x10c8f(%rip),%xmm11        # 0x555555568100 <__gf256_mulbase+128>#! EA = L0x555555568100; Value = 0x7060504030201000; PC = 0x555555557468 *)
mov %xmm11 [L0x555555568100, L0x555555568101, L0x555555568102, L0x555555568103,
           L0x555555568104, L0x555555568105, L0x555555568106, L0x555555568107,
           L0x555555568108, L0x555555568109, L0x55555556810a, L0x55555556810b,
           L0x55555556810c, L0x55555556810d, L0x55555556810e, L0x55555556810f];
(* movdqu 0x10c57(%rip),%xmm2        # 0x5555555680d0 <__gf256_mulbase+80>#! EA = L0x5555555680d0; Value = 0xdb9b5b1bc0804000; PC = 0x555555557471 *)
mov %xmm2 [L0x5555555680d0, L0x5555555680d1, L0x5555555680d2, L0x5555555680d3,
           L0x5555555680d4, L0x5555555680d5, L0x5555555680d6, L0x5555555680d7,
           L0x5555555680d8, L0x5555555680d9, L0x5555555680da, L0x5555555680db,
           L0x5555555680dc, L0x5555555680dd, L0x5555555680de, L0x5555555680df];
(* pshufb %xmm13,%xmm7                             #! PC = 0x555555557479 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm7;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm7 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm6                             #! PC = 0x55555555747f *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10cb2(%rip),%xmm12        # 0x555555568140 <__gf256_mulbase+192>#! EA = L0x555555568140; Value = 0xdb9b5b1bc0804000; PC = 0x555555557485 *)
mov %xmm12 [L0x555555568140, L0x555555568141, L0x555555568142, L0x555555568143,
           L0x555555568144, L0x555555568145, L0x555555568146, L0x555555568147,
           L0x555555568148, L0x555555568149, L0x55555556814a, L0x55555556814b,
           L0x55555556814c, L0x55555556814d, L0x55555556814e, L0x55555556814f];
(* movdqu 0x10c5a(%rip),%xmm4        # 0x5555555680f0 <__gf256_mulbase+112>#! EA = L0x5555555680f0; Value = 0xad2db6369b1b8000; PC = 0x55555555748e *)
mov %xmm4 [L0x5555555680f0, L0x5555555680f1, L0x5555555680f2, L0x5555555680f3,
           L0x5555555680f4, L0x5555555680f5, L0x5555555680f6, L0x5555555680f7,
           L0x5555555680f8, L0x5555555680f9, L0x5555555680fa, L0x5555555680fb,
           L0x5555555680fc, L0x5555555680fd, L0x5555555680fe, L0x5555555680ff];
(* pshufb %xmm13,%xmm9                             #! PC = 0x555555557496 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm9;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm9 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm8                             #! PC = 0x55555555749c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm8;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm8 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10cb5(%rip),%xmm15        # 0x555555568160 <__gf256_mulbase+224>#! EA = L0x555555568160; Value = 0xad2db6369b1b8000; PC = 0x5555555574a2 *)
mov %xmm15 [L0x555555568160, L0x555555568161, L0x555555568162, L0x555555568163,
           L0x555555568164, L0x555555568165, L0x555555568166, L0x555555568167,
           L0x555555568168, L0x555555568169, L0x55555556816a, L0x55555556816b,
           L0x55555556816c, L0x55555556816d, L0x55555556816e, L0x55555556816f];
(* pshufb %xmm13,%xmm11                            #! PC = 0x5555555574ab *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c57(%rip),%xmm0        # 0x555555568110 <__gf256_mulbase+144>#! EA = L0x555555568110; Value = 0x415a776c2d361b00; PC = 0x5555555574b1 *)
mov %xmm0 [L0x555555568110, L0x555555568111, L0x555555568112, L0x555555568113,
           L0x555555568114, L0x555555568115, L0x555555568116, L0x555555568117,
           L0x555555568118, L0x555555568119, L0x55555556811a, L0x55555556811b,
           L0x55555556811c, L0x55555556811d, L0x55555556811e, L0x55555556811f];
(* pshufb %xmm10,%xmm5                             #! PC = 0x5555555574b9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm12                            #! PC = 0x5555555574bf *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c63(%rip),%xmm3        # 0x555555568130 <__gf256_mulbase+176>#! EA = L0x555555568130; Value = 0x82b4eed85a6c3600; PC = 0x5555555574c5 *)
mov %xmm3 [L0x555555568130, L0x555555568131, L0x555555568132, L0x555555568133,
           L0x555555568134, L0x555555568135, L0x555555568136, L0x555555568137,
           L0x555555568138, L0x555555568139, L0x55555556813a, L0x55555556813b,
           L0x55555556813c, L0x55555556813d, L0x55555556813e, L0x55555556813f];
(* pxor   %xmm9,%xmm5                              #! PC = 0x5555555574cd *)
xor %xmm5@uint8[16] %xmm5 %xmm9;
(* movdqu 0x10c75(%rip),%xmm14        # 0x555555568150 <__gf256_mulbase+208>#! EA = L0x555555568150; Value = 0x1f73c7abb4d86c00; PC = 0x5555555574d2 *)
mov %xmm14 [L0x555555568150, L0x555555568151, L0x555555568152, L0x555555568153,
           L0x555555568154, L0x555555568155, L0x555555568156, L0x555555568157,
           L0x555555568158, L0x555555568159, L0x55555556815a, L0x55555556815b,
           L0x55555556815c, L0x55555556815d, L0x55555556815e, L0x55555556815f];
(* pshufb %xmm13,%xmm15                            #! PC = 0x5555555574db *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm15;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm15 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm2                             #! PC = 0x5555555574e1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm2;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm2 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c80(%rip),%xmm13        # 0x555555568170 <__gf256_mulbase+240>#! EA = L0x555555568170; Value = 0x3ee6954d73abd800; PC = 0x5555555574e7 *)
mov %xmm13 [L0x555555568170, L0x555555568171, L0x555555568172, L0x555555568173,
           L0x555555568174, L0x555555568175, L0x555555568176, L0x555555568177,
           L0x555555568178, L0x555555568179, L0x55555556817a, L0x55555556817b,
           L0x55555556817c, L0x55555556817d, L0x55555556817e, L0x55555556817f];
(* pshufb %xmm10,%xmm4                             #! PC = 0x5555555574f0 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm14                            #! PC = 0x5555555574f6 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm14;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm14 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm8,%xmm2                              #! PC = 0x5555555574fc *)
xor %xmm2@uint8[16] %xmm2 %xmm8;
(* pxor   %xmm7,%xmm4                              #! PC = 0x555555557501 *)
xor %xmm4@uint8[16] %xmm4 %xmm7;
(* movdqa 0xeb52(%rip),%xmm9        # 0x555555566060#! EA = L0x555555566060; Value = 0x0000f0f00000f0f0; PC = 0x555555557505 *)
mov %xmm9 [L0x555555566060, L0x555555566061, L0x555555566062, L0x555555566063,
           L0x555555566064, L0x555555566065, L0x555555566066, L0x555555566067,
           L0x555555566068, L0x555555566069, L0x55555556606a, L0x55555556606b,
           L0x55555556606c, L0x55555556606d, L0x55555556606e, L0x55555556606f];
(* pshufb %xmm10,%xmm13                            #! PC = 0x55555555750e *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm13;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm13 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm0                             #! PC = 0x555555557514 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm3                             #! PC = 0x55555555751a *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa 0xeb27(%rip),%xmm8        # 0x555555566050#! EA = L0x555555566050; Value = 0x00000000f0f0f0f0; PC = 0x555555557520 *)
mov %xmm8 [L0x555555566050, L0x555555566051, L0x555555566052, L0x555555566053,
           L0x555555566054, L0x555555566055, L0x555555566056, L0x555555566057,
           L0x555555566058, L0x555555566059, L0x55555556605a, L0x55555556605b,
           L0x55555556605c, L0x55555556605d, L0x55555556605e, L0x55555556605f];
(* movdqa 0xeb0f(%rip),%xmm7        # 0x555555566040#! EA = L0x555555566040; Value = 0xf0f0f0f0f0f0f0f0; PC = 0x555555557529 *)
mov %xmm7 [L0x555555566040, L0x555555566041, L0x555555566042, L0x555555566043,
           L0x555555566044, L0x555555566045, L0x555555566046, L0x555555566047,
           L0x555555566048, L0x555555566049, L0x55555556604a, L0x55555556604b,
           L0x55555556604c, L0x55555556604d, L0x55555556604e, L0x55555556604f];
(* movaps %xmm5,-0x20(%rbp)                        #! EA = L0x7fffffffc730; PC = 0x555555557531 *)
mov [L0x7fffffffc730,L0x7fffffffc731,L0x7fffffffc732,L0x7fffffffc733,
     L0x7fffffffc734,L0x7fffffffc735,L0x7fffffffc736,L0x7fffffffc737,
     L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
     L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f] %xmm5;
(* pshufb %xmm9,%xmm5                              #! PC = 0x555555557535 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm9;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa 0xeb2c(%rip),%xmm10        # 0x555555566070#! EA = L0x555555566070; Value = 0x00f000f000f000f0; PC = 0x55555555753b *)
mov %xmm10 [L0x555555566070, L0x555555566071, L0x555555566072, L0x555555566073,
           L0x555555566074, L0x555555566075, L0x555555566076, L0x555555566077,
           L0x555555566078, L0x555555566079, L0x55555556607a, L0x55555556607b,
           L0x55555556607c, L0x55555556607d, L0x55555556607e, L0x55555556607f];
(* movaps %xmm2,-0x30(%rbp)                        #! EA = L0x7fffffffc720; PC = 0x555555557544 *)
mov [L0x7fffffffc720,L0x7fffffffc721,L0x7fffffffc722,L0x7fffffffc723,
     L0x7fffffffc724,L0x7fffffffc725,L0x7fffffffc726,L0x7fffffffc727,
     L0x7fffffffc728,L0x7fffffffc729,L0x7fffffffc72a,L0x7fffffffc72b,
     L0x7fffffffc72c,L0x7fffffffc72d,L0x7fffffffc72e,L0x7fffffffc72f] %xmm2;
(* pshufb %xmm8,%xmm2                              #! PC = 0x555555557548 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm8;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm2;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm2 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm11,%xmm0                             #! PC = 0x55555555754e *)
xor %xmm0@uint8[16] %xmm0 %xmm11;
(* pxor   %xmm6,%xmm3                              #! PC = 0x555555557553 *)
xor %xmm3@uint8[16] %xmm3 %xmm6;
(* pshufb %xmm10,%xmm1                             #! PC = 0x555555557557 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movaps %xmm4,-0x40(%rbp)                        #! EA = L0x7fffffffc710; PC = 0x55555555755d *)
mov [L0x7fffffffc710,L0x7fffffffc711,L0x7fffffffc712,L0x7fffffffc713,
     L0x7fffffffc714,L0x7fffffffc715,L0x7fffffffc716,L0x7fffffffc717,
     L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
     L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f] %xmm4;
(* pshufb %xmm7,%xmm4                              #! PC = 0x555555557561 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm7;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm14,%xmm12                            #! PC = 0x555555557566 *)
xor %xmm12@uint8[16] %xmm12 %xmm14;
(* pxor   %xmm5,%xmm1                              #! PC = 0x55555555756b *)
xor %xmm1@uint8[16] %xmm1 %xmm5;
(* pxor   %xmm4,%xmm2                              #! PC = 0x55555555756f *)
xor %xmm2@uint8[16] %xmm2 %xmm4;
(* movaps %xmm13,-0x60(%rbp)                       #! EA = L0x7fffffffc6f0; PC = 0x555555557573 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm13;
(* movdqa %xmm12,%xmm14                            #! PC = 0x555555557578 *)
mov %xmm14 %xmm12;
(* pxor   %xmm2,%xmm1                              #! PC = 0x55555555757d *)
xor %xmm1@uint8[16] %xmm1 %xmm2;
(* movaps %xmm0,-0x50(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x555555557581 *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm0;
(* movdqa %xmm3,%xmm13                             #! PC = 0x555555557585 *)
mov %xmm13 %xmm3;
(* pshufb %xmm10,%xmm0                             #! PC = 0x55555555758a *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movaps %xmm1,(%rdi)                             #! EA = L0x7fffffffc810; PC = 0x555555557590 *)
mov [L0x7fffffffc810,L0x7fffffffc811,L0x7fffffffc812,L0x7fffffffc813,
     L0x7fffffffc814,L0x7fffffffc815,L0x7fffffffc816,L0x7fffffffc817,
     L0x7fffffffc818,L0x7fffffffc819,L0x7fffffffc81a,L0x7fffffffc81b,
     L0x7fffffffc81c,L0x7fffffffc81d,L0x7fffffffc81e,L0x7fffffffc81f] %xmm1;
(* movdqa -0x60(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x0fd831950f4dab31; PC = 0x555555557593 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* pshufb %xmm9,%xmm3                              #! PC = 0x555555557598 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm9;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm8,%xmm12                             #! PC = 0x55555555759e *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm8;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm3,%xmm0                              #! PC = 0x5555555575a4 *)
xor %xmm0@uint8[16] %xmm0 %xmm3;
(* pxor   %xmm15,%xmm1                             #! PC = 0x5555555575a8 *)
xor %xmm1@uint8[16] %xmm1 %xmm15;
(* movdqa %xmm1,%xmm15                             #! PC = 0x5555555575ad *)
mov %xmm15 %xmm1;
(* pshufb %xmm7,%xmm1                              #! PC = 0x5555555575b2 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm7;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm12                             #! PC = 0x5555555575b7 *)
xor %xmm12@uint8[16] %xmm12 %xmm1;
(* pxor   %xmm12,%xmm0                             #! PC = 0x5555555575bc *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movaps %xmm0,0x10(%rdi)                         #! EA = L0x7fffffffc820; PC = 0x5555555575c1 *)
mov [L0x7fffffffc820,L0x7fffffffc821,L0x7fffffffc822,L0x7fffffffc823,
     L0x7fffffffc824,L0x7fffffffc825,L0x7fffffffc826,L0x7fffffffc827,
     L0x7fffffffc828,L0x7fffffffc829,L0x7fffffffc82a,L0x7fffffffc82b,
     L0x7fffffffc82c,L0x7fffffffc82d,L0x7fffffffc82e,L0x7fffffffc82f] %xmm0;
(* #jbe    0x5555555576c9 <gf256v_generate_multab_16_sse+697>#! PC = 0x5555555575c8 *)
#jbe    0x5555555576c9 <gf256v_generate_multab_16_sse+697>#! 0x5555555575c8 = 0x5555555575c8;
(* movdqa 0xea62(%rip),%xmm10        # 0x555555566040#! EA = L0x555555566040; Value = 0xf0f0f0f0f0f0f0f0; PC = 0x5555555575d5 *)
mov %xmm10 [L0x555555566040, L0x555555566041, L0x555555566042, L0x555555566043,
           L0x555555566044, L0x555555566045, L0x555555566046, L0x555555566047,
           L0x555555566048, L0x555555566049, L0x55555556604a, L0x55555556604b,
           L0x55555556604c, L0x55555556604d, L0x55555556604e, L0x55555556604f];
(* movdqa 0xea69(%rip),%xmm9        # 0x555555566050#! EA = L0x555555566050; Value = 0x00000000f0f0f0f0; PC = 0x5555555575de *)
mov %xmm9 [L0x555555566050, L0x555555566051, L0x555555566052, L0x555555566053,
           L0x555555566054, L0x555555566055, L0x555555566056, L0x555555566057,
           L0x555555566058, L0x555555566059, L0x55555556605a, L0x55555556605b,
           L0x55555556605c, L0x55555556605d, L0x55555556605e, L0x55555556605f];
(* movdqa 0xea7d(%rip),%xmm7        # 0x555555566070#! EA = L0x555555566070; Value = 0x00f000f000f000f0; PC = 0x5555555575eb *)
mov %xmm7 [L0x555555566070, L0x555555566071, L0x555555566072, L0x555555566073,
           L0x555555566074, L0x555555566075, L0x555555566076, L0x555555566077,
           L0x555555566078, L0x555555566079, L0x55555556607a, L0x55555556607b,
           L0x55555556607c, L0x55555556607d, L0x55555556607e, L0x55555556607f];
(* movdqa 0xea64(%rip),%xmm8        # 0x555555566060#! EA = L0x555555566060; Value = 0x0000f0f00000f0f0; PC = 0x5555555575f3 *)
mov %xmm8 [L0x555555566060, L0x555555566061, L0x555555566062, L0x555555566063,
           L0x555555566064, L0x555555566065, L0x555555566066, L0x555555566067,
           L0x555555566068, L0x555555566069, L0x55555556606a, L0x55555556606b,
           L0x55555556606c, L0x55555556606d, L0x55555556606e, L0x55555556606f];
(* movdqa 0xea1c(%rip),%xmm1        # 0x555555566020#! EA = L0x555555566020; Value = 0x0101010101010101; PC = 0x5555555575fc *)
mov %xmm1 [L0x555555566020, L0x555555566021, L0x555555566022, L0x555555566023,
           L0x555555566024, L0x555555566025, L0x555555566026, L0x555555566027,
           L0x555555566028, L0x555555566029, L0x55555556602a, L0x55555556602b,
           L0x55555556602c, L0x55555556602d, L0x55555556602e, L0x55555556602f];
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc830; PC = 0x555555557684 *)
mov [L0x7fffffffc830,L0x7fffffffc831,L0x7fffffffc832,L0x7fffffffc833,
     L0x7fffffffc834,L0x7fffffffc835,L0x7fffffffc836,L0x7fffffffc837,
     L0x7fffffffc838,L0x7fffffffc839,L0x7fffffffc83a,L0x7fffffffc83b,
     L0x7fffffffc83c,L0x7fffffffc83d,L0x7fffffffc83e,L0x7fffffffc83f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc840; PC = 0x5555555576bc *)
mov [L0x7fffffffc840,L0x7fffffffc841,L0x7fffffffc842,L0x7fffffffc843,
     L0x7fffffffc844,L0x7fffffffc845,L0x7fffffffc846,L0x7fffffffc847,
     L0x7fffffffc848,L0x7fffffffc849,L0x7fffffffc84a,L0x7fffffffc84b,
     L0x7fffffffc84c,L0x7fffffffc84d,L0x7fffffffc84e,L0x7fffffffc84f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc850; PC = 0x555555557684 *)
mov [L0x7fffffffc850,L0x7fffffffc851,L0x7fffffffc852,L0x7fffffffc853,
     L0x7fffffffc854,L0x7fffffffc855,L0x7fffffffc856,L0x7fffffffc857,
     L0x7fffffffc858,L0x7fffffffc859,L0x7fffffffc85a,L0x7fffffffc85b,
     L0x7fffffffc85c,L0x7fffffffc85d,L0x7fffffffc85e,L0x7fffffffc85f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc860; PC = 0x5555555576bc *)
mov [L0x7fffffffc860,L0x7fffffffc861,L0x7fffffffc862,L0x7fffffffc863,
     L0x7fffffffc864,L0x7fffffffc865,L0x7fffffffc866,L0x7fffffffc867,
     L0x7fffffffc868,L0x7fffffffc869,L0x7fffffffc86a,L0x7fffffffc86b,
     L0x7fffffffc86c,L0x7fffffffc86d,L0x7fffffffc86e,L0x7fffffffc86f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc870; PC = 0x555555557684 *)
mov [L0x7fffffffc870,L0x7fffffffc871,L0x7fffffffc872,L0x7fffffffc873,
     L0x7fffffffc874,L0x7fffffffc875,L0x7fffffffc876,L0x7fffffffc877,
     L0x7fffffffc878,L0x7fffffffc879,L0x7fffffffc87a,L0x7fffffffc87b,
     L0x7fffffffc87c,L0x7fffffffc87d,L0x7fffffffc87e,L0x7fffffffc87f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc880; PC = 0x5555555576bc *)
mov [L0x7fffffffc880,L0x7fffffffc881,L0x7fffffffc882,L0x7fffffffc883,
     L0x7fffffffc884,L0x7fffffffc885,L0x7fffffffc886,L0x7fffffffc887,
     L0x7fffffffc888,L0x7fffffffc889,L0x7fffffffc88a,L0x7fffffffc88b,
     L0x7fffffffc88c,L0x7fffffffc88d,L0x7fffffffc88e,L0x7fffffffc88f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc890; PC = 0x555555557684 *)
mov [L0x7fffffffc890,L0x7fffffffc891,L0x7fffffffc892,L0x7fffffffc893,
     L0x7fffffffc894,L0x7fffffffc895,L0x7fffffffc896,L0x7fffffffc897,
     L0x7fffffffc898,L0x7fffffffc899,L0x7fffffffc89a,L0x7fffffffc89b,
     L0x7fffffffc89c,L0x7fffffffc89d,L0x7fffffffc89e,L0x7fffffffc89f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8a0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8a0,L0x7fffffffc8a1,L0x7fffffffc8a2,L0x7fffffffc8a3,
     L0x7fffffffc8a4,L0x7fffffffc8a5,L0x7fffffffc8a6,L0x7fffffffc8a7,
     L0x7fffffffc8a8,L0x7fffffffc8a9,L0x7fffffffc8aa,L0x7fffffffc8ab,
     L0x7fffffffc8ac,L0x7fffffffc8ad,L0x7fffffffc8ae,L0x7fffffffc8af] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8b0; PC = 0x555555557684 *)
mov [L0x7fffffffc8b0,L0x7fffffffc8b1,L0x7fffffffc8b2,L0x7fffffffc8b3,
     L0x7fffffffc8b4,L0x7fffffffc8b5,L0x7fffffffc8b6,L0x7fffffffc8b7,
     L0x7fffffffc8b8,L0x7fffffffc8b9,L0x7fffffffc8ba,L0x7fffffffc8bb,
     L0x7fffffffc8bc,L0x7fffffffc8bd,L0x7fffffffc8be,L0x7fffffffc8bf] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8c0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8c0,L0x7fffffffc8c1,L0x7fffffffc8c2,L0x7fffffffc8c3,
     L0x7fffffffc8c4,L0x7fffffffc8c5,L0x7fffffffc8c6,L0x7fffffffc8c7,
     L0x7fffffffc8c8,L0x7fffffffc8c9,L0x7fffffffc8ca,L0x7fffffffc8cb,
     L0x7fffffffc8cc,L0x7fffffffc8cd,L0x7fffffffc8ce,L0x7fffffffc8cf] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8d0; PC = 0x555555557684 *)
mov [L0x7fffffffc8d0,L0x7fffffffc8d1,L0x7fffffffc8d2,L0x7fffffffc8d3,
     L0x7fffffffc8d4,L0x7fffffffc8d5,L0x7fffffffc8d6,L0x7fffffffc8d7,
     L0x7fffffffc8d8,L0x7fffffffc8d9,L0x7fffffffc8da,L0x7fffffffc8db,
     L0x7fffffffc8dc,L0x7fffffffc8dd,L0x7fffffffc8de,L0x7fffffffc8df] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8e0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8e0,L0x7fffffffc8e1,L0x7fffffffc8e2,L0x7fffffffc8e3,
     L0x7fffffffc8e4,L0x7fffffffc8e5,L0x7fffffffc8e6,L0x7fffffffc8e7,
     L0x7fffffffc8e8,L0x7fffffffc8e9,L0x7fffffffc8ea,L0x7fffffffc8eb,
     L0x7fffffffc8ec,L0x7fffffffc8ed,L0x7fffffffc8ee,L0x7fffffffc8ef] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8f0; PC = 0x555555557684 *)
mov [L0x7fffffffc8f0,L0x7fffffffc8f1,L0x7fffffffc8f2,L0x7fffffffc8f3,
     L0x7fffffffc8f4,L0x7fffffffc8f5,L0x7fffffffc8f6,L0x7fffffffc8f7,
     L0x7fffffffc8f8,L0x7fffffffc8f9,L0x7fffffffc8fa,L0x7fffffffc8fb,
     L0x7fffffffc8fc,L0x7fffffffc8fd,L0x7fffffffc8fe,L0x7fffffffc8ff] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc900; PC = 0x5555555576bc *)
mov [L0x7fffffffc900,L0x7fffffffc901,L0x7fffffffc902,L0x7fffffffc903,
     L0x7fffffffc904,L0x7fffffffc905,L0x7fffffffc906,L0x7fffffffc907,
     L0x7fffffffc908,L0x7fffffffc909,L0x7fffffffc90a,L0x7fffffffc90b,
     L0x7fffffffc90c,L0x7fffffffc90d,L0x7fffffffc90e,L0x7fffffffc90f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc910; PC = 0x555555557684 *)
mov [L0x7fffffffc910,L0x7fffffffc911,L0x7fffffffc912,L0x7fffffffc913,
     L0x7fffffffc914,L0x7fffffffc915,L0x7fffffffc916,L0x7fffffffc917,
     L0x7fffffffc918,L0x7fffffffc919,L0x7fffffffc91a,L0x7fffffffc91b,
     L0x7fffffffc91c,L0x7fffffffc91d,L0x7fffffffc91e,L0x7fffffffc91f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc920; PC = 0x5555555576bc *)
mov [L0x7fffffffc920,L0x7fffffffc921,L0x7fffffffc922,L0x7fffffffc923,
     L0x7fffffffc924,L0x7fffffffc925,L0x7fffffffc926,L0x7fffffffc927,
     L0x7fffffffc928,L0x7fffffffc929,L0x7fffffffc92a,L0x7fffffffc92b,
     L0x7fffffffc92c,L0x7fffffffc92d,L0x7fffffffc92e,L0x7fffffffc92f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc930; PC = 0x555555557684 *)
mov [L0x7fffffffc930,L0x7fffffffc931,L0x7fffffffc932,L0x7fffffffc933,
     L0x7fffffffc934,L0x7fffffffc935,L0x7fffffffc936,L0x7fffffffc937,
     L0x7fffffffc938,L0x7fffffffc939,L0x7fffffffc93a,L0x7fffffffc93b,
     L0x7fffffffc93c,L0x7fffffffc93d,L0x7fffffffc93e,L0x7fffffffc93f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc940; PC = 0x5555555576bc *)
mov [L0x7fffffffc940,L0x7fffffffc941,L0x7fffffffc942,L0x7fffffffc943,
     L0x7fffffffc944,L0x7fffffffc945,L0x7fffffffc946,L0x7fffffffc947,
     L0x7fffffffc948,L0x7fffffffc949,L0x7fffffffc94a,L0x7fffffffc94b,
     L0x7fffffffc94c,L0x7fffffffc94d,L0x7fffffffc94e,L0x7fffffffc94f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc950; PC = 0x555555557684 *)
mov [L0x7fffffffc950,L0x7fffffffc951,L0x7fffffffc952,L0x7fffffffc953,
     L0x7fffffffc954,L0x7fffffffc955,L0x7fffffffc956,L0x7fffffffc957,
     L0x7fffffffc958,L0x7fffffffc959,L0x7fffffffc95a,L0x7fffffffc95b,
     L0x7fffffffc95c,L0x7fffffffc95d,L0x7fffffffc95e,L0x7fffffffc95f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc960; PC = 0x5555555576bc *)
mov [L0x7fffffffc960,L0x7fffffffc961,L0x7fffffffc962,L0x7fffffffc963,
     L0x7fffffffc964,L0x7fffffffc965,L0x7fffffffc966,L0x7fffffffc967,
     L0x7fffffffc968,L0x7fffffffc969,L0x7fffffffc96a,L0x7fffffffc96b,
     L0x7fffffffc96c,L0x7fffffffc96d,L0x7fffffffc96e,L0x7fffffffc96f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc970; PC = 0x555555557684 *)
mov [L0x7fffffffc970,L0x7fffffffc971,L0x7fffffffc972,L0x7fffffffc973,
     L0x7fffffffc974,L0x7fffffffc975,L0x7fffffffc976,L0x7fffffffc977,
     L0x7fffffffc978,L0x7fffffffc979,L0x7fffffffc97a,L0x7fffffffc97b,
     L0x7fffffffc97c,L0x7fffffffc97d,L0x7fffffffc97e,L0x7fffffffc97f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc980; PC = 0x5555555576bc *)
mov [L0x7fffffffc980,L0x7fffffffc981,L0x7fffffffc982,L0x7fffffffc983,
     L0x7fffffffc984,L0x7fffffffc985,L0x7fffffffc986,L0x7fffffffc987,
     L0x7fffffffc988,L0x7fffffffc989,L0x7fffffffc98a,L0x7fffffffc98b,
     L0x7fffffffc98c,L0x7fffffffc98d,L0x7fffffffc98e,L0x7fffffffc98f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc990; PC = 0x555555557684 *)
mov [L0x7fffffffc990,L0x7fffffffc991,L0x7fffffffc992,L0x7fffffffc993,
     L0x7fffffffc994,L0x7fffffffc995,L0x7fffffffc996,L0x7fffffffc997,
     L0x7fffffffc998,L0x7fffffffc999,L0x7fffffffc99a,L0x7fffffffc99b,
     L0x7fffffffc99c,L0x7fffffffc99d,L0x7fffffffc99e,L0x7fffffffc99f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc9a0; PC = 0x5555555576bc *)
mov [L0x7fffffffc9a0,L0x7fffffffc9a1,L0x7fffffffc9a2,L0x7fffffffc9a3,
     L0x7fffffffc9a4,L0x7fffffffc9a5,L0x7fffffffc9a6,L0x7fffffffc9a7,
     L0x7fffffffc9a8,L0x7fffffffc9a9,L0x7fffffffc9aa,L0x7fffffffc9ab,
     L0x7fffffffc9ac,L0x7fffffffc9ad,L0x7fffffffc9ae,L0x7fffffffc9af] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc9b0; PC = 0x555555557684 *)
mov [L0x7fffffffc9b0,L0x7fffffffc9b1,L0x7fffffffc9b2,L0x7fffffffc9b3,
     L0x7fffffffc9b4,L0x7fffffffc9b5,L0x7fffffffc9b6,L0x7fffffffc9b7,
     L0x7fffffffc9b8,L0x7fffffffc9b9,L0x7fffffffc9ba,L0x7fffffffc9bb,
     L0x7fffffffc9bc,L0x7fffffffc9bd,L0x7fffffffc9be,L0x7fffffffc9bf] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc9c0; PC = 0x5555555576bc *)
mov [L0x7fffffffc9c0,L0x7fffffffc9c1,L0x7fffffffc9c2,L0x7fffffffc9c3,
     L0x7fffffffc9c4,L0x7fffffffc9c5,L0x7fffffffc9c6,L0x7fffffffc9c7,
     L0x7fffffffc9c8,L0x7fffffffc9c9,L0x7fffffffc9ca,L0x7fffffffc9cb,
     L0x7fffffffc9cc,L0x7fffffffc9cd,L0x7fffffffc9ce,L0x7fffffffc9cf] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc9d0; PC = 0x555555557684 *)
mov [L0x7fffffffc9d0,L0x7fffffffc9d1,L0x7fffffffc9d2,L0x7fffffffc9d3,
     L0x7fffffffc9d4,L0x7fffffffc9d5,L0x7fffffffc9d6,L0x7fffffffc9d7,
     L0x7fffffffc9d8,L0x7fffffffc9d9,L0x7fffffffc9da,L0x7fffffffc9db,
     L0x7fffffffc9dc,L0x7fffffffc9dd,L0x7fffffffc9de,L0x7fffffffc9df] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc9e0; PC = 0x5555555576bc *)
mov [L0x7fffffffc9e0,L0x7fffffffc9e1,L0x7fffffffc9e2,L0x7fffffffc9e3,
     L0x7fffffffc9e4,L0x7fffffffc9e5,L0x7fffffffc9e6,L0x7fffffffc9e7,
     L0x7fffffffc9e8,L0x7fffffffc9e9,L0x7fffffffc9ea,L0x7fffffffc9eb,
     L0x7fffffffc9ec,L0x7fffffffc9ed,L0x7fffffffc9ee,L0x7fffffffc9ef] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0xdd12a058dc4825a9; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0xa1245bb0a3904a49; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0x5948b67b5d3b9492; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xb29077f6ba76333f; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc9f0; PC = 0x555555557684 *)
mov [L0x7fffffffc9f0,L0x7fffffffc9f1,L0x7fffffffc9f2,L0x7fffffffc9f3,
     L0x7fffffffc9f4,L0x7fffffffc9f5,L0x7fffffffc9f6,L0x7fffffffc9f7,
     L0x7fffffffc9f8,L0x7fffffffc9f9,L0x7fffffffc9fa,L0x7fffffffc9fb,
     L0x7fffffffc9fc,L0x7fffffffc9fd,L0x7fffffffc9fe,L0x7fffffffc9ff] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7f3beef76fec667e; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffca00; PC = 0x5555555576bc *)
mov [L0x7fffffffca00,L0x7fffffffca01,L0x7fffffffca02,L0x7fffffffca03,
     L0x7fffffffca04,L0x7fffffffca05,L0x7fffffffca06,L0x7fffffffca07,
     L0x7fffffffca08,L0x7fffffffca09,L0x7fffffffca0a,L0x7fffffffca0b,
     L0x7fffffffca0c,L0x7fffffffca0d,L0x7fffffffca0e,L0x7fffffffca0f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* #! <- SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* #ret                                            #! PC = 0x5555555576ca *)
#ret                                            #! 0x5555555576ca = 0x5555555576ca;
(* #je     0x55555555b2fa <gf256mat_prod_sse+314>  #! PC = 0x55555555b270 *)
#je     0x55555555b2fa <gf256mat_prod_sse+314>  #! 0x55555555b270 = 0x55555555b270;
(* mov    %r12d,%r14d                              #! PC = 0x55555555b276 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %r14 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r12d,%ecx                               #! PC = 0x55555555b286 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %rcx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    -0x2e0(%rbp),%rax                        #! EA = L0x7fffffffc770; Value = 0x00007fffffffcb80; PC = 0x55555555b289 *)
mov %rax [L0x7fffffffc770,L0x7fffffffc771,L0x7fffffffc772,L0x7fffffffc773,
          L0x7fffffffc774,L0x7fffffffc775,L0x7fffffffc776,L0x7fffffffc777];
(* mov    %rbx,%rdi                                #! PC = 0x55555555b290 *)
mov %rdi %rbx;
(* mov    %ecx,%r10d                               #! PC = 0x55555555b29d *)
mov [m0,m1,m2,m3,_,_,_,_] %rcx;
mov %r10 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,-0x2c4(%rbp)                        #! EA = L0x7fffffffc78c; PC = 0x55555555b2a0 *)
mov [L0x7fffffffc78c,L0x7fffffffc78d,L0x7fffffffc78e,L0x7fffffffc78f,_,_,_,_]
    %rcx;
(* mov    %r8d,%edx                                #! PC = 0x55555555b2aa *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r8d,%r13d                               #! PC = 0x55555555b2ad *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r13 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r15,%rsi                                #! PC = 0x55555555b2b0 *)
mov %rsi %r15;
(* #call   0x555555557040 <loadu_xmm>              #! PC = 0x55555555b2b3 *)
#call   0x555555557040 <loadu_xmm>              #! 0x55555555b2b3 = 0x55555555b2b3;
(* #! -> SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* mov    %edx,%eax                                #! PC = 0x555555557041 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rbx                                #! PC = 0x55555555704a *)
mov %rbx %rdi;
(* mov    %rsi,%rdi                                #! PC = 0x55555555704d *)
mov %rdi %rsi;
(* mov    %edx,%esi                                #! PC = 0x555555557050 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x5555555570d2 <loadu_xmm+146>          #! PC = 0x55555555705b *)
#je     0x5555555570d2 <loadu_xmm+146>          #! 0x55555555705b = 0x55555555705b;
(* movdqu (%rdi),%xmm1                             #! EA = L0x7fffffffcb80; Value = 0xca2a2050551220a6; PC = 0x55555555705d *)
mov %xmm1 [L0x7fffffffcb80, L0x7fffffffcb81, L0x7fffffffcb82, L0x7fffffffcb83,
           L0x7fffffffcb84, L0x7fffffffcb85, L0x7fffffffcb86, L0x7fffffffcb87,
           L0x7fffffffcb88, L0x7fffffffcb89, L0x7fffffffcb8a, L0x7fffffffcb8b,
           L0x7fffffffcb8c, L0x7fffffffcb8d, L0x7fffffffcb8e, L0x7fffffffcb8f];
(* movaps %xmm1,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x555555557064 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm1;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557069 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557069 = 0x555555557069;
(* movdqu 0x10(%rdi),%xmm2                         #! EA = L0x7fffffffcb90; Value = 0xb675634019d157cc; PC = 0x55555555706b *)
mov %xmm2 [L0x7fffffffcb90, L0x7fffffffcb91, L0x7fffffffcb92, L0x7fffffffcb93,
           L0x7fffffffcb94, L0x7fffffffcb95, L0x7fffffffcb96, L0x7fffffffcb97,
           L0x7fffffffcb98, L0x7fffffffcb99, L0x7fffffffcb9a, L0x7fffffffcb9b,
           L0x7fffffffcb9c, L0x7fffffffcb9d, L0x7fffffffcb9e, L0x7fffffffcb9f];
(* movaps %xmm2,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x555555557070 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm2;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557077 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557077 = 0x555555557077;
(* movdqu 0x20(%rdi),%xmm3                         #! EA = L0x7fffffffcba0; Value = 0xef2b58fc4df470d6; PC = 0x555555557079 *)
mov %xmm3 [L0x7fffffffcba0, L0x7fffffffcba1, L0x7fffffffcba2, L0x7fffffffcba3,
           L0x7fffffffcba4, L0x7fffffffcba5, L0x7fffffffcba6, L0x7fffffffcba7,
           L0x7fffffffcba8, L0x7fffffffcba9, L0x7fffffffcbaa, L0x7fffffffcbab,
           L0x7fffffffcbac, L0x7fffffffcbad, L0x7fffffffcbae, L0x7fffffffcbaf];
(* movaps %xmm3,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555707e *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm3;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557085 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557085 = 0x555555557085;
(* movdqu 0x30(%rdi),%xmm4                         #! EA = L0x7fffffffcbb0; Value = 0x7df0554b509a989f; PC = 0x555555557087 *)
mov %xmm4 [L0x7fffffffcbb0, L0x7fffffffcbb1, L0x7fffffffcbb2, L0x7fffffffcbb3,
           L0x7fffffffcbb4, L0x7fffffffcbb5, L0x7fffffffcbb6, L0x7fffffffcbb7,
           L0x7fffffffcbb8, L0x7fffffffcbb9, L0x7fffffffcbba, L0x7fffffffcbbb,
           L0x7fffffffcbbc, L0x7fffffffcbbd, L0x7fffffffcbbe, L0x7fffffffcbbf];
(* movaps %xmm4,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555708c *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm4;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557093 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557093 = 0x555555557093;
(* #je     0x5555555570de <loadu_xmm+158>          #! PC = 0x5555555570d4 *)
#je     0x5555555570de <loadu_xmm+158>          #! 0x5555555570d4 = 0x5555555570d4;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x5555555570d6 *)
#call   0x555555556ff0 <_load_xmm>              #! 0x5555555570d6 = 0x5555555570d6;
(* #! -> SP = 0x7fffffffc738 *)
#! 0x7fffffffc738 = 0x7fffffffc738;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc718; PC = 0x555555557005 *)
mov [L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
     L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc6d8 *)
#! 0x7fffffffc6d8 = 0x7fffffffc6d8;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7fffffffcbc0; Value = 0x9f7c42a1e9a1bdde; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7fffffffcbc0; Value = 0x9f7c42a1e9a1bdde; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc6e0; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc6e0; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc6d8 *)
#! 0x7fffffffc6d8 = 0x7fffffffc6d8;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc6e0; Value = 0x00000000e9a1bdde; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc6e0, L0x7fffffffc6e1, L0x7fffffffc6e2, L0x7fffffffc6e3,
           L0x7fffffffc6e4, L0x7fffffffc6e5, L0x7fffffffc6e6, L0x7fffffffc6e7,
           L0x7fffffffc6e8, L0x7fffffffc6e9, L0x7fffffffc6ea, L0x7fffffffc6eb,
           L0x7fffffffc6ec, L0x7fffffffc6ed, L0x7fffffffc6ee, L0x7fffffffc6ef];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc718; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
          L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc738 *)
#! 0x7fffffffc738 = 0x7fffffffc738;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc7d0; PC = 0x5555555570db *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* mov    -0x8(%rbp),%rbx                          #! EA = L0x7fffffffc748; Value = 0x00007fffffffc790; PC = 0x5555555570de *)
mov %rbx [L0x7fffffffc748,L0x7fffffffc749,L0x7fffffffc74a,L0x7fffffffc74b,
          L0x7fffffffc74c,L0x7fffffffc74d,L0x7fffffffc74e,L0x7fffffffc74f];
(* #! <- SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* #ret                                            #! PC = 0x5555555570e3 *)
#ret                                            #! 0x5555555570e3 = 0x5555555570e3;
(* mov    -0x2c8(%rbp),%eax                        #! EA = L0x7fffffffc788; Value = 0x0000000000000010; PC = 0x55555555b2b8 *)
mov %rax [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    -0x2d8(%rbp),%r9                         #! EA = L0x7fffffffc778; Value = 0x00007fffffffc810; PC = 0x55555555b2c2 *)
mov %r9 [L0x7fffffffc778,L0x7fffffffc779,L0x7fffffffc77a,L0x7fffffffc77b,
          L0x7fffffffc77c,L0x7fffffffc77d,L0x7fffffffc77e,L0x7fffffffc77f];
(* mov    -0x2c4(%rbp),%ecx                        #! EA = L0x7fffffffc78c; Value = 0x551220a600000000; PC = 0x55555555b2c9 *)
mov %rcx [L0x7fffffffc78c,L0x7fffffffc78d,L0x7fffffffc78e,L0x7fffffffc78f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r13d,%r8d                               #! PC = 0x55555555b2cf *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %r8 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r12d,%edx                               #! PC = 0x55555555b2d2 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rbx,%rdi                                #! PC = 0x55555555b2d5 *)
mov %rdi %rbx;
(* mov    -0x2d0(%rbp),%rsi                        #! EA = L0x7fffffffc780; Value = 0x00007ffff78bb470; PC = 0x55555555b2d9 *)
mov %rsi [L0x7fffffffc780,L0x7fffffffc781,L0x7fffffffc782,L0x7fffffffc783,
          L0x7fffffffc784,L0x7fffffffc785,L0x7fffffffc786,L0x7fffffffc787];
(* #call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! PC = 0x55555555b2e0 *)
#call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! 0x55555555b2e0 = 0x55555555b2e0;
(* #! -> SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* mov    %r8d,%eax                                #! PC = 0x55555555aa51 *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,%ecx                                #! PC = 0x55555555aa54 *)
mov [m0,m1,m2,m3,_,_,_,_] %rcx;
mov %rcx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r8d,%r15d                               #! PC = 0x55555555aa5e *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r15 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r9,%r14                                 #! PC = 0x55555555aa67 *)
mov %r14 %r9;
(* mov    %r8d,%r13d                               #! PC = 0x55555555aa6c *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r13 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rbx                                #! PC = 0x55555555aa7a *)
mov %rbx %rdi;
(* mov    %rax,-0x68(%rbp)                         #! EA = L0x7fffffffc6d8; PC = 0x55555555aa81 *)
mov [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
     L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df] %rax;
(* mov    %r13d,%eax                               #! PC = 0x55555555aa85 *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x70(%rbp)                         #! EA = L0x7fffffffc6d0; PC = 0x55555555aa8f *)
mov [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
     L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7] %rax;
(* mov    %edx,%eax                                #! PC = 0x55555555aa93 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x60(%rbp)                         #! EA = L0x7fffffffc6e0; PC = 0x55555555aa95 *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,
     L0x7fffffffc6e4,L0x7fffffffc6e5,L0x7fffffffc6e6,L0x7fffffffc6e7] %rax;
(* mov    0x10(%rbp),%eax                          #! EA = L0x7fffffffc750; Value = 0x0000000000000010; PC = 0x55555555aa99 *)
mov %rax [L0x7fffffffc750,L0x7fffffffc751,L0x7fffffffc752,L0x7fffffffc753,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x58(%rbp)                         #! EA = L0x7fffffffc6e8; PC = 0x55555555aaa3 *)
mov [L0x7fffffffc6e8,L0x7fffffffc6e9,L0x7fffffffc6ea,L0x7fffffffc6eb,
     L0x7fffffffc6ec,L0x7fffffffc6ed,L0x7fffffffc6ee,L0x7fffffffc6ef] %rax;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc810; Value = 0x72db3b92e049a900; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc810, L0x7fffffffc811, L0x7fffffffc812, L0x7fffffffc813,
           L0x7fffffffc814, L0x7fffffffc815, L0x7fffffffc816, L0x7fffffffc817,
           L0x7fffffffc818, L0x7fffffffc819, L0x7fffffffc81a, L0x7fffffffc81b,
           L0x7fffffffc81c, L0x7fffffffc81d, L0x7fffffffc81e, L0x7fffffffc81f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc820; Value = 0x611f9de382fc7e00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc820, L0x7fffffffc821, L0x7fffffffc822, L0x7fffffffc823,
           L0x7fffffffc824, L0x7fffffffc825, L0x7fffffffc826, L0x7fffffffc827,
           L0x7fffffffc828, L0x7fffffffc829, L0x7fffffffc82a, L0x7fffffffc82b,
           L0x7fffffffc82c, L0x7fffffffc82d, L0x7fffffffc82e, L0x7fffffffc82f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb470; Value = 0xb4852faee09738ff; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb470, L0x7ffff78bb471, L0x7ffff78bb472, L0x7ffff78bb473,
           L0x7ffff78bb474, L0x7ffff78bb475, L0x7ffff78bb476, L0x7ffff78bb477,
           L0x7ffff78bb478, L0x7ffff78bb479, L0x7ffff78bb47a, L0x7ffff78bb47b,
           L0x7ffff78bb47c, L0x7ffff78bb47d, L0x7ffff78bb47e, L0x7ffff78bb47f];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xca2a2050551220a6; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x611f9de382fc7e00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb480; Value = 0xa58bc81becfa87e4; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb480, L0x7ffff78bb481, L0x7ffff78bb482, L0x7ffff78bb483,
           L0x7ffff78bb484, L0x7ffff78bb485, L0x7ffff78bb486, L0x7ffff78bb487,
           L0x7ffff78bb488, L0x7ffff78bb489, L0x7ffff78bb48a, L0x7ffff78bb48b,
           L0x7ffff78bb48c, L0x7ffff78bb48d, L0x7ffff78bb48e, L0x7ffff78bb48f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xb675634019d157cc; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x611f9de382fc7e00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb490; Value = 0x9e4d6498d30f6371; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb490, L0x7ffff78bb491, L0x7ffff78bb492, L0x7ffff78bb493,
           L0x7ffff78bb494, L0x7ffff78bb495, L0x7ffff78bb496, L0x7ffff78bb497,
           L0x7ffff78bb498, L0x7ffff78bb499, L0x7ffff78bb49a, L0x7ffff78bb49b,
           L0x7ffff78bb49c, L0x7ffff78bb49d, L0x7ffff78bb49e, L0x7ffff78bb49f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xef2b58fc4df470d6; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x611f9de382fc7e00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb4a0; Value = 0xee1efd8dda6603c2; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb4a0, L0x7ffff78bb4a1, L0x7ffff78bb4a2, L0x7ffff78bb4a3,
           L0x7ffff78bb4a4, L0x7ffff78bb4a5, L0x7ffff78bb4a6, L0x7ffff78bb4a7,
           L0x7ffff78bb4a8, L0x7ffff78bb4a9, L0x7ffff78bb4aa, L0x7ffff78bb4ab,
           L0x7ffff78bb4ac, L0x7ffff78bb4ad, L0x7ffff78bb4ae, L0x7ffff78bb4af];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x7df0554b509a989f; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x611f9de382fc7e00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb4b0; Value = 0xeb5faf5dd9d48584; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb4b0,L0x7ffff78bb4b1,L0x7ffff78bb4b2,L0x7ffff78bb4b3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb4b0; Value = 0xeb5faf5dd9d48584; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb4b0,L0x7ffff78bb4b1,L0x7ffff78bb4b2,L0x7ffff78bb4b3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000d9d48584; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x611f9de382fc7e00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x72db3b92e049a900; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000e9a1bdde; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc830; Value = 0xfbdeb1946f4a2500; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc830, L0x7fffffffc831, L0x7fffffffc832, L0x7fffffffc833,
           L0x7fffffffc834, L0x7fffffffc835, L0x7fffffffc836, L0x7fffffffc837,
           L0x7fffffffc838, L0x7fffffffc839, L0x7fffffffc83a, L0x7fffffffc83b,
           L0x7fffffffc83c, L0x7fffffffc83d, L0x7fffffffc83e, L0x7fffffffc83f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc840; Value = 0x294fe583aacc6600; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc840, L0x7fffffffc841, L0x7fffffffc842, L0x7fffffffc843,
           L0x7fffffffc844, L0x7fffffffc845, L0x7fffffffc846, L0x7fffffffc847,
           L0x7fffffffc848, L0x7fffffffc849, L0x7fffffffc84a, L0x7fffffffc84b,
           L0x7fffffffc84c, L0x7fffffffc84d, L0x7fffffffc84e, L0x7fffffffc84f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb4b4; Value = 0xe62a44d2eb5faf5d; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb4b4, L0x7ffff78bb4b5, L0x7ffff78bb4b6, L0x7ffff78bb4b7,
           L0x7ffff78bb4b8, L0x7ffff78bb4b9, L0x7ffff78bb4ba, L0x7ffff78bb4bb,
           L0x7ffff78bb4bc, L0x7ffff78bb4bd, L0x7ffff78bb4be, L0x7ffff78bb4bf,
           L0x7ffff78bb4c0, L0x7ffff78bb4c1, L0x7ffff78bb4c2, L0x7ffff78bb4c3];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x07cc919597c39d57; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb4c4; Value = 0x4a5bc88096ebeaa3; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb4c4, L0x7ffff78bb4c5, L0x7ffff78bb4c6, L0x7ffff78bb4c7,
           L0x7ffff78bb4c8, L0x7ffff78bb4c9, L0x7ffff78bb4ca, L0x7ffff78bb4cb,
           L0x7ffff78bb4cc, L0x7ffff78bb4cd, L0x7ffff78bb4ce, L0x7ffff78bb4cf,
           L0x7ffff78bb4d0, L0x7ffff78bb4d1, L0x7ffff78bb4d2, L0x7ffff78bb4d3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xac7762e1761bf89c; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb4d4; Value = 0x8f713f6e1ada04b8; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb4d4, L0x7ffff78bb4d5, L0x7ffff78bb4d6, L0x7ffff78bb4d7,
           L0x7ffff78bb4d8, L0x7ffff78bb4d9, L0x7ffff78bb4da, L0x7ffff78bb4db,
           L0x7ffff78bb4dc, L0x7ffff78bb4dd, L0x7ffff78bb4de, L0x7ffff78bb4df,
           L0x7ffff78bb4e0, L0x7ffff78bb4e1, L0x7ffff78bb4e2, L0x7ffff78bb4e3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xa8ccd560edb98f1e; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb4e4; Value = 0x953375c9c43a6c1e; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb4e4, L0x7ffff78bb4e5, L0x7ffff78bb4e6, L0x7ffff78bb4e7,
           L0x7ffff78bb4e8, L0x7ffff78bb4e9, L0x7ffff78bb4ea, L0x7ffff78bb4eb,
           L0x7ffff78bb4ec, L0x7ffff78bb4ed, L0x7ffff78bb4ee, L0x7ffff78bb4ef,
           L0x7ffff78bb4f0, L0x7ffff78bb4f1, L0x7ffff78bb4f2, L0x7ffff78bb4f3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x5b6aed92665e78e8; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb4f4; Value = 0x25feef156c7c2d0f; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb4f4,L0x7ffff78bb4f5,L0x7ffff78bb4f6,L0x7ffff78bb4f7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb4f4; Value = 0x25feef156c7c2d0f; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb4f4,L0x7ffff78bb4f5,L0x7ffff78bb4f6,L0x7ffff78bb4f7,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000006c7c2d0f; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x294fe583aacc6600; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xfbdeb1946f4a2500; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000003f735b91; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc850; Value = 0xe3ab733bd8904800; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc850, L0x7fffffffc851, L0x7fffffffc852, L0x7fffffffc853,
           L0x7fffffffc854, L0x7fffffffc855, L0x7fffffffc856, L0x7fffffffc857,
           L0x7fffffffc858, L0x7fffffffc859, L0x7fffffffc85a, L0x7fffffffc85b,
           L0x7fffffffc85c, L0x7fffffffc85d, L0x7fffffffc85e, L0x7fffffffc85f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc860; Value = 0xb25e719d2fc3ec00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc860, L0x7fffffffc861, L0x7fffffffc862, L0x7fffffffc863,
           L0x7fffffffc864, L0x7fffffffc865, L0x7fffffffc866, L0x7fffffffc867,
           L0x7fffffffc868, L0x7fffffffc869, L0x7fffffffc86a, L0x7fffffffc86b,
           L0x7fffffffc86c, L0x7fffffffc86d, L0x7fffffffc86e, L0x7fffffffc86f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb4f8; Value = 0x0940c7fa25feef15; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb4f8, L0x7ffff78bb4f9, L0x7ffff78bb4fa, L0x7ffff78bb4fb,
           L0x7ffff78bb4fc, L0x7ffff78bb4fd, L0x7ffff78bb4fe, L0x7ffff78bb4ff,
           L0x7ffff78bb500, L0x7ffff78bb501, L0x7ffff78bb502, L0x7ffff78bb503,
           L0x7ffff78bb504, L0x7ffff78bb505, L0x7ffff78bb506, L0x7ffff78bb507];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x8b79862799ee8430; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb25e719d2fc3ec00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb508; Value = 0x37d1161fb6af64f0; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb508, L0x7ffff78bb509, L0x7ffff78bb50a, L0x7ffff78bb50b,
           L0x7ffff78bb50c, L0x7ffff78bb50d, L0x7ffff78bb50e, L0x7ffff78bb50f,
           L0x7ffff78bb510, L0x7ffff78bb511, L0x7ffff78bb512, L0x7ffff78bb513,
           L0x7ffff78bb514, L0x7ffff78bb515, L0x7ffff78bb516, L0x7ffff78bb517];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x56cecffcd315d322; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb25e719d2fc3ec00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb518; Value = 0x5efff773f22252ae; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb518, L0x7ffff78bb519, L0x7ffff78bb51a, L0x7ffff78bb51b,
           L0x7ffff78bb51c, L0x7ffff78bb51d, L0x7ffff78bb51e, L0x7ffff78bb51f,
           L0x7ffff78bb520, L0x7ffff78bb521, L0x7ffff78bb522, L0x7ffff78bb523,
           L0x7ffff78bb524, L0x7ffff78bb525, L0x7ffff78bb526, L0x7ffff78bb527];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x7dc0b7c2f2381b9a; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb25e719d2fc3ec00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb528; Value = 0x4f88bbb749ea7a19; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb528, L0x7ffff78bb529, L0x7ffff78bb52a, L0x7ffff78bb52b,
           L0x7ffff78bb52c, L0x7ffff78bb52d, L0x7ffff78bb52e, L0x7ffff78bb52f,
           L0x7ffff78bb530, L0x7ffff78bb531, L0x7ffff78bb532, L0x7ffff78bb533,
           L0x7ffff78bb534, L0x7ffff78bb535, L0x7ffff78bb536, L0x7ffff78bb537];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x91af751a6c8d9063; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb25e719d2fc3ec00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb538; Value = 0xc990af47d6d58ecb; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb538,L0x7ffff78bb539,L0x7ffff78bb53a,L0x7ffff78bb53b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb538; Value = 0xc990af47d6d58ecb; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb538,L0x7ffff78bb539,L0x7ffff78bb53a,L0x7ffff78bb53b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000d6d58ecb; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb25e719d2fc3ec00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xe3ab733bd8904800; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000d7fd1559; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc870; Value = 0x22fe815d7fa3dc00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc870, L0x7fffffffc871, L0x7fffffffc872, L0x7fffffffc873,
           L0x7fffffffc874, L0x7fffffffc875, L0x7fffffffc876, L0x7fffffffc877,
           L0x7fffffffc878, L0x7fffffffc879, L0x7fffffffc87a, L0x7fffffffc87b,
           L0x7fffffffc87c, L0x7fffffffc87d, L0x7fffffffc87e, L0x7fffffffc87f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc880; Value = 0x1679c8a7b1de6f00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc880, L0x7fffffffc881, L0x7fffffffc882, L0x7fffffffc883,
           L0x7fffffffc884, L0x7fffffffc885, L0x7fffffffc886, L0x7fffffffc887,
           L0x7fffffffc888, L0x7fffffffc889, L0x7fffffffc88a, L0x7fffffffc88b,
           L0x7fffffffc88c, L0x7fffffffc88d, L0x7fffffffc88e, L0x7fffffffc88f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb53c; Value = 0x8c0783b7c990af47; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb53c, L0x7ffff78bb53d, L0x7ffff78bb53e, L0x7ffff78bb53f,
           L0x7ffff78bb540, L0x7ffff78bb541, L0x7ffff78bb542, L0x7ffff78bb543,
           L0x7ffff78bb544, L0x7ffff78bb545, L0x7ffff78bb546, L0x7ffff78bb547,
           L0x7ffff78bb548, L0x7ffff78bb549, L0x7ffff78bb54a, L0x7ffff78bb54b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xb5e4d95229a06eaf; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1679c8a7b1de6f00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb54c; Value = 0xf978e142e5ddfbf4; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb54c, L0x7ffff78bb54d, L0x7ffff78bb54e, L0x7ffff78bb54f,
           L0x7ffff78bb550, L0x7ffff78bb551, L0x7ffff78bb552, L0x7ffff78bb553,
           L0x7ffff78bb554, L0x7ffff78bb555, L0x7ffff78bb556, L0x7ffff78bb557,
           L0x7ffff78bb558, L0x7ffff78bb559, L0x7ffff78bb55a, L0x7ffff78bb55b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x9ad688857662b6b1; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1679c8a7b1de6f00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb55c; Value = 0x5de9ecae43a2c0f7; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb55c, L0x7ffff78bb55d, L0x7ffff78bb55e, L0x7ffff78bb55f,
           L0x7ffff78bb560, L0x7ffff78bb561, L0x7ffff78bb562, L0x7ffff78bb563,
           L0x7ffff78bb564, L0x7ffff78bb565, L0x7ffff78bb566, L0x7ffff78bb567,
           L0x7ffff78bb568, L0x7ffff78bb569, L0x7ffff78bb56a, L0x7ffff78bb56b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xd1c6c7a8f16bfaa5; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1679c8a7b1de6f00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb56c; Value = 0xcdef01e1e3ff3c13; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb56c, L0x7ffff78bb56d, L0x7ffff78bb56e, L0x7ffff78bb56f,
           L0x7ffff78bb570, L0x7ffff78bb571, L0x7ffff78bb572, L0x7ffff78bb573,
           L0x7ffff78bb574, L0x7ffff78bb575, L0x7ffff78bb576, L0x7ffff78bb577,
           L0x7ffff78bb578, L0x7ffff78bb579, L0x7ffff78bb57a, L0x7ffff78bb57b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x99f8d5f7cf14c4b1; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1679c8a7b1de6f00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb57c; Value = 0xd0ba7459caaedae0; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb57c,L0x7ffff78bb57d,L0x7ffff78bb57e,L0x7ffff78bb57f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb57c; Value = 0xd0ba7459caaedae0; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb57c,L0x7ffff78bb57d,L0x7ffff78bb57e,L0x7ffff78bb57f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000caaedae0; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1679c8a7b1de6f00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x22fe815d7fa3dc00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000002cdee94b; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc890; Value = 0x93cb237be8b05800; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc890, L0x7fffffffc891, L0x7fffffffc892, L0x7fffffffc893,
           L0x7fffffffc894, L0x7fffffffc895, L0x7fffffffc896, L0x7fffffffc897,
           L0x7fffffffc898, L0x7fffffffc899, L0x7fffffffc89a, L0x7fffffffc89b,
           L0x7fffffffc89c, L0x7fffffffc89d, L0x7fffffffc89e, L0x7fffffffc89f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8a0; Value = 0xf30406f102f5f700; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8a0, L0x7fffffffc8a1, L0x7fffffffc8a2, L0x7fffffffc8a3,
           L0x7fffffffc8a4, L0x7fffffffc8a5, L0x7fffffffc8a6, L0x7fffffffc8a7,
           L0x7fffffffc8a8, L0x7fffffffc8a9, L0x7fffffffc8aa, L0x7fffffffc8ab,
           L0x7fffffffc8ac, L0x7fffffffc8ad, L0x7fffffffc8ae, L0x7fffffffc8af];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb580; Value = 0x1b356d52d0ba7459; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb580, L0x7ffff78bb581, L0x7ffff78bb582, L0x7ffff78bb583,
           L0x7ffff78bb584, L0x7ffff78bb585, L0x7ffff78bb586, L0x7ffff78bb587,
           L0x7ffff78bb588, L0x7ffff78bb589, L0x7ffff78bb58a, L0x7ffff78bb58b,
           L0x7ffff78bb58c, L0x7ffff78bb58d, L0x7ffff78bb58e, L0x7ffff78bb58f];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x07c6f394bd9a7d2a; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf30406f102f5f700; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb590; Value = 0x2e76dbce2a4f3c79; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb590, L0x7ffff78bb591, L0x7ffff78bb592, L0x7ffff78bb593,
           L0x7ffff78bb594, L0x7ffff78bb595, L0x7ffff78bb596, L0x7ffff78bb597,
           L0x7ffff78bb598, L0x7ffff78bb599, L0x7ffff78bb59a, L0x7ffff78bb59b,
           L0x7ffff78bb59c, L0x7ffff78bb59d, L0x7ffff78bb59e, L0x7ffff78bb59f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xbf7a7881dbc430af; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf30406f102f5f700; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb5a0; Value = 0xdd0d074e504d309b; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb5a0, L0x7ffff78bb5a1, L0x7ffff78bb5a2, L0x7ffff78bb5a3,
           L0x7ffff78bb5a4, L0x7ffff78bb5a5, L0x7ffff78bb5a6, L0x7ffff78bb5a7,
           L0x7ffff78bb5a8, L0x7ffff78bb5a9, L0x7ffff78bb5aa, L0x7ffff78bb5ab,
           L0x7ffff78bb5ac, L0x7ffff78bb5ad, L0x7ffff78bb5ae, L0x7ffff78bb5af];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x228c0c67294308c4; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf30406f102f5f700; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb5b0; Value = 0xf37dc5a5ad920469; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb5b0, L0x7ffff78bb5b1, L0x7ffff78bb5b2, L0x7ffff78bb5b3,
           L0x7ffff78bb5b4, L0x7ffff78bb5b5, L0x7ffff78bb5b6, L0x7ffff78bb5b7,
           L0x7ffff78bb5b8, L0x7ffff78bb5b9, L0x7ffff78bb5ba, L0x7ffff78bb5bb,
           L0x7ffff78bb5bc, L0x7ffff78bb5bd, L0x7ffff78bb5be, L0x7ffff78bb5bf];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x504c09079ccf92a1; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf30406f102f5f700; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb5c0; Value = 0xd0a98bc16e4c80a7; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb5c0,L0x7ffff78bb5c1,L0x7ffff78bb5c2,L0x7ffff78bb5c3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb5c0; Value = 0xd0a98bc16e4c80a7; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb5c0,L0x7ffff78bb5c1,L0x7ffff78bb5c2,L0x7ffff78bb5c3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000006e4c80a7; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf30406f102f5f700; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x93cb237be8b05800; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000c7116d67; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8b0; Value = 0x4ded16b6fb5ba000; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8b0, L0x7fffffffc8b1, L0x7fffffffc8b2, L0x7fffffffc8b3,
           L0x7fffffffc8b4, L0x7fffffffc8b5, L0x7fffffffc8b6, L0x7fffffffc8b7,
           L0x7fffffffc8b8, L0x7fffffffc8b9, L0x7fffffffc8ba, L0x7fffffffc8bb,
           L0x7fffffffc8bc, L0x7fffffffc8bd, L0x7fffffffc8be, L0x7fffffffc8bf];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8c0; Value = 0xbc527b9529c7ee00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8c0, L0x7fffffffc8c1, L0x7fffffffc8c2, L0x7fffffffc8c3,
           L0x7fffffffc8c4, L0x7fffffffc8c5, L0x7fffffffc8c6, L0x7fffffffc8c7,
           L0x7fffffffc8c8, L0x7fffffffc8c9, L0x7fffffffc8ca, L0x7fffffffc8cb,
           L0x7fffffffc8cc, L0x7fffffffc8cd, L0x7fffffffc8ce, L0x7fffffffc8cf];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb5c4; Value = 0x928dab4ed0a98bc1; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb5c4, L0x7ffff78bb5c5, L0x7ffff78bb5c6, L0x7ffff78bb5c7,
           L0x7ffff78bb5c8, L0x7ffff78bb5c9, L0x7ffff78bb5ca, L0x7ffff78bb5cb,
           L0x7ffff78bb5cc, L0x7ffff78bb5cd, L0x7ffff78bb5ce, L0x7ffff78bb5cf,
           L0x7ffff78bb5d0, L0x7ffff78bb5d1, L0x7ffff78bb5d2, L0x7ffff78bb5d3];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xeee722224227f582; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xbc527b9529c7ee00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb5d4; Value = 0x30fe35263e36e6ae; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb5d4, L0x7ffff78bb5d5, L0x7ffff78bb5d6, L0x7ffff78bb5d7,
           L0x7ffff78bb5d8, L0x7ffff78bb5d9, L0x7ffff78bb5da, L0x7ffff78bb5db,
           L0x7ffff78bb5dc, L0x7ffff78bb5dd, L0x7ffff78bb5de, L0x7ffff78bb5df,
           L0x7ffff78bb5e0, L0x7ffff78bb5e1, L0x7ffff78bb5e2, L0x7ffff78bb5e3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x774299b46850bff2; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xbc527b9529c7ee00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb5e4; Value = 0x6340fd08493b206c; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb5e4, L0x7ffff78bb5e5, L0x7ffff78bb5e6, L0x7ffff78bb5e7,
           L0x7ffff78bb5e8, L0x7ffff78bb5e9, L0x7ffff78bb5ea, L0x7ffff78bb5eb,
           L0x7ffff78bb5ec, L0x7ffff78bb5ed, L0x7ffff78bb5ee, L0x7ffff78bb5ef,
           L0x7ffff78bb5f0, L0x7ffff78bb5f1, L0x7ffff78bb5f2, L0x7ffff78bb5f3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x08599fab2f670ad4; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xbc527b9529c7ee00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb5f4; Value = 0x324100de6f2b0527; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb5f4, L0x7ffff78bb5f5, L0x7ffff78bb5f6, L0x7ffff78bb5f7,
           L0x7ffff78bb5f8, L0x7ffff78bb5f9, L0x7ffff78bb5fa, L0x7ffff78bb5fb,
           L0x7ffff78bb5fc, L0x7ffff78bb5fd, L0x7ffff78bb5fe, L0x7ffff78bb5ff,
           L0x7ffff78bb600, L0x7ffff78bb601, L0x7ffff78bb602, L0x7ffff78bb603];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xb26a22284571e90b; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xbc527b9529c7ee00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb604; Value = 0x5b97885f5d9a0041; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb604,L0x7ffff78bb605,L0x7ffff78bb606,L0x7ffff78bb607,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb604; Value = 0x5b97885f5d9a0041; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb604,L0x7ffff78bb605,L0x7ffff78bb606,L0x7ffff78bb607,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000005d9a0041; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xbc527b9529c7ee00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x4ded16b6fb5ba000; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000fe6d94f8; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8d0; Value = 0x7e6c5a4836241200; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8d0, L0x7fffffffc8d1, L0x7fffffffc8d2, L0x7fffffffc8d3,
           L0x7fffffffc8d4, L0x7fffffffc8d5, L0x7fffffffc8d6, L0x7fffffffc8d7,
           L0x7fffffffc8d8, L0x7fffffffc8d9, L0x7fffffffc8da, L0x7fffffffc8db,
           L0x7fffffffc8dc, L0x7fffffffc8dd, L0x7fffffffc8de, L0x7fffffffc8df];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8e0; Value = 0xa19ad7ec4d763b00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8e0, L0x7fffffffc8e1, L0x7fffffffc8e2, L0x7fffffffc8e3,
           L0x7fffffffc8e4, L0x7fffffffc8e5, L0x7fffffffc8e6, L0x7fffffffc8e7,
           L0x7fffffffc8e8, L0x7fffffffc8e9, L0x7fffffffc8ea, L0x7fffffffc8eb,
           L0x7fffffffc8ec, L0x7fffffffc8ed, L0x7fffffffc8ee, L0x7fffffffc8ef];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb608; Value = 0xbdbef58a5b97885f; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb608, L0x7ffff78bb609, L0x7ffff78bb60a, L0x7ffff78bb60b,
           L0x7ffff78bb60c, L0x7ffff78bb60d, L0x7ffff78bb60e, L0x7ffff78bb60f,
           L0x7ffff78bb610, L0x7ffff78bb611, L0x7ffff78bb612, L0x7ffff78bb613,
           L0x7ffff78bb614, L0x7ffff78bb615, L0x7ffff78bb616, L0x7ffff78bb617];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x6ab7582d08064886; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xa19ad7ec4d763b00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb618; Value = 0xe0edc9434469e83b; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb618, L0x7ffff78bb619, L0x7ffff78bb61a, L0x7ffff78bb61b,
           L0x7ffff78bb61c, L0x7ffff78bb61d, L0x7ffff78bb61e, L0x7ffff78bb61f,
           L0x7ffff78bb620, L0x7ffff78bb621, L0x7ffff78bb622, L0x7ffff78bb623,
           L0x7ffff78bb624, L0x7ffff78bb625, L0x7ffff78bb626, L0x7ffff78bb627];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x5e55a69edb94319e; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xa19ad7ec4d763b00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb628; Value = 0xe217a688ad7acb71; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb628, L0x7ffff78bb629, L0x7ffff78bb62a, L0x7ffff78bb62b,
           L0x7ffff78bb62c, L0x7ffff78bb62d, L0x7ffff78bb62e, L0x7ffff78bb62f,
           L0x7ffff78bb630, L0x7ffff78bb631, L0x7ffff78bb632, L0x7ffff78bb633,
           L0x7ffff78bb634, L0x7ffff78bb635, L0x7ffff78bb636, L0x7ffff78bb637];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xa1cc73dc6dc2cd47; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xa19ad7ec4d763b00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb638; Value = 0xab0c4ed4fcbd7f40; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb638, L0x7ffff78bb639, L0x7ffff78bb63a, L0x7ffff78bb63b,
           L0x7ffff78bb63c, L0x7ffff78bb63d, L0x7ffff78bb63e, L0x7ffff78bb63f,
           L0x7ffff78bb640, L0x7ffff78bb641, L0x7ffff78bb642, L0x7ffff78bb643,
           L0x7ffff78bb644, L0x7ffff78bb645, L0x7ffff78bb646, L0x7ffff78bb647];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xc05f22f82d3aff81; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xa19ad7ec4d763b00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb648; Value = 0x2af5303927f253aa; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb648,L0x7ffff78bb649,L0x7ffff78bb64a,L0x7ffff78bb64b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb648; Value = 0x2af5303927f253aa; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb648,L0x7ffff78bb649,L0x7ffff78bb64a,L0x7ffff78bb64b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000027f253aa; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xa19ad7ec4d763b00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x7e6c5a4836241200; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000e49e94cd; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8f0; Value = 0x25f884597ca1dd00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8f0, L0x7fffffffc8f1, L0x7fffffffc8f2, L0x7fffffffc8f3,
           L0x7fffffffc8f4, L0x7fffffffc8f5, L0x7fffffffc8f6, L0x7fffffffc8f7,
           L0x7fffffffc8f8, L0x7fffffffc8f9, L0x7fffffffc8fa, L0x7fffffffc8fb,
           L0x7fffffffc8fc, L0x7fffffffc8fd, L0x7fffffffc8fe, L0x7fffffffc8ff];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc900; Value = 0x661998e781fe7f00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc900, L0x7fffffffc901, L0x7fffffffc902, L0x7fffffffc903,
           L0x7fffffffc904, L0x7fffffffc905, L0x7fffffffc906, L0x7fffffffc907,
           L0x7fffffffc908, L0x7fffffffc909, L0x7fffffffc90a, L0x7fffffffc90b,
           L0x7fffffffc90c, L0x7fffffffc90d, L0x7fffffffc90e, L0x7fffffffc90f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb64c; Value = 0xd4be1c612af53039; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb64c, L0x7ffff78bb64d, L0x7ffff78bb64e, L0x7ffff78bb64f,
           L0x7ffff78bb650, L0x7ffff78bb651, L0x7ffff78bb652, L0x7ffff78bb653,
           L0x7ffff78bb654, L0x7ffff78bb655, L0x7ffff78bb656, L0x7ffff78bb657,
           L0x7ffff78bb658, L0x7ffff78bb659, L0x7ffff78bb65a, L0x7ffff78bb65b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x2ec5605a79801bbf; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb65c; Value = 0x5e70d3232a682eb0; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb65c, L0x7ffff78bb65d, L0x7ffff78bb65e, L0x7ffff78bb65f,
           L0x7ffff78bb660, L0x7ffff78bb661, L0x7ffff78bb662, L0x7ffff78bb663,
           L0x7ffff78bb664, L0x7ffff78bb665, L0x7ffff78bb666, L0x7ffff78bb667,
           L0x7ffff78bb668, L0x7ffff78bb669, L0x7ffff78bb66a, L0x7ffff78bb66b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x07c60b447f8cf875; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb66c; Value = 0x5e0e413a9c109a5c; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb66c, L0x7ffff78bb66d, L0x7ffff78bb66e, L0x7ffff78bb66f,
           L0x7ffff78bb670, L0x7ffff78bb671, L0x7ffff78bb672, L0x7ffff78bb673,
           L0x7ffff78bb674, L0x7ffff78bb675, L0x7ffff78bb676, L0x7ffff78bb677,
           L0x7ffff78bb678, L0x7ffff78bb679, L0x7ffff78bb67a, L0x7ffff78bb67b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xdc89aa8f12d744f4; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb67c; Value = 0x907e3fa901d7cacf; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb67c, L0x7ffff78bb67d, L0x7ffff78bb67e, L0x7ffff78bb67f,
           L0x7ffff78bb680, L0x7ffff78bb681, L0x7ffff78bb682, L0x7ffff78bb683,
           L0x7ffff78bb684, L0x7ffff78bb685, L0x7ffff78bb686, L0x7ffff78bb687,
           L0x7ffff78bb688, L0x7ffff78bb689, L0x7ffff78bb68a, L0x7ffff78bb68b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xd38732a4977eb06d; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb68c; Value = 0xe12b659c4d048b8e; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb68c,L0x7ffff78bb68d,L0x7ffff78bb68e,L0x7ffff78bb68f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb68c; Value = 0xe12b659c4d048b8e; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb68c,L0x7ffff78bb68d,L0x7ffff78bb68e,L0x7ffff78bb68f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000004d048b8e; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x25f884597ca1dd00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000ecd875cc; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc910; Value = 0x90a0f0c050603000; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc910, L0x7fffffffc911, L0x7fffffffc912, L0x7fffffffc913,
           L0x7fffffffc914, L0x7fffffffc915, L0x7fffffffc916, L0x7fffffffc917,
           L0x7fffffffc918, L0x7fffffffc919, L0x7fffffffc91a, L0x7fffffffc91b,
           L0x7fffffffc91c, L0x7fffffffc91d, L0x7fffffffc91e, L0x7fffffffc91f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc920; Value = 0xc3ee99b4775a2d00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc920, L0x7fffffffc921, L0x7fffffffc922, L0x7fffffffc923,
           L0x7fffffffc924, L0x7fffffffc925, L0x7fffffffc926, L0x7fffffffc927,
           L0x7fffffffc928, L0x7fffffffc929, L0x7fffffffc92a, L0x7fffffffc92b,
           L0x7fffffffc92c, L0x7fffffffc92d, L0x7fffffffc92e, L0x7fffffffc92f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb690; Value = 0xa8348a90e12b659c; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb690, L0x7ffff78bb691, L0x7ffff78bb692, L0x7ffff78bb693,
           L0x7ffff78bb694, L0x7ffff78bb695, L0x7ffff78bb696, L0x7ffff78bb697,
           L0x7ffff78bb698, L0x7ffff78bb699, L0x7ffff78bb69a, L0x7ffff78bb69b,
           L0x7ffff78bb69c, L0x7ffff78bb69d, L0x7ffff78bb69e, L0x7ffff78bb69f];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x3adbf49e94b79a51; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc3ee99b4775a2d00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb6a0; Value = 0x085878ea8194e8d2; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb6a0, L0x7ffff78bb6a1, L0x7ffff78bb6a2, L0x7ffff78bb6a3,
           L0x7ffff78bb6a4, L0x7ffff78bb6a5, L0x7ffff78bb6a6, L0x7ffff78bb6a7,
           L0x7ffff78bb6a8, L0x7ffff78bb6a9, L0x7ffff78bb6aa, L0x7ffff78bb6ab,
           L0x7ffff78bb6ac, L0x7ffff78bb6ad, L0x7ffff78bb6ae, L0x7ffff78bb6af];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xd5a03ac692274c21; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc3ee99b4775a2d00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb6b0; Value = 0x1a8c74ffb69a2802; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb6b0, L0x7ffff78bb6b1, L0x7ffff78bb6b2, L0x7ffff78bb6b3,
           L0x7ffff78bb6b4, L0x7ffff78bb6b5, L0x7ffff78bb6b6, L0x7ffff78bb6b7,
           L0x7ffff78bb6b8, L0x7ffff78bb6b9, L0x7ffff78bb6ba, L0x7ffff78bb6bb,
           L0x7ffff78bb6bc, L0x7ffff78bb6bd, L0x7ffff78bb6be, L0x7ffff78bb6bf];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x0ec3901d53a8fd87; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc3ee99b4775a2d00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb6c0; Value = 0x04b38161d3ce55ce; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb6c0, L0x7ffff78bb6c1, L0x7ffff78bb6c2, L0x7ffff78bb6c3,
           L0x7ffff78bb6c4, L0x7ffff78bb6c5, L0x7ffff78bb6c6, L0x7ffff78bb6c7,
           L0x7ffff78bb6c8, L0x7ffff78bb6c9, L0x7ffff78bb6ca, L0x7ffff78bb6cb,
           L0x7ffff78bb6cc, L0x7ffff78bb6cd, L0x7ffff78bb6ce, L0x7ffff78bb6cf];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x79ab24e04a1691c8; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc3ee99b4775a2d00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb6d0; Value = 0x49969f6eca7273de; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb6d0,L0x7ffff78bb6d1,L0x7ffff78bb6d2,L0x7ffff78bb6d3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb6d0; Value = 0x49969f6eca7273de; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb6d0,L0x7ffff78bb6d1,L0x7ffff78bb6d2,L0x7ffff78bb6d3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000ca7273de; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc3ee99b4775a2d00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x90a0f0c050603000; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000003d816e53; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc930; Value = 0x363c22281e140a00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc930, L0x7fffffffc931, L0x7fffffffc932, L0x7fffffffc933,
           L0x7fffffffc934, L0x7fffffffc935, L0x7fffffffc936, L0x7fffffffc937,
           L0x7fffffffc938, L0x7fffffffc939, L0x7fffffffc93a, L0x7fffffffc93b,
           L0x7fffffffc93c, L0x7fffffffc93d, L0x7fffffffc93e, L0x7fffffffc93f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc940; Value = 0x4ded16b6fb5ba000; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc940, L0x7fffffffc941, L0x7fffffffc942, L0x7fffffffc943,
           L0x7fffffffc944, L0x7fffffffc945, L0x7fffffffc946, L0x7fffffffc947,
           L0x7fffffffc948, L0x7fffffffc949, L0x7fffffffc94a, L0x7fffffffc94b,
           L0x7fffffffc94c, L0x7fffffffc94d, L0x7fffffffc94e, L0x7fffffffc94f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb6d4; Value = 0x0436139549969f6e; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb6d4, L0x7ffff78bb6d5, L0x7ffff78bb6d6, L0x7ffff78bb6d7,
           L0x7ffff78bb6d8, L0x7ffff78bb6d9, L0x7ffff78bb6da, L0x7ffff78bb6db,
           L0x7ffff78bb6dc, L0x7ffff78bb6dd, L0x7ffff78bb6de, L0x7ffff78bb6df,
           L0x7ffff78bb6e0, L0x7ffff78bb6e1, L0x7ffff78bb6e2, L0x7ffff78bb6e3];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x886c7cc039268454; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4ded16b6fb5ba000; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb6e4; Value = 0x9c10fbf1c91b19f9; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb6e4, L0x7ffff78bb6e5, L0x7ffff78bb6e6, L0x7ffff78bb6e7,
           L0x7ffff78bb6e8, L0x7ffff78bb6e9, L0x7ffff78bb6ea, L0x7ffff78bb6eb,
           L0x7ffff78bb6ec, L0x7ffff78bb6ed, L0x7ffff78bb6ee, L0x7ffff78bb6ef,
           L0x7ffff78bb6f0, L0x7ffff78bb6f1, L0x7ffff78bb6f2, L0x7ffff78bb6f3];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x4ea262a0d1b94aab; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4ded16b6fb5ba000; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb6f4; Value = 0x7df1b172e2f4fb99; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb6f4, L0x7ffff78bb6f5, L0x7ffff78bb6f6, L0x7ffff78bb6f7,
           L0x7ffff78bb6f8, L0x7ffff78bb6f9, L0x7ffff78bb6fa, L0x7ffff78bb6fb,
           L0x7ffff78bb6fc, L0x7ffff78bb6fd, L0x7ffff78bb6fe, L0x7ffff78bb6ff,
           L0x7ffff78bb700, L0x7ffff78bb701, L0x7ffff78bb702, L0x7ffff78bb703];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xd8eb93a6f70d3ce7; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4ded16b6fb5ba000; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb704; Value = 0xcfc52baccffe0ed1; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb704, L0x7ffff78bb705, L0x7ffff78bb706, L0x7ffff78bb707,
           L0x7ffff78bb708, L0x7ffff78bb709, L0x7ffff78bb70a, L0x7ffff78bb70b,
           L0x7ffff78bb70c, L0x7ffff78bb70d, L0x7ffff78bb70e, L0x7ffff78bb70f,
           L0x7ffff78bb710, L0x7ffff78bb711, L0x7ffff78bb712, L0x7ffff78bb713];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xb9ff673ef0eaf834; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4ded16b6fb5ba000; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb714; Value = 0xbc3cefd36862bac7; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb714,L0x7ffff78bb715,L0x7ffff78bb716,L0x7ffff78bb717,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb714; Value = 0xbc3cefd36862bac7; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb714,L0x7ffff78bb715,L0x7ffff78bb716,L0x7ffff78bb717,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000006862bac7; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x4ded16b6fb5ba000; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x363c22281e140a00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000000122fd82; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc950; Value = 0x78bae7255d9fc200; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc950, L0x7fffffffc951, L0x7fffffffc952, L0x7fffffffc953,
           L0x7fffffffc954, L0x7fffffffc955, L0x7fffffffc956, L0x7fffffffc957,
           L0x7fffffffc958, L0x7fffffffc959, L0x7fffffffc95a, L0x7fffffffc95b,
           L0x7fffffffc95c, L0x7fffffffc95d, L0x7fffffffc95e, L0x7fffffffc95f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc960; Value = 0xc155f266a7339400; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc960, L0x7fffffffc961, L0x7fffffffc962, L0x7fffffffc963,
           L0x7fffffffc964, L0x7fffffffc965, L0x7fffffffc966, L0x7fffffffc967,
           L0x7fffffffc968, L0x7fffffffc969, L0x7fffffffc96a, L0x7fffffffc96b,
           L0x7fffffffc96c, L0x7fffffffc96d, L0x7fffffffc96e, L0x7fffffffc96f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb718; Value = 0x835d3ac8bc3cefd3; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb718, L0x7ffff78bb719, L0x7ffff78bb71a, L0x7ffff78bb71b,
           L0x7ffff78bb71c, L0x7ffff78bb71d, L0x7ffff78bb71e, L0x7ffff78bb71f,
           L0x7ffff78bb720, L0x7ffff78bb721, L0x7ffff78bb722, L0x7ffff78bb723,
           L0x7ffff78bb724, L0x7ffff78bb725, L0x7ffff78bb726, L0x7ffff78bb727];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xa0abc235d5cd35d5; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc155f266a7339400; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb728; Value = 0x30de427dedc0bdaf; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb728, L0x7ffff78bb729, L0x7ffff78bb72a, L0x7ffff78bb72b,
           L0x7ffff78bb72c, L0x7ffff78bb72d, L0x7ffff78bb72e, L0x7ffff78bb72f,
           L0x7ffff78bb730, L0x7ffff78bb731, L0x7ffff78bb732, L0x7ffff78bb733,
           L0x7ffff78bb734, L0x7ffff78bb735, L0x7ffff78bb736, L0x7ffff78bb737];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xe10216904a57b0cb; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc155f266a7339400; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb738; Value = 0x2b0432968692faa3; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb738, L0x7ffff78bb739, L0x7ffff78bb73a, L0x7ffff78bb73b,
           L0x7ffff78bb73c, L0x7ffff78bb73d, L0x7ffff78bb73e, L0x7ffff78bb73f,
           L0x7ffff78bb740, L0x7ffff78bb741, L0x7ffff78bb742, L0x7ffff78bb743,
           L0x7ffff78bb744, L0x7ffff78bb745, L0x7ffff78bb746, L0x7ffff78bb747];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xe7db15ff791f486a; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc155f266a7339400; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb748; Value = 0xc2a55f925233257b; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb748, L0x7ffff78bb749, L0x7ffff78bb74a, L0x7ffff78bb74b,
           L0x7ffff78bb74c, L0x7ffff78bb74d, L0x7ffff78bb74e, L0x7ffff78bb74f,
           L0x7ffff78bb750, L0x7ffff78bb751, L0x7ffff78bb752, L0x7ffff78bb753,
           L0x7ffff78bb754, L0x7ffff78bb755, L0x7ffff78bb756, L0x7ffff78bb757];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x1e1c726a57bc945f; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc155f266a7339400; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb758; Value = 0x4e3e0efea5ed22c0; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb758,L0x7ffff78bb759,L0x7ffff78bb75a,L0x7ffff78bb75b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb758; Value = 0x4e3e0efea5ed22c0; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb758,L0x7ffff78bb759,L0x7ffff78bb75a,L0x7ffff78bb75b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000a5ed22c0; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xc155f266a7339400; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x78bae7255d9fc200; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000bcdb3575; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc970; Value = 0x9f7c42a13edde300; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc970, L0x7fffffffc971, L0x7fffffffc972, L0x7fffffffc973,
           L0x7fffffffc974, L0x7fffffffc975, L0x7fffffffc976, L0x7fffffffc977,
           L0x7fffffffc978, L0x7fffffffc979, L0x7fffffffc97a, L0x7fffffffc97b,
           L0x7fffffffc97c, L0x7fffffffc97d, L0x7fffffffc97e, L0x7fffffffc97f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc980; Value = 0x33814cfecd7fb200; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc980, L0x7fffffffc981, L0x7fffffffc982, L0x7fffffffc983,
           L0x7fffffffc984, L0x7fffffffc985, L0x7fffffffc986, L0x7fffffffc987,
           L0x7fffffffc988, L0x7fffffffc989, L0x7fffffffc98a, L0x7fffffffc98b,
           L0x7fffffffc98c, L0x7fffffffc98d, L0x7fffffffc98e, L0x7fffffffc98f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb75c; Value = 0xd0d0854a4e3e0efe; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb75c, L0x7ffff78bb75d, L0x7ffff78bb75e, L0x7ffff78bb75f,
           L0x7ffff78bb760, L0x7ffff78bb761, L0x7ffff78bb762, L0x7ffff78bb763,
           L0x7ffff78bb764, L0x7ffff78bb765, L0x7ffff78bb766, L0x7ffff78bb767,
           L0x7ffff78bb768, L0x7ffff78bb769, L0x7ffff78bb76a, L0x7ffff78bb76b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x31f4b0d5d1059eb6; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x33814cfecd7fb200; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb76c; Value = 0x8156fba9b7f495f3; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb76c, L0x7ffff78bb76d, L0x7ffff78bb76e, L0x7ffff78bb76f,
           L0x7ffff78bb770, L0x7ffff78bb771, L0x7ffff78bb772, L0x7ffff78bb773,
           L0x7ffff78bb774, L0x7ffff78bb775, L0x7ffff78bb776, L0x7ffff78bb777,
           L0x7ffff78bb778, L0x7ffff78bb779, L0x7ffff78bb77a, L0x7ffff78bb77b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x46cceffc7efd7606; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x33814cfecd7fb200; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb77c; Value = 0xee5089ba9930fe64; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb77c, L0x7ffff78bb77d, L0x7ffff78bb77e, L0x7ffff78bb77f,
           L0x7ffff78bb780, L0x7ffff78bb781, L0x7ffff78bb782, L0x7ffff78bb783,
           L0x7ffff78bb784, L0x7ffff78bb785, L0x7ffff78bb786, L0x7ffff78bb787,
           L0x7ffff78bb788, L0x7ffff78bb789, L0x7ffff78bb78a, L0x7ffff78bb78b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xc3fe2d1d0fd890c8; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x33814cfecd7fb200; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb78c; Value = 0x35212e631fc8192d; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb78c, L0x7ffff78bb78d, L0x7ffff78bb78e, L0x7ffff78bb78f,
           L0x7ffff78bb790, L0x7ffff78bb791, L0x7ffff78bb792, L0x7ffff78bb793,
           L0x7ffff78bb794, L0x7ffff78bb795, L0x7ffff78bb796, L0x7ffff78bb797,
           L0x7ffff78bb798, L0x7ffff78bb799, L0x7ffff78bb79a, L0x7ffff78bb79b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x2b04b2ad3a464089; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x33814cfecd7fb200; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb79c; Value = 0x266128e553ce38d1; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb79c,L0x7ffff78bb79d,L0x7ffff78bb79e,L0x7ffff78bb79f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb79c; Value = 0x266128e553ce38d1; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb79c,L0x7ffff78bb79d,L0x7ffff78bb79e,L0x7ffff78bb79f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000053ce38d1; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x33814cfecd7fb200; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x9f7c42a13edde300; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000a4ef99df; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc990; Value = 0xf769d04eb9279e00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc990, L0x7fffffffc991, L0x7fffffffc992, L0x7fffffffc993,
           L0x7fffffffc994, L0x7fffffffc995, L0x7fffffffc996, L0x7fffffffc997,
           L0x7fffffffc998, L0x7fffffffc999, L0x7fffffffc99a, L0x7fffffffc99b,
           L0x7fffffffc99c, L0x7fffffffc99d, L0x7fffffffc99e, L0x7fffffffc99f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc9a0; Value = 0xe9caaf8c65462300; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc9a0, L0x7fffffffc9a1, L0x7fffffffc9a2, L0x7fffffffc9a3,
           L0x7fffffffc9a4, L0x7fffffffc9a5, L0x7fffffffc9a6, L0x7fffffffc9a7,
           L0x7fffffffc9a8, L0x7fffffffc9a9, L0x7fffffffc9aa, L0x7fffffffc9ab,
           L0x7fffffffc9ac, L0x7fffffffc9ad, L0x7fffffffc9ae, L0x7fffffffc9af];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb7a0; Value = 0x97192418266128e5; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb7a0, L0x7ffff78bb7a1, L0x7ffff78bb7a2, L0x7ffff78bb7a3,
           L0x7ffff78bb7a4, L0x7ffff78bb7a5, L0x7ffff78bb7a6, L0x7ffff78bb7a7,
           L0x7ffff78bb7a8, L0x7ffff78bb7a9, L0x7ffff78bb7aa, L0x7ffff78bb7ab,
           L0x7ffff78bb7ac, L0x7ffff78bb7ad, L0x7ffff78bb7ae, L0x7ffff78bb7af];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x9a5f15af0aedbb47; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe9caaf8c65462300; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb7b0; Value = 0x08bca778553fb3b4; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb7b0, L0x7ffff78bb7b1, L0x7ffff78bb7b2, L0x7ffff78bb7b3,
           L0x7ffff78bb7b4, L0x7ffff78bb7b5, L0x7ffff78bb7b6, L0x7ffff78bb7b7,
           L0x7ffff78bb7b8, L0x7ffff78bb7b9, L0x7ffff78bb7ba, L0x7ffff78bb7bb,
           L0x7ffff78bb7bc, L0x7ffff78bb7bd, L0x7ffff78bb7be, L0x7ffff78bb7bf];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x42fc5cdecb8861ec; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe9caaf8c65462300; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb7c0; Value = 0xe1893f37137fe5e0; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb7c0, L0x7ffff78bb7c1, L0x7ffff78bb7c2, L0x7ffff78bb7c3,
           L0x7ffff78bb7c4, L0x7ffff78bb7c5, L0x7ffff78bb7c6, L0x7ffff78bb7c7,
           L0x7ffff78bb7c8, L0x7ffff78bb7c9, L0x7ffff78bb7ca, L0x7ffff78bb7cb,
           L0x7ffff78bb7cc, L0x7ffff78bb7cd, L0x7ffff78bb7ce, L0x7ffff78bb7cf];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x80b270b3e01561e8; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe9caaf8c65462300; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb7d0; Value = 0xc2e5fda3f2c202cc; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb7d0, L0x7ffff78bb7d1, L0x7ffff78bb7d2, L0x7ffff78bb7d3,
           L0x7ffff78bb7d4, L0x7ffff78bb7d5, L0x7ffff78bb7d6, L0x7ffff78bb7d7,
           L0x7ffff78bb7d8, L0x7ffff78bb7d9, L0x7ffff78bb7da, L0x7ffff78bb7db,
           L0x7ffff78bb7dc, L0x7ffff78bb7dd, L0x7ffff78bb7de, L0x7ffff78bb7df];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xa498e8124e0648ed; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe9caaf8c65462300; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb7e0; Value = 0xb71dfa1cc6b51d49; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb7e0,L0x7ffff78bb7e1,L0x7ffff78bb7e2,L0x7ffff78bb7e3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb7e0; Value = 0xb71dfa1cc6b51d49; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb7e0,L0x7ffff78bb7e1,L0x7ffff78bb7e2,L0x7ffff78bb7e3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000c6b51d49; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe9caaf8c65462300; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xf769d04eb9279e00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000d6d30d97; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc9b0; Value = 0x25f884597ca1dd00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc9b0, L0x7fffffffc9b1, L0x7fffffffc9b2, L0x7fffffffc9b3,
           L0x7fffffffc9b4, L0x7fffffffc9b5, L0x7fffffffc9b6, L0x7fffffffc9b7,
           L0x7fffffffc9b8, L0x7fffffffc9b9, L0x7fffffffc9ba, L0x7fffffffc9bb,
           L0x7fffffffc9bc, L0x7fffffffc9bd, L0x7fffffffc9be, L0x7fffffffc9bf];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc9c0; Value = 0x661998e781fe7f00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc9c0, L0x7fffffffc9c1, L0x7fffffffc9c2, L0x7fffffffc9c3,
           L0x7fffffffc9c4, L0x7fffffffc9c5, L0x7fffffffc9c6, L0x7fffffffc9c7,
           L0x7fffffffc9c8, L0x7fffffffc9c9, L0x7fffffffc9ca, L0x7fffffffc9cb,
           L0x7fffffffc9cc, L0x7fffffffc9cd, L0x7fffffffc9ce, L0x7fffffffc9cf];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb7e4; Value = 0xd11fcffeb71dfa1c; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb7e4, L0x7ffff78bb7e5, L0x7ffff78bb7e6, L0x7ffff78bb7e7,
           L0x7ffff78bb7e8, L0x7ffff78bb7e9, L0x7ffff78bb7ea, L0x7ffff78bb7eb,
           L0x7ffff78bb7ec, L0x7ffff78bb7ed, L0x7ffff78bb7ee, L0x7ffff78bb7ef,
           L0x7ffff78bb7f0, L0x7ffff78bb7f1, L0x7ffff78bb7f2, L0x7ffff78bb7f3];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x4d7e1d1025b9615e; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb7f4; Value = 0xfa94eca036e852df; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb7f4, L0x7ffff78bb7f5, L0x7ffff78bb7f6, L0x7ffff78bb7f7,
           L0x7ffff78bb7f8, L0x7ffff78bb7f9, L0x7ffff78bb7fa, L0x7ffff78bb7fb,
           L0x7ffff78bb7fc, L0x7ffff78bb7fd, L0x7ffff78bb7fe, L0x7ffff78bb7ff,
           L0x7ffff78bb800, L0x7ffff78bb801, L0x7ffff78bb802, L0x7ffff78bb803];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xde48eeabb486bec4; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb804; Value = 0x8cac93b4fea59b53; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb804, L0x7ffff78bb805, L0x7ffff78bb806, L0x7ffff78bb807,
           L0x7ffff78bb808, L0x7ffff78bb809, L0x7ffff78bb80a, L0x7ffff78bb80b,
           L0x7ffff78bb80c, L0x7ffff78bb80d, L0x7ffff78bb80e, L0x7ffff78bb80f,
           L0x7ffff78bb810, L0x7ffff78bb811, L0x7ffff78bb812, L0x7ffff78bb813];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xd7b37e217a977821; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb814; Value = 0xc0e4d7707552b408; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb814, L0x7ffff78bb815, L0x7ffff78bb816, L0x7ffff78bb817,
           L0x7ffff78bb818, L0x7ffff78bb819, L0x7ffff78bb81a, L0x7ffff78bb81b,
           L0x7ffff78bb81c, L0x7ffff78bb81d, L0x7ffff78bb81e, L0x7ffff78bb81f,
           L0x7ffff78bb820, L0x7ffff78bb821, L0x7ffff78bb822, L0x7ffff78bb823];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x0c814eee83ae6fb0; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb824; Value = 0x06ee1c55ff2b1c9c; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb824,L0x7ffff78bb825,L0x7ffff78bb826,L0x7ffff78bb827,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb824; Value = 0x06ee1c55ff2b1c9c; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb824,L0x7ffff78bb825,L0x7ffff78bb826,L0x7ffff78bb827,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000ff2b1c9c; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x661998e781fe7f00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x25f884597ca1dd00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000030656219; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc9d0; Value = 0x62744e583a2c1600; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc9d0, L0x7fffffffc9d1, L0x7fffffffc9d2, L0x7fffffffc9d3,
           L0x7fffffffc9d4, L0x7fffffffc9d5, L0x7fffffffc9d6, L0x7fffffffc9d7,
           L0x7fffffffc9d8, L0x7fffffffc9d9, L0x7fffffffc9da, L0x7fffffffc9db,
           L0x7fffffffc9dc, L0x7fffffffc9dd, L0x7fffffffc9de, L0x7fffffffc9df];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc9e0; Value = 0x7a018cf78df67b00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc9e0, L0x7fffffffc9e1, L0x7fffffffc9e2, L0x7fffffffc9e3,
           L0x7fffffffc9e4, L0x7fffffffc9e5, L0x7fffffffc9e6, L0x7fffffffc9e7,
           L0x7fffffffc9e8, L0x7fffffffc9e9, L0x7fffffffc9ea, L0x7fffffffc9eb,
           L0x7fffffffc9ec, L0x7fffffffc9ed, L0x7fffffffc9ee, L0x7fffffffc9ef];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb828; Value = 0xfc41c06706ee1c55; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb828, L0x7ffff78bb829, L0x7ffff78bb82a, L0x7ffff78bb82b,
           L0x7ffff78bb82c, L0x7ffff78bb82d, L0x7ffff78bb82e, L0x7ffff78bb82f,
           L0x7ffff78bb830, L0x7ffff78bb831, L0x7ffff78bb832, L0x7ffff78bb833,
           L0x7ffff78bb834, L0x7ffff78bb835, L0x7ffff78bb836, L0x7ffff78bb837];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xdd96b8e954f0c1ca; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x7a018cf78df67b00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb838; Value = 0xef34393defdb73bb; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb838, L0x7ffff78bb839, L0x7ffff78bb83a, L0x7ffff78bb83b,
           L0x7ffff78bb83c, L0x7ffff78bb83d, L0x7ffff78bb83e, L0x7ffff78bb83f,
           L0x7ffff78bb840, L0x7ffff78bb841, L0x7ffff78bb842, L0x7ffff78bb843,
           L0x7ffff78bb844, L0x7ffff78bb845, L0x7ffff78bb846, L0x7ffff78bb847];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x7ebbc980cdf8871e; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x7a018cf78df67b00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb848; Value = 0x9537947796b9b43f; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb848, L0x7ffff78bb849, L0x7ffff78bb84a, L0x7ffff78bb84b,
           L0x7ffff78bb84c, L0x7ffff78bb84d, L0x7ffff78bb84e, L0x7ffff78bb84f,
           L0x7ffff78bb850, L0x7ffff78bb851, L0x7ffff78bb852, L0x7ffff78bb853,
           L0x7ffff78bb854, L0x7ffff78bb855, L0x7ffff78bb856, L0x7ffff78bb857];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xe973a82c83381cc5; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x7a018cf78df67b00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb858; Value = 0x2485e83a54433068; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb858, L0x7ffff78bb859, L0x7ffff78bb85a, L0x7ffff78bb85b,
           L0x7ffff78bb85c, L0x7ffff78bb85d, L0x7ffff78bb85e, L0x7ffff78bb85f,
           L0x7ffff78bb860, L0x7ffff78bb861, L0x7ffff78bb862, L0x7ffff78bb863,
           L0x7ffff78bb864, L0x7ffff78bb865, L0x7ffff78bb866, L0x7ffff78bb867];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x3e14268861976202; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x7a018cf78df67b00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb868; Value = 0x1aaf74b71db1f26a; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb868,L0x7ffff78bb869,L0x7ffff78bb86a,L0x7ffff78bb86b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb868; Value = 0x1aaf74b71db1f26a; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb868,L0x7ffff78bb869,L0x7ffff78bb86a,L0x7ffff78bb86b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000001db1f26a; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x7a018cf78df67b00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x62744e583a2c1600; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000001455f658; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc9f0; Value = 0x921b9b1280098900; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc9f0, L0x7fffffffc9f1, L0x7fffffffc9f2, L0x7fffffffc9f3,
           L0x7fffffffc9f4, L0x7fffffffc9f5, L0x7fffffffc9f6, L0x7fffffffc9f7,
           L0x7fffffffc9f8, L0x7fffffffc9f9, L0x7fffffffc9fa, L0x7fffffffc9fb,
           L0x7fffffffc9fc, L0x7fffffffc9fd, L0x7fffffffc9fe, L0x7fffffffc9ff];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffca00; Value = 0xe3ab733bd8904800; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffca00, L0x7fffffffca01, L0x7fffffffca02, L0x7fffffffca03,
           L0x7fffffffca04, L0x7fffffffca05, L0x7fffffffca06, L0x7fffffffca07,
           L0x7fffffffca08, L0x7fffffffca09, L0x7fffffffca0a, L0x7fffffffca0b,
           L0x7fffffffca0c, L0x7fffffffca0d, L0x7fffffffca0e, L0x7fffffffca0f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb86c; Value = 0x552cc8161aaf74b7; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb86c, L0x7ffff78bb86d, L0x7ffff78bb86e, L0x7ffff78bb86f,
           L0x7ffff78bb870, L0x7ffff78bb871, L0x7ffff78bb872, L0x7ffff78bb873,
           L0x7ffff78bb874, L0x7ffff78bb875, L0x7ffff78bb876, L0x7ffff78bb877,
           L0x7ffff78bb878, L0x7ffff78bb879, L0x7ffff78bb87a, L0x7ffff78bb87b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xba77ba8a20c05208; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe3ab733bd8904800; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb87c; Value = 0x02e434ee3ee86fe1; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb87c, L0x7ffff78bb87d, L0x7ffff78bb87e, L0x7ffff78bb87f,
           L0x7ffff78bb880, L0x7ffff78bb881, L0x7ffff78bb882, L0x7ffff78bb883,
           L0x7ffff78bb884, L0x7ffff78bb885, L0x7ffff78bb886, L0x7ffff78bb887,
           L0x7ffff78bb888, L0x7ffff78bb889, L0x7ffff78bb88a, L0x7ffff78bb88b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x586ee2f3eb0bc7ec; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe3ab733bd8904800; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb88c; Value = 0x2ccd2a5a313e6e35; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb88c, L0x7ffff78bb88d, L0x7ffff78bb88e, L0x7ffff78bb88f,
           L0x7ffff78bb890, L0x7ffff78bb891, L0x7ffff78bb892, L0x7ffff78bb893,
           L0x7ffff78bb894, L0x7ffff78bb895, L0x7ffff78bb896, L0x7ffff78bb897,
           L0x7ffff78bb898, L0x7ffff78bb899, L0x7ffff78bb89a, L0x7ffff78bb89b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x299c7e3479e63c9a; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe3ab733bd8904800; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb89c; Value = 0xa82e2fa85eb1617c; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb89c, L0x7ffff78bb89d, L0x7ffff78bb89e, L0x7ffff78bb89f,
           L0x7ffff78bb8a0, L0x7ffff78bb8a1, L0x7ffff78bb8a2, L0x7ffff78bb8a3,
           L0x7ffff78bb8a4, L0x7ffff78bb8a5, L0x7ffff78bb8a6, L0x7ffff78bb8a7,
           L0x7ffff78bb8a8, L0x7ffff78bb8a9, L0x7ffff78bb8aa, L0x7ffff78bb8ab];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x90af6299b55aefb3; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe3ab733bd8904800; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb8ac; Value = 0xcf787577a48f71bd; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb8ac,L0x7ffff78bb8ad,L0x7ffff78bb8ae,L0x7ffff78bb8af,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb8ac; Value = 0xcf787577a48f71bd; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb8ac,L0x7ffff78bb8ad,L0x7ffff78bb8ae,L0x7ffff78bb8af,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000a48f71bd; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xe3ab733bd8904800; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x921b9b1280098900; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000913b55c5; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* #! <- SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* #ret                                            #! PC = 0x55555555ac4e *)
#ret                                            #! 0x55555555ac4e = 0x55555555ac4e;
(* mov    %rbx,%rdx                                #! PC = 0x55555555b2e5 *)
mov %rdx %rbx;
(* mov    %r13d,%esi                               #! PC = 0x55555555b2e8 *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r15,%rdi                                #! PC = 0x55555555b2eb *)
mov %rdi %r15;
(* #call   0x5555555571c0 <storeu_xmm>             #! PC = 0x55555555b2ee *)
#call   0x5555555571c0 <storeu_xmm>             #! 0x55555555b2ee = 0x55555555b2ee;
(* #! -> SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* mov    %esi,%eax                                #! PC = 0x5555555571c0 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557241 <storeu_xmm+129>         #! PC = 0x5555555571cd *)
#je     0x555555557241 <storeu_xmm+129>         #! 0x5555555571cd = 0x5555555571cd;
(* movdqa (%rdx),%xmm1                             #! EA = L0x7fffffffc790; Value = 0x52d1d3d94590a334; PC = 0x5555555571cf *)
mov %xmm1 [L0x7fffffffc790, L0x7fffffffc791, L0x7fffffffc792, L0x7fffffffc793,
           L0x7fffffffc794, L0x7fffffffc795, L0x7fffffffc796, L0x7fffffffc797,
           L0x7fffffffc798, L0x7fffffffc799, L0x7fffffffc79a, L0x7fffffffc79b,
           L0x7fffffffc79c, L0x7fffffffc79d, L0x7fffffffc79e, L0x7fffffffc79f];
(* movups %xmm1,(%rdi)                             #! EA = L0x7fffffffcb80; PC = 0x5555555571d3 *)
mov [L0x7fffffffcb80,L0x7fffffffcb81,L0x7fffffffcb82,L0x7fffffffcb83,
     L0x7fffffffcb84,L0x7fffffffcb85,L0x7fffffffcb86,L0x7fffffffcb87,
     L0x7fffffffcb88,L0x7fffffffcb89,L0x7fffffffcb8a,L0x7fffffffcb8b,
     L0x7fffffffcb8c,L0x7fffffffcb8d,L0x7fffffffcb8e,L0x7fffffffcb8f] %xmm1;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571d8 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571d8 = 0x5555555571d8;
(* movdqa 0x10(%rdx),%xmm2                         #! EA = L0x7fffffffc7a0; Value = 0x51a128110cf2dab8; PC = 0x5555555571da *)
mov %xmm2 [L0x7fffffffc7a0, L0x7fffffffc7a1, L0x7fffffffc7a2, L0x7fffffffc7a3,
           L0x7fffffffc7a4, L0x7fffffffc7a5, L0x7fffffffc7a6, L0x7fffffffc7a7,
           L0x7fffffffc7a8, L0x7fffffffc7a9, L0x7fffffffc7aa, L0x7fffffffc7ab,
           L0x7fffffffc7ac, L0x7fffffffc7ad, L0x7fffffffc7ae, L0x7fffffffc7af];
(* movups %xmm2,0x10(%rdi)                         #! EA = L0x7fffffffcb90; PC = 0x5555555571df *)
mov [L0x7fffffffcb90,L0x7fffffffcb91,L0x7fffffffcb92,L0x7fffffffcb93,
     L0x7fffffffcb94,L0x7fffffffcb95,L0x7fffffffcb96,L0x7fffffffcb97,
     L0x7fffffffcb98,L0x7fffffffcb99,L0x7fffffffcb9a,L0x7fffffffcb9b,
     L0x7fffffffcb9c,L0x7fffffffcb9d,L0x7fffffffcb9e,L0x7fffffffcb9f] %xmm2;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571e6 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571e6 = 0x5555555571e6;
(* movdqa 0x20(%rdx),%xmm3                         #! EA = L0x7fffffffc7b0; Value = 0x8f6ec36a2801a8d9; PC = 0x5555555571e8 *)
mov %xmm3 [L0x7fffffffc7b0, L0x7fffffffc7b1, L0x7fffffffc7b2, L0x7fffffffc7b3,
           L0x7fffffffc7b4, L0x7fffffffc7b5, L0x7fffffffc7b6, L0x7fffffffc7b7,
           L0x7fffffffc7b8, L0x7fffffffc7b9, L0x7fffffffc7ba, L0x7fffffffc7bb,
           L0x7fffffffc7bc, L0x7fffffffc7bd, L0x7fffffffc7be, L0x7fffffffc7bf];
(* movups %xmm3,0x20(%rdi)                         #! EA = L0x7fffffffcba0; PC = 0x5555555571ed *)
mov [L0x7fffffffcba0,L0x7fffffffcba1,L0x7fffffffcba2,L0x7fffffffcba3,
     L0x7fffffffcba4,L0x7fffffffcba5,L0x7fffffffcba6,L0x7fffffffcba7,
     L0x7fffffffcba8,L0x7fffffffcba9,L0x7fffffffcbaa,L0x7fffffffcbab,
     L0x7fffffffcbac,L0x7fffffffcbad,L0x7fffffffcbae,L0x7fffffffcbaf] %xmm3;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571f4 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571f4 = 0x5555555571f4;
(* movdqa 0x30(%rdx),%xmm4                         #! EA = L0x7fffffffc7c0; Value = 0x5200445bf97dcd66; PC = 0x5555555571f6 *)
mov %xmm4 [L0x7fffffffc7c0, L0x7fffffffc7c1, L0x7fffffffc7c2, L0x7fffffffc7c3,
           L0x7fffffffc7c4, L0x7fffffffc7c5, L0x7fffffffc7c6, L0x7fffffffc7c7,
           L0x7fffffffc7c8, L0x7fffffffc7c9, L0x7fffffffc7ca, L0x7fffffffc7cb,
           L0x7fffffffc7cc, L0x7fffffffc7cd, L0x7fffffffc7ce, L0x7fffffffc7cf];
(* movups %xmm4,0x30(%rdi)                         #! EA = L0x7fffffffcbb0; PC = 0x5555555571fb *)
mov [L0x7fffffffcbb0,L0x7fffffffcbb1,L0x7fffffffcbb2,L0x7fffffffcbb3,
     L0x7fffffffcbb4,L0x7fffffffcbb5,L0x7fffffffcbb6,L0x7fffffffcbb7,
     L0x7fffffffcbb8,L0x7fffffffcbb9,L0x7fffffffcbba,L0x7fffffffcbbb,
     L0x7fffffffcbbc,L0x7fffffffcbbd,L0x7fffffffcbbe,L0x7fffffffcbbf] %xmm4;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x555555557202 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x555555557202 = 0x555555557202;
(* #jne    0x555555557250 <storeu_xmm+144>         #! PC = 0x555555557243 *)
#jne    0x555555557250 <storeu_xmm+144>         #! 0x555555557243 = 0x555555557243;
(* movdqa (%rdx),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000065fb3fd4; PC = 0x555555557250 *)
mov %xmm0 [L0x7fffffffc7d0, L0x7fffffffc7d1, L0x7fffffffc7d2, L0x7fffffffc7d3,
           L0x7fffffffc7d4, L0x7fffffffc7d5, L0x7fffffffc7d6, L0x7fffffffc7d7,
           L0x7fffffffc7d8, L0x7fffffffc7d9, L0x7fffffffc7da, L0x7fffffffc7db,
           L0x7fffffffc7dc, L0x7fffffffc7dd, L0x7fffffffc7de, L0x7fffffffc7df];
(* #jmp    0x5555555570f0 <_store_xmm>             #! PC = 0x555555557254 *)
#jmp    0x5555555570f0 <_store_xmm>             #! 0x555555557254 = 0x555555557254;
(* mov    %rdx,0x38(%rsp)                          #! EA = L0x7fffffffc738; PC = 0x555555557105 *)
mov [L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
     L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f] %rdx;
(* xor    %edx,%edx                                #! PC = 0x55555555710a *)
mov %rdx [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm0,(%rsp)                             #! EA = L0x7fffffffc700; PC = 0x55555555710c *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm0;
(* #je     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557112 *)
#je     0x555555557160 <_store_xmm+112>         #! 0x555555557112 = 0x555555557112;
(* mov    %rdi,%rax                                #! PC = 0x555555557114 *)
mov %rax %rdi;
(* #jb     0x555555557178 <_store_xmm+136>         #! PC = 0x55555555711d *)
#jb     0x555555557178 <_store_xmm+136>         #! 0x55555555711d = 0x55555555711d;
(* #jne    0x55555555719c <_store_xmm+172>         #! PC = 0x55555555717c *)
#jne    0x55555555719c <_store_xmm+172>         #! 0x55555555717c = 0x55555555717c;
(* mov    (%rsp),%ecx                              #! EA = L0x7fffffffc700; Value = 0x0000000065fb3fd4; PC = 0x55555555719c *)
mov %rcx [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %esi,%esi                                #! PC = 0x55555555719f *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffcbc0; PC = 0x5555555571a1 *)
mov [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,_,_,_,_]
    %rcx;
(* mov    -0x4(%rdx,%rsi,1),%edx                   #! EA = L0x7fffffffc700; Value = 0x0000000065fb3fd4; PC = 0x5555555571a3 *)
mov %rdx [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %edx,-0x4(%rdi,%rsi,1)                   #! EA = L0x7fffffffcbc0; PC = 0x5555555571a7 *)
mov [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,_,_,_,_]
    %rdx;
(* #jmp    0x555555557160 <_store_xmm+112>         #! PC = 0x5555555571ab *)
#jmp    0x555555557160 <_store_xmm+112>         #! 0x5555555571ab = 0x5555555571ab;
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc738; Value = 0x843472637f9f7c00; PC = 0x555555557160 *)
mov %rax [L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
          L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f];
(* #jne    0x5555555571ad <_store_xmm+189>         #! PC = 0x55555555716e *)
#jne    0x5555555571ad <_store_xmm+189>         #! 0x55555555716e = 0x55555555716e;
(* #! <- SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* #ret                                            #! PC = 0x555555557171 *)
#ret                                            #! 0x555555557171 = 0x555555557171;
(* #jne    0x55555555b280 <gf256mat_prod_sse+192>  #! PC = 0x55555555b2f8 *)
#jne    0x55555555b280 <gf256mat_prod_sse+192>  #! 0x55555555b2f8 = 0x55555555b2f8;
(* mov    -0x2c8(%rbp),%eax                        #! EA = L0x7fffffffc788; Value = 0x0000000000000010; PC = 0x55555555b2fa *)
mov %rax [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,%rdx                                #! PC = 0x55555555b307 *)
mov %rdx %rax;
(* #jne    0x55555555b230 <gf256mat_prod_sse+112>  #! PC = 0x55555555b31b *)
#jne    0x55555555b230 <gf256mat_prod_sse+112>  #! 0x55555555b31b = 0x55555555b31b;
(* mov    -0x2e4(%rbp),%eax                        #! EA = L0x7fffffffc76c; Value = 0xffffcb800000000c; PC = 0x55555555b230 *)
mov %rax [L0x7fffffffc76c,L0x7fffffffc76d,L0x7fffffffc76e,L0x7fffffffc76f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r13d,-0x2c8(%rbp)                       #! EA = L0x7fffffffc788; PC = 0x55555555b243 *)
mov [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,_,_,_,_]
    %r13;
(* #jbe    0x55555555b340 <gf256mat_prod_sse+384>  #! PC = 0x55555555b24d *)
#jbe    0x55555555b340 <gf256mat_prod_sse+384>  #! 0x55555555b24d = 0x55555555b24d;
(* mov    -0x2f0(%rbp),%rdi                        #! EA = L0x7fffffffc760; Value = 0x00007fffffffcb20; PC = 0x55555555b340 *)
mov %rdi [L0x7fffffffc760,L0x7fffffffc761,L0x7fffffffc762,L0x7fffffffc763,
          L0x7fffffffc764,L0x7fffffffc765,L0x7fffffffc766,L0x7fffffffc767];
(* mov    %eax,%esi                                #! PC = 0x55555555b347 *)
mov [m0,m1,m2,m3,_,_,_,_] %rax;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555b349 *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555b349 = 0x55555555b349;
(* #! -> SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc738; PC = 0x555555557005 *)
mov [L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
     L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc6f8 *)
#! 0x7fffffffc6f8 = 0x7fffffffc6f8;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7fffffffcb24; Value = 0xb4b4b5d53c3a64e2; PC = 0x7ffff7aebfc0 *)
mov %rcx [L0x7fffffffcb24,L0x7fffffffcb25,L0x7fffffffcb26,L0x7fffffffcb27,
          L0x7fffffffcb28,L0x7fffffffcb29,L0x7fffffffcb2a,L0x7fffffffcb2b];
(* mov    (%rsi),%rsi                              #! EA = L0x7fffffffcb20; Value = 0x3c3a64e2f4c6dec1; PC = 0x7ffff7aebfc5 *)
mov %rsi [L0x7fffffffcb20,L0x7fffffffcb21,L0x7fffffffcb22,L0x7fffffffcb23,
          L0x7fffffffcb24,L0x7fffffffcb25,L0x7fffffffcb26,L0x7fffffffcb27];
(* mov    %rsi,(%rdi)                              #! EA = L0x7fffffffc700; PC = 0x7ffff7aebfc8 *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707] %rsi;
(* mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7fffffffc704; PC = 0x7ffff7aebfcb *)
mov [L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b] %rcx;
(* #! <- SP = 0x7fffffffc6f8 *)
#! 0x7fffffffc6f8 = 0x7fffffffc6f8;
(* #ret                                            #! PC = 0x7ffff7aebfd0 *)
#ret                                            #! 0x7ffff7aebfd0 = 0x7ffff7aebfd0;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc700; Value = 0x3c3a64e2f4c6dec1; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc738; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
          L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* mov    %r13d,%esi                               #! PC = 0x55555555b34e *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #jmp    0x55555555b261 <gf256mat_prod_sse+161>  #! PC = 0x55555555b351 *)
#jmp    0x55555555b261 <gf256mat_prod_sse+161>  #! 0x55555555b351 = 0x55555555b351;
(* mov    -0x2d8(%rbp),%rdi                        #! EA = L0x7fffffffc778; Value = 0x00007fffffffc810; PC = 0x55555555b261 *)
mov %rdi [L0x7fffffffc778,L0x7fffffffc779,L0x7fffffffc77a,L0x7fffffffc77b,
          L0x7fffffffc77c,L0x7fffffffc77d,L0x7fffffffc77e,L0x7fffffffc77f];
(* #call   0x555555557410 <gf256v_generate_multab_16_sse>#! PC = 0x55555555b268 *)
#call   0x555555557410 <gf256v_generate_multab_16_sse>#! 0x55555555b268 = 0x55555555b268;
(* #! -> SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* movdqa %xmm0,%xmm1                              #! PC = 0x555555557411 *)
mov %xmm1 %xmm0;
(* movdqa %xmm0,%xmm10                             #! PC = 0x555555557415 *)
mov %xmm10 %xmm0;
(* movdqa %xmm1,%xmm13                             #! PC = 0x55555555741a *)
mov %xmm13 %xmm1;
(* psrlw  $0x4,%xmm10                              #! PC = 0x55555555741f *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm10 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* movaps %xmm1,-0x10(%rbp)                        #! EA = L0x7fffffffc740; PC = 0x555555557428 *)
mov [L0x7fffffffc740,L0x7fffffffc741,L0x7fffffffc742,L0x7fffffffc743,
     L0x7fffffffc744,L0x7fffffffc745,L0x7fffffffc746,L0x7fffffffc747,
     L0x7fffffffc748,L0x7fffffffc749,L0x7fffffffc74a,L0x7fffffffc74b,
     L0x7fffffffc74c,L0x7fffffffc74d,L0x7fffffffc74e,L0x7fffffffc74f] %xmm1;
(* movdqa 0xebfc(%rip),%xmm0        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x55555555742c *)
mov %xmm0 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqu 0x10ca4(%rip),%xmm7        # 0x5555555680e0 <__gf256_mulbase+96>#! EA = L0x5555555680e0; Value = 0x3830282018100800; PC = 0x555555557434 *)
mov %xmm7 [L0x5555555680e0, L0x5555555680e1, L0x5555555680e2, L0x5555555680e3,
           L0x5555555680e4, L0x5555555680e5, L0x5555555680e6, L0x5555555680e7,
           L0x5555555680e8, L0x5555555680e9, L0x5555555680ea, L0x5555555680eb,
           L0x5555555680ec, L0x5555555680ed, L0x5555555680ee, L0x5555555680ef];
(* movdqu 0x10cdc(%rip),%xmm6        # 0x555555568120 <__gf256_mulbase+160>#! EA = L0x555555568120; Value = 0xe0c0a08060402000; PC = 0x55555555743c *)
mov %xmm6 [L0x555555568120, L0x555555568121, L0x555555568122, L0x555555568123,
           L0x555555568124, L0x555555568125, L0x555555568126, L0x555555568127,
           L0x555555568128, L0x555555568129, L0x55555556812a, L0x55555556812b,
           L0x55555556812c, L0x55555556812d, L0x55555556812e, L0x55555556812f];
(* movdqu 0x10c64(%rip),%xmm5        # 0x5555555680b0 <__gf256_mulbase+48>#! EA = L0x5555555680b0; Value = 0xe0c0a08060402000; PC = 0x555555557444 *)
mov %xmm5 [L0x5555555680b0, L0x5555555680b1, L0x5555555680b2, L0x5555555680b3,
           L0x5555555680b4, L0x5555555680b5, L0x5555555680b6, L0x5555555680b7,
           L0x5555555680b8, L0x5555555680b9, L0x5555555680ba, L0x5555555680bb,
           L0x5555555680bc, L0x5555555680bd, L0x5555555680be, L0x5555555680bf];
(* movdqu 0x10c4b(%rip),%xmm9        # 0x5555555680a0 <__gf256_mulbase+32>#! EA = L0x5555555680a0; Value = 0x0e0c0a0806040200; PC = 0x55555555744c *)
mov %xmm9 [L0x5555555680a0, L0x5555555680a1, L0x5555555680a2, L0x5555555680a3,
           L0x5555555680a4, L0x5555555680a5, L0x5555555680a6, L0x5555555680a7,
           L0x5555555680a8, L0x5555555680a9, L0x5555555680aa, L0x5555555680ab,
           L0x5555555680ac, L0x5555555680ad, L0x5555555680ae, L0x5555555680af];
(* pand   %xmm0,%xmm13                             #! PC = 0x555555557455 *)
and %xmm13@uint8[16] %xmm13 %xmm0;
(* movdqu 0x10c5d(%rip),%xmm8        # 0x5555555680c0 <__gf256_mulbase+64>#! EA = L0x5555555680c0; Value = 0x1c1814100c080400; PC = 0x55555555745a *)
mov %xmm8 [L0x5555555680c0, L0x5555555680c1, L0x5555555680c2, L0x5555555680c3,
           L0x5555555680c4, L0x5555555680c5, L0x5555555680c6, L0x5555555680c7,
           L0x5555555680c8, L0x5555555680c9, L0x5555555680ca, L0x5555555680cb,
           L0x5555555680cc, L0x5555555680cd, L0x5555555680ce, L0x5555555680cf];
(* pand   %xmm0,%xmm10                             #! PC = 0x555555557463 *)
and %xmm10@uint8[16] %xmm10 %xmm0;
(* movdqu 0x10c8f(%rip),%xmm11        # 0x555555568100 <__gf256_mulbase+128>#! EA = L0x555555568100; Value = 0x7060504030201000; PC = 0x555555557468 *)
mov %xmm11 [L0x555555568100, L0x555555568101, L0x555555568102, L0x555555568103,
           L0x555555568104, L0x555555568105, L0x555555568106, L0x555555568107,
           L0x555555568108, L0x555555568109, L0x55555556810a, L0x55555556810b,
           L0x55555556810c, L0x55555556810d, L0x55555556810e, L0x55555556810f];
(* movdqu 0x10c57(%rip),%xmm2        # 0x5555555680d0 <__gf256_mulbase+80>#! EA = L0x5555555680d0; Value = 0xdb9b5b1bc0804000; PC = 0x555555557471 *)
mov %xmm2 [L0x5555555680d0, L0x5555555680d1, L0x5555555680d2, L0x5555555680d3,
           L0x5555555680d4, L0x5555555680d5, L0x5555555680d6, L0x5555555680d7,
           L0x5555555680d8, L0x5555555680d9, L0x5555555680da, L0x5555555680db,
           L0x5555555680dc, L0x5555555680dd, L0x5555555680de, L0x5555555680df];
(* pshufb %xmm13,%xmm7                             #! PC = 0x555555557479 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm7;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm7 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm6                             #! PC = 0x55555555747f *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10cb2(%rip),%xmm12        # 0x555555568140 <__gf256_mulbase+192>#! EA = L0x555555568140; Value = 0xdb9b5b1bc0804000; PC = 0x555555557485 *)
mov %xmm12 [L0x555555568140, L0x555555568141, L0x555555568142, L0x555555568143,
           L0x555555568144, L0x555555568145, L0x555555568146, L0x555555568147,
           L0x555555568148, L0x555555568149, L0x55555556814a, L0x55555556814b,
           L0x55555556814c, L0x55555556814d, L0x55555556814e, L0x55555556814f];
(* movdqu 0x10c5a(%rip),%xmm4        # 0x5555555680f0 <__gf256_mulbase+112>#! EA = L0x5555555680f0; Value = 0xad2db6369b1b8000; PC = 0x55555555748e *)
mov %xmm4 [L0x5555555680f0, L0x5555555680f1, L0x5555555680f2, L0x5555555680f3,
           L0x5555555680f4, L0x5555555680f5, L0x5555555680f6, L0x5555555680f7,
           L0x5555555680f8, L0x5555555680f9, L0x5555555680fa, L0x5555555680fb,
           L0x5555555680fc, L0x5555555680fd, L0x5555555680fe, L0x5555555680ff];
(* pshufb %xmm13,%xmm9                             #! PC = 0x555555557496 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm9;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm9 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm8                             #! PC = 0x55555555749c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm8;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm8 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10cb5(%rip),%xmm15        # 0x555555568160 <__gf256_mulbase+224>#! EA = L0x555555568160; Value = 0xad2db6369b1b8000; PC = 0x5555555574a2 *)
mov %xmm15 [L0x555555568160, L0x555555568161, L0x555555568162, L0x555555568163,
           L0x555555568164, L0x555555568165, L0x555555568166, L0x555555568167,
           L0x555555568168, L0x555555568169, L0x55555556816a, L0x55555556816b,
           L0x55555556816c, L0x55555556816d, L0x55555556816e, L0x55555556816f];
(* pshufb %xmm13,%xmm11                            #! PC = 0x5555555574ab *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c57(%rip),%xmm0        # 0x555555568110 <__gf256_mulbase+144>#! EA = L0x555555568110; Value = 0x415a776c2d361b00; PC = 0x5555555574b1 *)
mov %xmm0 [L0x555555568110, L0x555555568111, L0x555555568112, L0x555555568113,
           L0x555555568114, L0x555555568115, L0x555555568116, L0x555555568117,
           L0x555555568118, L0x555555568119, L0x55555556811a, L0x55555556811b,
           L0x55555556811c, L0x55555556811d, L0x55555556811e, L0x55555556811f];
(* pshufb %xmm10,%xmm5                             #! PC = 0x5555555574b9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm13,%xmm12                            #! PC = 0x5555555574bf *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c63(%rip),%xmm3        # 0x555555568130 <__gf256_mulbase+176>#! EA = L0x555555568130; Value = 0x82b4eed85a6c3600; PC = 0x5555555574c5 *)
mov %xmm3 [L0x555555568130, L0x555555568131, L0x555555568132, L0x555555568133,
           L0x555555568134, L0x555555568135, L0x555555568136, L0x555555568137,
           L0x555555568138, L0x555555568139, L0x55555556813a, L0x55555556813b,
           L0x55555556813c, L0x55555556813d, L0x55555556813e, L0x55555556813f];
(* pxor   %xmm9,%xmm5                              #! PC = 0x5555555574cd *)
xor %xmm5@uint8[16] %xmm5 %xmm9;
(* movdqu 0x10c75(%rip),%xmm14        # 0x555555568150 <__gf256_mulbase+208>#! EA = L0x555555568150; Value = 0x1f73c7abb4d86c00; PC = 0x5555555574d2 *)
mov %xmm14 [L0x555555568150, L0x555555568151, L0x555555568152, L0x555555568153,
           L0x555555568154, L0x555555568155, L0x555555568156, L0x555555568157,
           L0x555555568158, L0x555555568159, L0x55555556815a, L0x55555556815b,
           L0x55555556815c, L0x55555556815d, L0x55555556815e, L0x55555556815f];
(* pshufb %xmm13,%xmm15                            #! PC = 0x5555555574db *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm13;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm15;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm15 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm2                             #! PC = 0x5555555574e1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm2;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm2 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqu 0x10c80(%rip),%xmm13        # 0x555555568170 <__gf256_mulbase+240>#! EA = L0x555555568170; Value = 0x3ee6954d73abd800; PC = 0x5555555574e7 *)
mov %xmm13 [L0x555555568170, L0x555555568171, L0x555555568172, L0x555555568173,
           L0x555555568174, L0x555555568175, L0x555555568176, L0x555555568177,
           L0x555555568178, L0x555555568179, L0x55555556817a, L0x55555556817b,
           L0x55555556817c, L0x55555556817d, L0x55555556817e, L0x55555556817f];
(* pshufb %xmm10,%xmm4                             #! PC = 0x5555555574f0 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm14                            #! PC = 0x5555555574f6 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm14;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm14 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm8,%xmm2                              #! PC = 0x5555555574fc *)
xor %xmm2@uint8[16] %xmm2 %xmm8;
(* pxor   %xmm7,%xmm4                              #! PC = 0x555555557501 *)
xor %xmm4@uint8[16] %xmm4 %xmm7;
(* movdqa 0xeb52(%rip),%xmm9        # 0x555555566060#! EA = L0x555555566060; Value = 0x0000f0f00000f0f0; PC = 0x555555557505 *)
mov %xmm9 [L0x555555566060, L0x555555566061, L0x555555566062, L0x555555566063,
           L0x555555566064, L0x555555566065, L0x555555566066, L0x555555566067,
           L0x555555566068, L0x555555566069, L0x55555556606a, L0x55555556606b,
           L0x55555556606c, L0x55555556606d, L0x55555556606e, L0x55555556606f];
(* pshufb %xmm10,%xmm13                            #! PC = 0x55555555750e *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm13;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm13 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm0                             #! PC = 0x555555557514 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm10,%xmm3                             #! PC = 0x55555555751a *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa 0xeb27(%rip),%xmm8        # 0x555555566050#! EA = L0x555555566050; Value = 0x00000000f0f0f0f0; PC = 0x555555557520 *)
mov %xmm8 [L0x555555566050, L0x555555566051, L0x555555566052, L0x555555566053,
           L0x555555566054, L0x555555566055, L0x555555566056, L0x555555566057,
           L0x555555566058, L0x555555566059, L0x55555556605a, L0x55555556605b,
           L0x55555556605c, L0x55555556605d, L0x55555556605e, L0x55555556605f];
(* movdqa 0xeb0f(%rip),%xmm7        # 0x555555566040#! EA = L0x555555566040; Value = 0xf0f0f0f0f0f0f0f0; PC = 0x555555557529 *)
mov %xmm7 [L0x555555566040, L0x555555566041, L0x555555566042, L0x555555566043,
           L0x555555566044, L0x555555566045, L0x555555566046, L0x555555566047,
           L0x555555566048, L0x555555566049, L0x55555556604a, L0x55555556604b,
           L0x55555556604c, L0x55555556604d, L0x55555556604e, L0x55555556604f];
(* movaps %xmm5,-0x20(%rbp)                        #! EA = L0x7fffffffc730; PC = 0x555555557531 *)
mov [L0x7fffffffc730,L0x7fffffffc731,L0x7fffffffc732,L0x7fffffffc733,
     L0x7fffffffc734,L0x7fffffffc735,L0x7fffffffc736,L0x7fffffffc737,
     L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
     L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f] %xmm5;
(* pshufb %xmm9,%xmm5                              #! PC = 0x555555557535 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm9;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa 0xeb2c(%rip),%xmm10        # 0x555555566070#! EA = L0x555555566070; Value = 0x00f000f000f000f0; PC = 0x55555555753b *)
mov %xmm10 [L0x555555566070, L0x555555566071, L0x555555566072, L0x555555566073,
           L0x555555566074, L0x555555566075, L0x555555566076, L0x555555566077,
           L0x555555566078, L0x555555566079, L0x55555556607a, L0x55555556607b,
           L0x55555556607c, L0x55555556607d, L0x55555556607e, L0x55555556607f];
(* movaps %xmm2,-0x30(%rbp)                        #! EA = L0x7fffffffc720; PC = 0x555555557544 *)
mov [L0x7fffffffc720,L0x7fffffffc721,L0x7fffffffc722,L0x7fffffffc723,
     L0x7fffffffc724,L0x7fffffffc725,L0x7fffffffc726,L0x7fffffffc727,
     L0x7fffffffc728,L0x7fffffffc729,L0x7fffffffc72a,L0x7fffffffc72b,
     L0x7fffffffc72c,L0x7fffffffc72d,L0x7fffffffc72e,L0x7fffffffc72f] %xmm2;
(* pshufb %xmm8,%xmm2                              #! PC = 0x555555557548 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm8;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm2;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm2 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm11,%xmm0                             #! PC = 0x55555555754e *)
xor %xmm0@uint8[16] %xmm0 %xmm11;
(* pxor   %xmm6,%xmm3                              #! PC = 0x555555557553 *)
xor %xmm3@uint8[16] %xmm3 %xmm6;
(* pshufb %xmm10,%xmm1                             #! PC = 0x555555557557 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movaps %xmm4,-0x40(%rbp)                        #! EA = L0x7fffffffc710; PC = 0x55555555755d *)
mov [L0x7fffffffc710,L0x7fffffffc711,L0x7fffffffc712,L0x7fffffffc713,
     L0x7fffffffc714,L0x7fffffffc715,L0x7fffffffc716,L0x7fffffffc717,
     L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
     L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f] %xmm4;
(* pshufb %xmm7,%xmm4                              #! PC = 0x555555557561 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm7;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm14,%xmm12                            #! PC = 0x555555557566 *)
xor %xmm12@uint8[16] %xmm12 %xmm14;
(* pxor   %xmm5,%xmm1                              #! PC = 0x55555555756b *)
xor %xmm1@uint8[16] %xmm1 %xmm5;
(* pxor   %xmm4,%xmm2                              #! PC = 0x55555555756f *)
xor %xmm2@uint8[16] %xmm2 %xmm4;
(* movaps %xmm13,-0x60(%rbp)                       #! EA = L0x7fffffffc6f0; PC = 0x555555557573 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm13;
(* movdqa %xmm12,%xmm14                            #! PC = 0x555555557578 *)
mov %xmm14 %xmm12;
(* pxor   %xmm2,%xmm1                              #! PC = 0x55555555757d *)
xor %xmm1@uint8[16] %xmm1 %xmm2;
(* movaps %xmm0,-0x50(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x555555557581 *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm0;
(* movdqa %xmm3,%xmm13                             #! PC = 0x555555557585 *)
mov %xmm13 %xmm3;
(* pshufb %xmm10,%xmm0                             #! PC = 0x55555555758a *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm10;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movaps %xmm1,(%rdi)                             #! EA = L0x7fffffffc810; PC = 0x555555557590 *)
mov [L0x7fffffffc810,L0x7fffffffc811,L0x7fffffffc812,L0x7fffffffc813,
     L0x7fffffffc814,L0x7fffffffc815,L0x7fffffffc816,L0x7fffffffc817,
     L0x7fffffffc818,L0x7fffffffc819,L0x7fffffffc81a,L0x7fffffffc81b,
     L0x7fffffffc81c,L0x7fffffffc81d,L0x7fffffffc81e,L0x7fffffffc81f] %xmm1;
(* movdqa -0x60(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x7373e67ca4d70fd7; PC = 0x555555557593 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* pshufb %xmm9,%xmm3                              #! PC = 0x555555557598 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm9;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm8,%xmm12                             #! PC = 0x55555555759e *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm8;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm3,%xmm0                              #! PC = 0x5555555575a4 *)
xor %xmm0@uint8[16] %xmm0 %xmm3;
(* pxor   %xmm15,%xmm1                             #! PC = 0x5555555575a8 *)
xor %xmm1@uint8[16] %xmm1 %xmm15;
(* movdqa %xmm1,%xmm15                             #! PC = 0x5555555575ad *)
mov %xmm15 %xmm1;
(* pshufb %xmm7,%xmm1                              #! PC = 0x5555555575b2 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm7;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm12                             #! PC = 0x5555555575b7 *)
xor %xmm12@uint8[16] %xmm12 %xmm1;
(* pxor   %xmm12,%xmm0                             #! PC = 0x5555555575bc *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movaps %xmm0,0x10(%rdi)                         #! EA = L0x7fffffffc820; PC = 0x5555555575c1 *)
mov [L0x7fffffffc820,L0x7fffffffc821,L0x7fffffffc822,L0x7fffffffc823,
     L0x7fffffffc824,L0x7fffffffc825,L0x7fffffffc826,L0x7fffffffc827,
     L0x7fffffffc828,L0x7fffffffc829,L0x7fffffffc82a,L0x7fffffffc82b,
     L0x7fffffffc82c,L0x7fffffffc82d,L0x7fffffffc82e,L0x7fffffffc82f] %xmm0;
(* #jbe    0x5555555576c9 <gf256v_generate_multab_16_sse+697>#! PC = 0x5555555575c8 *)
#jbe    0x5555555576c9 <gf256v_generate_multab_16_sse+697>#! 0x5555555575c8 = 0x5555555575c8;
(* movdqa 0xea62(%rip),%xmm10        # 0x555555566040#! EA = L0x555555566040; Value = 0xf0f0f0f0f0f0f0f0; PC = 0x5555555575d5 *)
mov %xmm10 [L0x555555566040, L0x555555566041, L0x555555566042, L0x555555566043,
           L0x555555566044, L0x555555566045, L0x555555566046, L0x555555566047,
           L0x555555566048, L0x555555566049, L0x55555556604a, L0x55555556604b,
           L0x55555556604c, L0x55555556604d, L0x55555556604e, L0x55555556604f];
(* movdqa 0xea69(%rip),%xmm9        # 0x555555566050#! EA = L0x555555566050; Value = 0x00000000f0f0f0f0; PC = 0x5555555575de *)
mov %xmm9 [L0x555555566050, L0x555555566051, L0x555555566052, L0x555555566053,
           L0x555555566054, L0x555555566055, L0x555555566056, L0x555555566057,
           L0x555555566058, L0x555555566059, L0x55555556605a, L0x55555556605b,
           L0x55555556605c, L0x55555556605d, L0x55555556605e, L0x55555556605f];
(* movdqa 0xea7d(%rip),%xmm7        # 0x555555566070#! EA = L0x555555566070; Value = 0x00f000f000f000f0; PC = 0x5555555575eb *)
mov %xmm7 [L0x555555566070, L0x555555566071, L0x555555566072, L0x555555566073,
           L0x555555566074, L0x555555566075, L0x555555566076, L0x555555566077,
           L0x555555566078, L0x555555566079, L0x55555556607a, L0x55555556607b,
           L0x55555556607c, L0x55555556607d, L0x55555556607e, L0x55555556607f];
(* movdqa 0xea64(%rip),%xmm8        # 0x555555566060#! EA = L0x555555566060; Value = 0x0000f0f00000f0f0; PC = 0x5555555575f3 *)
mov %xmm8 [L0x555555566060, L0x555555566061, L0x555555566062, L0x555555566063,
           L0x555555566064, L0x555555566065, L0x555555566066, L0x555555566067,
           L0x555555566068, L0x555555566069, L0x55555556606a, L0x55555556606b,
           L0x55555556606c, L0x55555556606d, L0x55555556606e, L0x55555556606f];
(* movdqa 0xea1c(%rip),%xmm1        # 0x555555566020#! EA = L0x555555566020; Value = 0x0101010101010101; PC = 0x5555555575fc *)
mov %xmm1 [L0x555555566020, L0x555555566021, L0x555555566022, L0x555555566023,
           L0x555555566024, L0x555555566025, L0x555555566026, L0x555555566027,
           L0x555555566028, L0x555555566029, L0x55555556602a, L0x55555556602b,
           L0x55555556602c, L0x55555556602d, L0x55555556602e, L0x55555556602f];
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc830; PC = 0x555555557684 *)
mov [L0x7fffffffc830,L0x7fffffffc831,L0x7fffffffc832,L0x7fffffffc833,
     L0x7fffffffc834,L0x7fffffffc835,L0x7fffffffc836,L0x7fffffffc837,
     L0x7fffffffc838,L0x7fffffffc839,L0x7fffffffc83a,L0x7fffffffc83b,
     L0x7fffffffc83c,L0x7fffffffc83d,L0x7fffffffc83e,L0x7fffffffc83f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc840; PC = 0x5555555576bc *)
mov [L0x7fffffffc840,L0x7fffffffc841,L0x7fffffffc842,L0x7fffffffc843,
     L0x7fffffffc844,L0x7fffffffc845,L0x7fffffffc846,L0x7fffffffc847,
     L0x7fffffffc848,L0x7fffffffc849,L0x7fffffffc84a,L0x7fffffffc84b,
     L0x7fffffffc84c,L0x7fffffffc84d,L0x7fffffffc84e,L0x7fffffffc84f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc850; PC = 0x555555557684 *)
mov [L0x7fffffffc850,L0x7fffffffc851,L0x7fffffffc852,L0x7fffffffc853,
     L0x7fffffffc854,L0x7fffffffc855,L0x7fffffffc856,L0x7fffffffc857,
     L0x7fffffffc858,L0x7fffffffc859,L0x7fffffffc85a,L0x7fffffffc85b,
     L0x7fffffffc85c,L0x7fffffffc85d,L0x7fffffffc85e,L0x7fffffffc85f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc860; PC = 0x5555555576bc *)
mov [L0x7fffffffc860,L0x7fffffffc861,L0x7fffffffc862,L0x7fffffffc863,
     L0x7fffffffc864,L0x7fffffffc865,L0x7fffffffc866,L0x7fffffffc867,
     L0x7fffffffc868,L0x7fffffffc869,L0x7fffffffc86a,L0x7fffffffc86b,
     L0x7fffffffc86c,L0x7fffffffc86d,L0x7fffffffc86e,L0x7fffffffc86f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc870; PC = 0x555555557684 *)
mov [L0x7fffffffc870,L0x7fffffffc871,L0x7fffffffc872,L0x7fffffffc873,
     L0x7fffffffc874,L0x7fffffffc875,L0x7fffffffc876,L0x7fffffffc877,
     L0x7fffffffc878,L0x7fffffffc879,L0x7fffffffc87a,L0x7fffffffc87b,
     L0x7fffffffc87c,L0x7fffffffc87d,L0x7fffffffc87e,L0x7fffffffc87f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc880; PC = 0x5555555576bc *)
mov [L0x7fffffffc880,L0x7fffffffc881,L0x7fffffffc882,L0x7fffffffc883,
     L0x7fffffffc884,L0x7fffffffc885,L0x7fffffffc886,L0x7fffffffc887,
     L0x7fffffffc888,L0x7fffffffc889,L0x7fffffffc88a,L0x7fffffffc88b,
     L0x7fffffffc88c,L0x7fffffffc88d,L0x7fffffffc88e,L0x7fffffffc88f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc890; PC = 0x555555557684 *)
mov [L0x7fffffffc890,L0x7fffffffc891,L0x7fffffffc892,L0x7fffffffc893,
     L0x7fffffffc894,L0x7fffffffc895,L0x7fffffffc896,L0x7fffffffc897,
     L0x7fffffffc898,L0x7fffffffc899,L0x7fffffffc89a,L0x7fffffffc89b,
     L0x7fffffffc89c,L0x7fffffffc89d,L0x7fffffffc89e,L0x7fffffffc89f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8a0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8a0,L0x7fffffffc8a1,L0x7fffffffc8a2,L0x7fffffffc8a3,
     L0x7fffffffc8a4,L0x7fffffffc8a5,L0x7fffffffc8a6,L0x7fffffffc8a7,
     L0x7fffffffc8a8,L0x7fffffffc8a9,L0x7fffffffc8aa,L0x7fffffffc8ab,
     L0x7fffffffc8ac,L0x7fffffffc8ad,L0x7fffffffc8ae,L0x7fffffffc8af] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8b0; PC = 0x555555557684 *)
mov [L0x7fffffffc8b0,L0x7fffffffc8b1,L0x7fffffffc8b2,L0x7fffffffc8b3,
     L0x7fffffffc8b4,L0x7fffffffc8b5,L0x7fffffffc8b6,L0x7fffffffc8b7,
     L0x7fffffffc8b8,L0x7fffffffc8b9,L0x7fffffffc8ba,L0x7fffffffc8bb,
     L0x7fffffffc8bc,L0x7fffffffc8bd,L0x7fffffffc8be,L0x7fffffffc8bf] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8c0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8c0,L0x7fffffffc8c1,L0x7fffffffc8c2,L0x7fffffffc8c3,
     L0x7fffffffc8c4,L0x7fffffffc8c5,L0x7fffffffc8c6,L0x7fffffffc8c7,
     L0x7fffffffc8c8,L0x7fffffffc8c9,L0x7fffffffc8ca,L0x7fffffffc8cb,
     L0x7fffffffc8cc,L0x7fffffffc8cd,L0x7fffffffc8ce,L0x7fffffffc8cf] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8d0; PC = 0x555555557684 *)
mov [L0x7fffffffc8d0,L0x7fffffffc8d1,L0x7fffffffc8d2,L0x7fffffffc8d3,
     L0x7fffffffc8d4,L0x7fffffffc8d5,L0x7fffffffc8d6,L0x7fffffffc8d7,
     L0x7fffffffc8d8,L0x7fffffffc8d9,L0x7fffffffc8da,L0x7fffffffc8db,
     L0x7fffffffc8dc,L0x7fffffffc8dd,L0x7fffffffc8de,L0x7fffffffc8df] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc8e0; PC = 0x5555555576bc *)
mov [L0x7fffffffc8e0,L0x7fffffffc8e1,L0x7fffffffc8e2,L0x7fffffffc8e3,
     L0x7fffffffc8e4,L0x7fffffffc8e5,L0x7fffffffc8e6,L0x7fffffffc8e7,
     L0x7fffffffc8e8,L0x7fffffffc8e9,L0x7fffffffc8ea,L0x7fffffffc8eb,
     L0x7fffffffc8ec,L0x7fffffffc8ed,L0x7fffffffc8ee,L0x7fffffffc8ef] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc8f0; PC = 0x555555557684 *)
mov [L0x7fffffffc8f0,L0x7fffffffc8f1,L0x7fffffffc8f2,L0x7fffffffc8f3,
     L0x7fffffffc8f4,L0x7fffffffc8f5,L0x7fffffffc8f6,L0x7fffffffc8f7,
     L0x7fffffffc8f8,L0x7fffffffc8f9,L0x7fffffffc8fa,L0x7fffffffc8fb,
     L0x7fffffffc8fc,L0x7fffffffc8fd,L0x7fffffffc8fe,L0x7fffffffc8ff] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc900; PC = 0x5555555576bc *)
mov [L0x7fffffffc900,L0x7fffffffc901,L0x7fffffffc902,L0x7fffffffc903,
     L0x7fffffffc904,L0x7fffffffc905,L0x7fffffffc906,L0x7fffffffc907,
     L0x7fffffffc908,L0x7fffffffc909,L0x7fffffffc90a,L0x7fffffffc90b,
     L0x7fffffffc90c,L0x7fffffffc90d,L0x7fffffffc90e,L0x7fffffffc90f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc910; PC = 0x555555557684 *)
mov [L0x7fffffffc910,L0x7fffffffc911,L0x7fffffffc912,L0x7fffffffc913,
     L0x7fffffffc914,L0x7fffffffc915,L0x7fffffffc916,L0x7fffffffc917,
     L0x7fffffffc918,L0x7fffffffc919,L0x7fffffffc91a,L0x7fffffffc91b,
     L0x7fffffffc91c,L0x7fffffffc91d,L0x7fffffffc91e,L0x7fffffffc91f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc920; PC = 0x5555555576bc *)
mov [L0x7fffffffc920,L0x7fffffffc921,L0x7fffffffc922,L0x7fffffffc923,
     L0x7fffffffc924,L0x7fffffffc925,L0x7fffffffc926,L0x7fffffffc927,
     L0x7fffffffc928,L0x7fffffffc929,L0x7fffffffc92a,L0x7fffffffc92b,
     L0x7fffffffc92c,L0x7fffffffc92d,L0x7fffffffc92e,L0x7fffffffc92f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc930; PC = 0x555555557684 *)
mov [L0x7fffffffc930,L0x7fffffffc931,L0x7fffffffc932,L0x7fffffffc933,
     L0x7fffffffc934,L0x7fffffffc935,L0x7fffffffc936,L0x7fffffffc937,
     L0x7fffffffc938,L0x7fffffffc939,L0x7fffffffc93a,L0x7fffffffc93b,
     L0x7fffffffc93c,L0x7fffffffc93d,L0x7fffffffc93e,L0x7fffffffc93f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc940; PC = 0x5555555576bc *)
mov [L0x7fffffffc940,L0x7fffffffc941,L0x7fffffffc942,L0x7fffffffc943,
     L0x7fffffffc944,L0x7fffffffc945,L0x7fffffffc946,L0x7fffffffc947,
     L0x7fffffffc948,L0x7fffffffc949,L0x7fffffffc94a,L0x7fffffffc94b,
     L0x7fffffffc94c,L0x7fffffffc94d,L0x7fffffffc94e,L0x7fffffffc94f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc950; PC = 0x555555557684 *)
mov [L0x7fffffffc950,L0x7fffffffc951,L0x7fffffffc952,L0x7fffffffc953,
     L0x7fffffffc954,L0x7fffffffc955,L0x7fffffffc956,L0x7fffffffc957,
     L0x7fffffffc958,L0x7fffffffc959,L0x7fffffffc95a,L0x7fffffffc95b,
     L0x7fffffffc95c,L0x7fffffffc95d,L0x7fffffffc95e,L0x7fffffffc95f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc960; PC = 0x5555555576bc *)
mov [L0x7fffffffc960,L0x7fffffffc961,L0x7fffffffc962,L0x7fffffffc963,
     L0x7fffffffc964,L0x7fffffffc965,L0x7fffffffc966,L0x7fffffffc967,
     L0x7fffffffc968,L0x7fffffffc969,L0x7fffffffc96a,L0x7fffffffc96b,
     L0x7fffffffc96c,L0x7fffffffc96d,L0x7fffffffc96e,L0x7fffffffc96f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* movdqa %xmm7,%xmm5                              #! PC = 0x555555557610 *)
mov %xmm5 %xmm7;
(* movdqa %xmm8,%xmm4                              #! PC = 0x555555557614 *)
mov %xmm4 %xmm8;
(* movdqa %xmm9,%xmm3                              #! PC = 0x555555557619 *)
mov %xmm3 %xmm9;
(* movdqa -0x10(%rbp),%xmm12                       #! EA = L0x7fffffffc740; Value = 0x3c3a64e2f4c6dec1; PC = 0x55555555761e *)
mov %xmm12 [L0x7fffffffc740, L0x7fffffffc741, L0x7fffffffc742, L0x7fffffffc743,
           L0x7fffffffc744, L0x7fffffffc745, L0x7fffffffc746, L0x7fffffffc747,
           L0x7fffffffc748, L0x7fffffffc749, L0x7fffffffc74a, L0x7fffffffc74b,
           L0x7fffffffc74c, L0x7fffffffc74d, L0x7fffffffc74e, L0x7fffffffc74f];
(* movdqa %xmm10,%xmm2                             #! PC = 0x555555557624 *)
mov %xmm2 %xmm10;
(* movdqa -0x20(%rbp),%xmm0                        #! EA = L0x7fffffffc730; Value = 0x7874c8dff397a799; PC = 0x555555557629 *)
mov %xmm0 [L0x7fffffffc730, L0x7fffffffc731, L0x7fffffffc732, L0x7fffffffc733,
           L0x7fffffffc734, L0x7fffffffc735, L0x7fffffffc736, L0x7fffffffc737,
           L0x7fffffffc738, L0x7fffffffc739, L0x7fffffffc73a, L0x7fffffffc73b,
           L0x7fffffffc73c, L0x7fffffffc73d, L0x7fffffffc73e, L0x7fffffffc73f];
(* movdqa -0x30(%rbp),%xmm11                       #! EA = L0x7fffffffc720; Value = 0xf0e88ba5fd355529; PC = 0x55555555762e *)
mov %xmm11 [L0x7fffffffc720, L0x7fffffffc721, L0x7fffffffc722, L0x7fffffffc723,
           L0x7fffffffc724, L0x7fffffffc725, L0x7fffffffc726, L0x7fffffffc727,
           L0x7fffffffc728, L0x7fffffffc729, L0x7fffffffc72a, L0x7fffffffc72b,
           L0x7fffffffc72c, L0x7fffffffc72d, L0x7fffffffc72e, L0x7fffffffc72f];
(* paddb  %xmm1,%xmm5                              #! PC = 0x555555557634 *)
adds %dc %xmm5 %xmm5 %xmm1;
(* paddb  %xmm1,%xmm4                              #! PC = 0x555555557638 *)
adds %dc %xmm4 %xmm4 %xmm1;
(* paddb  %xmm1,%xmm3                              #! PC = 0x55555555763c *)
adds %dc %xmm3 %xmm3 %xmm1;
(* movdqa %xmm5,%xmm7                              #! PC = 0x555555557640 *)
mov %xmm7 %xmm5;
(* movdqa -0x40(%rbp),%xmm6                        #! EA = L0x7fffffffc710; Value = 0xfbcb0d51e16aaa52; PC = 0x555555557648 *)
mov %xmm6 [L0x7fffffffc710, L0x7fffffffc711, L0x7fffffffc712, L0x7fffffffc713,
           L0x7fffffffc714, L0x7fffffffc715, L0x7fffffffc716, L0x7fffffffc717,
           L0x7fffffffc718, L0x7fffffffc719, L0x7fffffffc71a, L0x7fffffffc71b,
           L0x7fffffffc71c, L0x7fffffffc71d, L0x7fffffffc71e, L0x7fffffffc71f];
(* paddb  %xmm1,%xmm2                              #! PC = 0x55555555764d *)
adds %dc %xmm2 %xmm2 %xmm1;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557651 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm5,%xmm12                             #! PC = 0x555555557656 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm12;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm12 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm3,%xmm11                             #! PC = 0x55555555765c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm11;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm11 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm12,%xmm0                             #! PC = 0x555555557662 *)
xor %xmm0@uint8[16] %xmm0 %xmm12;
(* movdqa %xmm4,%xmm8                              #! PC = 0x555555557667 *)
mov %xmm8 %xmm4;
(* pshufb %xmm2,%xmm6                              #! PC = 0x55555555766c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm6;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm6 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm3,%xmm9                              #! PC = 0x555555557671 *)
mov %xmm9 %xmm3;
(* movdqa %xmm2,%xmm10                             #! PC = 0x555555557676 *)
mov %xmm10 %xmm2;
(* pxor   %xmm11,%xmm6                             #! PC = 0x55555555767b *)
xor %xmm6@uint8[16] %xmm6 %xmm11;
(* pxor   %xmm6,%xmm0                              #! PC = 0x555555557680 *)
xor %xmm0@uint8[16] %xmm0 %xmm6;
(* movaps %xmm0,-0x20(%rax)                        #! EA = L0x7fffffffc970; PC = 0x555555557684 *)
mov [L0x7fffffffc970,L0x7fffffffc971,L0x7fffffffc972,L0x7fffffffc973,
     L0x7fffffffc974,L0x7fffffffc975,L0x7fffffffc976,L0x7fffffffc977,
     L0x7fffffffc978,L0x7fffffffc979,L0x7fffffffc97a,L0x7fffffffc97b,
     L0x7fffffffc97c,L0x7fffffffc97d,L0x7fffffffc97e,L0x7fffffffc97f] %xmm0;
(* movdqa -0x50(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xed8d1aa2d9d44fa4; PC = 0x555555557688 *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* pshufb %xmm5,%xmm0                              #! PC = 0x55555555768d *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm5;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm13,%xmm5                             #! PC = 0x555555557692 *)
mov %xmm5 %xmm13;
(* pshufb %xmm4,%xmm5                              #! PC = 0x555555557697 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm5;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm5 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm14,%xmm4                             #! PC = 0x55555555769c *)
mov %xmm4 %xmm14;
(* pshufb %xmm3,%xmm4                              #! PC = 0x5555555576a1 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm3;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm4;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm4 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* movdqa %xmm15,%xmm3                             #! PC = 0x5555555576a6 *)
mov %xmm3 %xmm15;
(* pxor   %xmm0,%xmm5                              #! PC = 0x5555555576ab *)
xor %xmm5@uint8[16] %xmm5 %xmm0;
(* pshufb %xmm2,%xmm3                              #! PC = 0x5555555576af *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm3;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm3 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm4,%xmm3                              #! PC = 0x5555555576b4 *)
xor %xmm3@uint8[16] %xmm3 %xmm4;
(* pxor   %xmm5,%xmm3                              #! PC = 0x5555555576b8 *)
xor %xmm3@uint8[16] %xmm3 %xmm5;
(* movaps %xmm3,-0x10(%rax)                        #! EA = L0x7fffffffc980; PC = 0x5555555576bc *)
mov [L0x7fffffffc980,L0x7fffffffc981,L0x7fffffffc982,L0x7fffffffc983,
     L0x7fffffffc984,L0x7fffffffc985,L0x7fffffffc986,L0x7fffffffc987,
     L0x7fffffffc988,L0x7fffffffc989,L0x7fffffffc98a,L0x7fffffffc98b,
     L0x7fffffffc98c,L0x7fffffffc98d,L0x7fffffffc98e,L0x7fffffffc98f] %xmm3;
(* #jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! PC = 0x5555555576c3 *)
#jne    0x555555557610 <gf256v_generate_multab_16_sse+512>#! 0x5555555576c3 = 0x5555555576c3;
(* #! <- SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* #ret                                            #! PC = 0x5555555576ca *)
#ret                                            #! 0x5555555576ca = 0x5555555576ca;
(* #je     0x55555555b2fa <gf256mat_prod_sse+314>  #! PC = 0x55555555b270 *)
#je     0x55555555b2fa <gf256mat_prod_sse+314>  #! 0x55555555b270 = 0x55555555b270;
(* mov    %r12d,%r14d                              #! PC = 0x55555555b276 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %r14 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r12d,%ecx                               #! PC = 0x55555555b286 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %rcx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    -0x2e0(%rbp),%rax                        #! EA = L0x7fffffffc770; Value = 0x00007fffffffcb80; PC = 0x55555555b289 *)
mov %rax [L0x7fffffffc770,L0x7fffffffc771,L0x7fffffffc772,L0x7fffffffc773,
          L0x7fffffffc774,L0x7fffffffc775,L0x7fffffffc776,L0x7fffffffc777];
(* mov    %rbx,%rdi                                #! PC = 0x55555555b290 *)
mov %rdi %rbx;
(* mov    %ecx,%r10d                               #! PC = 0x55555555b29d *)
mov [m0,m1,m2,m3,_,_,_,_] %rcx;
mov %r10 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,-0x2c4(%rbp)                        #! EA = L0x7fffffffc78c; PC = 0x55555555b2a0 *)
mov [L0x7fffffffc78c,L0x7fffffffc78d,L0x7fffffffc78e,L0x7fffffffc78f,_,_,_,_]
    %rcx;
(* mov    %r8d,%edx                                #! PC = 0x55555555b2aa *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r8d,%r13d                               #! PC = 0x55555555b2ad *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r13 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r15,%rsi                                #! PC = 0x55555555b2b0 *)
mov %rsi %r15;
(* #call   0x555555557040 <loadu_xmm>              #! PC = 0x55555555b2b3 *)
#call   0x555555557040 <loadu_xmm>              #! 0x55555555b2b3 = 0x55555555b2b3;
(* #! -> SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* mov    %edx,%eax                                #! PC = 0x555555557041 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rbx                                #! PC = 0x55555555704a *)
mov %rbx %rdi;
(* mov    %rsi,%rdi                                #! PC = 0x55555555704d *)
mov %rdi %rsi;
(* mov    %edx,%esi                                #! PC = 0x555555557050 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x5555555570d2 <loadu_xmm+146>          #! PC = 0x55555555705b *)
#je     0x5555555570d2 <loadu_xmm+146>          #! 0x55555555705b = 0x55555555705b;
(* movdqu (%rdi),%xmm1                             #! EA = L0x7fffffffcb80; Value = 0x52d1d3d94590a334; PC = 0x55555555705d *)
mov %xmm1 [L0x7fffffffcb80, L0x7fffffffcb81, L0x7fffffffcb82, L0x7fffffffcb83,
           L0x7fffffffcb84, L0x7fffffffcb85, L0x7fffffffcb86, L0x7fffffffcb87,
           L0x7fffffffcb88, L0x7fffffffcb89, L0x7fffffffcb8a, L0x7fffffffcb8b,
           L0x7fffffffcb8c, L0x7fffffffcb8d, L0x7fffffffcb8e, L0x7fffffffcb8f];
(* movaps %xmm1,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x555555557064 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm1;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557069 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557069 = 0x555555557069;
(* movdqu 0x10(%rdi),%xmm2                         #! EA = L0x7fffffffcb90; Value = 0x51a128110cf2dab8; PC = 0x55555555706b *)
mov %xmm2 [L0x7fffffffcb90, L0x7fffffffcb91, L0x7fffffffcb92, L0x7fffffffcb93,
           L0x7fffffffcb94, L0x7fffffffcb95, L0x7fffffffcb96, L0x7fffffffcb97,
           L0x7fffffffcb98, L0x7fffffffcb99, L0x7fffffffcb9a, L0x7fffffffcb9b,
           L0x7fffffffcb9c, L0x7fffffffcb9d, L0x7fffffffcb9e, L0x7fffffffcb9f];
(* movaps %xmm2,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x555555557070 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm2;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557077 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557077 = 0x555555557077;
(* movdqu 0x20(%rdi),%xmm3                         #! EA = L0x7fffffffcba0; Value = 0x8f6ec36a2801a8d9; PC = 0x555555557079 *)
mov %xmm3 [L0x7fffffffcba0, L0x7fffffffcba1, L0x7fffffffcba2, L0x7fffffffcba3,
           L0x7fffffffcba4, L0x7fffffffcba5, L0x7fffffffcba6, L0x7fffffffcba7,
           L0x7fffffffcba8, L0x7fffffffcba9, L0x7fffffffcbaa, L0x7fffffffcbab,
           L0x7fffffffcbac, L0x7fffffffcbad, L0x7fffffffcbae, L0x7fffffffcbaf];
(* movaps %xmm3,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555707e *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm3;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557085 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557085 = 0x555555557085;
(* movdqu 0x30(%rdi),%xmm4                         #! EA = L0x7fffffffcbb0; Value = 0x5200445bf97dcd66; PC = 0x555555557087 *)
mov %xmm4 [L0x7fffffffcbb0, L0x7fffffffcbb1, L0x7fffffffcbb2, L0x7fffffffcbb3,
           L0x7fffffffcbb4, L0x7fffffffcbb5, L0x7fffffffcbb6, L0x7fffffffcbb7,
           L0x7fffffffcbb8, L0x7fffffffcbb9, L0x7fffffffcbba, L0x7fffffffcbbb,
           L0x7fffffffcbbc, L0x7fffffffcbbd, L0x7fffffffcbbe, L0x7fffffffcbbf];
(* movaps %xmm4,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555708c *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm4;
(* #je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557093 *)
#je     0x5555555570c8 <loadu_xmm+136>          #! 0x555555557093 = 0x555555557093;
(* #je     0x5555555570de <loadu_xmm+158>          #! PC = 0x5555555570d4 *)
#je     0x5555555570de <loadu_xmm+158>          #! 0x5555555570d4 = 0x5555555570d4;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x5555555570d6 *)
#call   0x555555556ff0 <_load_xmm>              #! 0x5555555570d6 = 0x5555555570d6;
(* #! -> SP = 0x7fffffffc738 *)
#! 0x7fffffffc738 = 0x7fffffffc738;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc718; PC = 0x555555557005 *)
mov [L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
     L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc6d8 *)
#! 0x7fffffffc6d8 = 0x7fffffffc6d8;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7fffffffcbc0; Value = 0x9f7c42a165fb3fd4; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7fffffffcbc0; Value = 0x9f7c42a165fb3fd4; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc6e0; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc6e0; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc6d8 *)
#! 0x7fffffffc6d8 = 0x7fffffffc6d8;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc6e0; Value = 0x0000000065fb3fd4; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc6e0, L0x7fffffffc6e1, L0x7fffffffc6e2, L0x7fffffffc6e3,
           L0x7fffffffc6e4, L0x7fffffffc6e5, L0x7fffffffc6e6, L0x7fffffffc6e7,
           L0x7fffffffc6e8, L0x7fffffffc6e9, L0x7fffffffc6ea, L0x7fffffffc6eb,
           L0x7fffffffc6ec, L0x7fffffffc6ed, L0x7fffffffc6ee, L0x7fffffffc6ef];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc718; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc718,L0x7fffffffc719,L0x7fffffffc71a,L0x7fffffffc71b,
          L0x7fffffffc71c,L0x7fffffffc71d,L0x7fffffffc71e,L0x7fffffffc71f];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc738 *)
#! 0x7fffffffc738 = 0x7fffffffc738;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc7d0; PC = 0x5555555570db *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* mov    -0x8(%rbp),%rbx                          #! EA = L0x7fffffffc748; Value = 0x00007fffffffc790; PC = 0x5555555570de *)
mov %rbx [L0x7fffffffc748,L0x7fffffffc749,L0x7fffffffc74a,L0x7fffffffc74b,
          L0x7fffffffc74c,L0x7fffffffc74d,L0x7fffffffc74e,L0x7fffffffc74f];
(* #! <- SP = 0x7fffffffc758 *)
#! 0x7fffffffc758 = 0x7fffffffc758;
(* #ret                                            #! PC = 0x5555555570e3 *)
#ret                                            #! 0x5555555570e3 = 0x5555555570e3;
(* mov    -0x2c8(%rbp),%eax                        #! EA = L0x7fffffffc788; Value = 0x000000000000000c; PC = 0x55555555b2b8 *)
mov %rax [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    -0x2d8(%rbp),%r9                         #! EA = L0x7fffffffc778; Value = 0x00007fffffffc810; PC = 0x55555555b2c2 *)
mov %r9 [L0x7fffffffc778,L0x7fffffffc779,L0x7fffffffc77a,L0x7fffffffc77b,
          L0x7fffffffc77c,L0x7fffffffc77d,L0x7fffffffc77e,L0x7fffffffc77f];
(* mov    -0x2c4(%rbp),%ecx                        #! EA = L0x7fffffffc78c; Value = 0x4590a33400000000; PC = 0x55555555b2c9 *)
mov %rcx [L0x7fffffffc78c,L0x7fffffffc78d,L0x7fffffffc78e,L0x7fffffffc78f,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r13d,%r8d                               #! PC = 0x55555555b2cf *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %r8 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r12d,%edx                               #! PC = 0x55555555b2d2 *)
mov [m0,m1,m2,m3,_,_,_,_] %r12;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rbx,%rdi                                #! PC = 0x55555555b2d5 *)
mov %rdi %rbx;
(* mov    -0x2d0(%rbp),%rsi                        #! EA = L0x7fffffffc780; Value = 0x00007ffff78bb8b0; PC = 0x55555555b2d9 *)
mov %rsi [L0x7fffffffc780,L0x7fffffffc781,L0x7fffffffc782,L0x7fffffffc783,
          L0x7fffffffc784,L0x7fffffffc785,L0x7fffffffc786,L0x7fffffffc787];
(* #call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! PC = 0x55555555b2e0 *)
#call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! 0x55555555b2e0 = 0x55555555b2e0;
(* #! -> SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* mov    %r8d,%eax                                #! PC = 0x55555555aa51 *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,%ecx                                #! PC = 0x55555555aa54 *)
mov [m0,m1,m2,m3,_,_,_,_] %rcx;
mov %rcx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r8d,%r15d                               #! PC = 0x55555555aa5e *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r15 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r9,%r14                                 #! PC = 0x55555555aa67 *)
mov %r14 %r9;
(* mov    %r8d,%r13d                               #! PC = 0x55555555aa6c *)
mov [m0,m1,m2,m3,_,_,_,_] %r8;
mov %r13 [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rbx                                #! PC = 0x55555555aa7a *)
mov %rbx %rdi;
(* mov    %rax,-0x68(%rbp)                         #! EA = L0x7fffffffc6d8; PC = 0x55555555aa81 *)
mov [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
     L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df] %rax;
(* mov    %r13d,%eax                               #! PC = 0x55555555aa85 *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x70(%rbp)                         #! EA = L0x7fffffffc6d0; PC = 0x55555555aa8f *)
mov [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
     L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7] %rax;
(* mov    %edx,%eax                                #! PC = 0x55555555aa93 *)
mov [m0,m1,m2,m3,_,_,_,_] %rdx;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x60(%rbp)                         #! EA = L0x7fffffffc6e0; PC = 0x55555555aa95 *)
mov [L0x7fffffffc6e0,L0x7fffffffc6e1,L0x7fffffffc6e2,L0x7fffffffc6e3,
     L0x7fffffffc6e4,L0x7fffffffc6e5,L0x7fffffffc6e6,L0x7fffffffc6e7] %rax;
(* mov    0x10(%rbp),%eax                          #! EA = L0x7fffffffc750; Value = 0x000000000000000c; PC = 0x55555555aa99 *)
mov %rax [L0x7fffffffc750,L0x7fffffffc751,L0x7fffffffc752,L0x7fffffffc753,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,-0x58(%rbp)                         #! EA = L0x7fffffffc6e8; PC = 0x55555555aaa3 *)
mov [L0x7fffffffc6e8,L0x7fffffffc6e9,L0x7fffffffc6ea,L0x7fffffffc6eb,
     L0x7fffffffc6ec,L0x7fffffffc6ed,L0x7fffffffc6ee,L0x7fffffffc6ef] %rax;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc810; Value = 0x71b0e8295899c100; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc810, L0x7fffffffc811, L0x7fffffffc812, L0x7fffffffc813,
           L0x7fffffffc814, L0x7fffffffc815, L0x7fffffffc816, L0x7fffffffc817,
           L0x7fffffffc818, L0x7fffffffc819, L0x7fffffffc81a, L0x7fffffffc81b,
           L0x7fffffffc81c, L0x7fffffffc81d, L0x7fffffffc81e, L0x7fffffffc81f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc820; Value = 0x51f502a6f753a400; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc820, L0x7fffffffc821, L0x7fffffffc822, L0x7fffffffc823,
           L0x7fffffffc824, L0x7fffffffc825, L0x7fffffffc826, L0x7fffffffc827,
           L0x7fffffffc828, L0x7fffffffc829, L0x7fffffffc82a, L0x7fffffffc82b,
           L0x7fffffffc82c, L0x7fffffffc82d, L0x7fffffffc82e, L0x7fffffffc82f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb8b0; Value = 0xd0176909cf787577; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb8b0, L0x7ffff78bb8b1, L0x7ffff78bb8b2, L0x7ffff78bb8b3,
           L0x7ffff78bb8b4, L0x7ffff78bb8b5, L0x7ffff78bb8b6, L0x7ffff78bb8b7,
           L0x7ffff78bb8b8, L0x7ffff78bb8b9, L0x7ffff78bb8ba, L0x7ffff78bb8bb,
           L0x7ffff78bb8bc, L0x7ffff78bb8bd, L0x7ffff78bb8be, L0x7ffff78bb8bf];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x52d1d3d94590a334; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x51f502a6f753a400; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb8c0; Value = 0xff9a4b57eb82e7ef; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb8c0, L0x7ffff78bb8c1, L0x7ffff78bb8c2, L0x7ffff78bb8c3,
           L0x7ffff78bb8c4, L0x7ffff78bb8c5, L0x7ffff78bb8c6, L0x7ffff78bb8c7,
           L0x7ffff78bb8c8, L0x7ffff78bb8c9, L0x7ffff78bb8ca, L0x7ffff78bb8cb,
           L0x7ffff78bb8cc, L0x7ffff78bb8cd, L0x7ffff78bb8ce, L0x7ffff78bb8cf];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x51a128110cf2dab8; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x51f502a6f753a400; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb8d0; Value = 0xebe882e5ed68ba13; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb8d0, L0x7ffff78bb8d1, L0x7ffff78bb8d2, L0x7ffff78bb8d3,
           L0x7ffff78bb8d4, L0x7ffff78bb8d5, L0x7ffff78bb8d6, L0x7ffff78bb8d7,
           L0x7ffff78bb8d8, L0x7ffff78bb8d9, L0x7ffff78bb8da, L0x7ffff78bb8db,
           L0x7ffff78bb8dc, L0x7ffff78bb8dd, L0x7ffff78bb8de, L0x7ffff78bb8df];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x8f6ec36a2801a8d9; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x51f502a6f753a400; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb8e0; Value = 0x990fbb02f5c21e23; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb8e0, L0x7ffff78bb8e1, L0x7ffff78bb8e2, L0x7ffff78bb8e3,
           L0x7ffff78bb8e4, L0x7ffff78bb8e5, L0x7ffff78bb8e6, L0x7ffff78bb8e7,
           L0x7ffff78bb8e8, L0x7ffff78bb8e9, L0x7ffff78bb8ea, L0x7ffff78bb8eb,
           L0x7ffff78bb8ec, L0x7ffff78bb8ed, L0x7ffff78bb8ee, L0x7ffff78bb8ef];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x5200445bf97dcd66; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x51f502a6f753a400; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb8f0; Value = 0x731e2c6336b5e8be; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb8f0,L0x7ffff78bb8f1,L0x7ffff78bb8f2,L0x7ffff78bb8f3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb8f0; Value = 0x731e2c6336b5e8be; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb8f0,L0x7ffff78bb8f1,L0x7ffff78bb8f2,L0x7ffff78bb8f3,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000036b5e8be; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x51f502a6f753a400; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x71b0e8295899c100; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000065fb3fd4; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc830; Value = 0x2cf28b5579a7de00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc830, L0x7fffffffc831, L0x7fffffffc832, L0x7fffffffc833,
           L0x7fffffffc834, L0x7fffffffc835, L0x7fffffffc836, L0x7fffffffc837,
           L0x7fffffffc838, L0x7fffffffc839, L0x7fffffffc83a, L0x7fffffffc83b,
           L0x7fffffffc83c, L0x7fffffffc83d, L0x7fffffffc83e, L0x7fffffffc83f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc840; Value = 0xf6b96827d19e4f00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc840, L0x7fffffffc841, L0x7fffffffc842, L0x7fffffffc843,
           L0x7fffffffc844, L0x7fffffffc845, L0x7fffffffc846, L0x7fffffffc847,
           L0x7fffffffc848, L0x7fffffffc849, L0x7fffffffc84a, L0x7fffffffc84b,
           L0x7fffffffc84c, L0x7fffffffc84d, L0x7fffffffc84e, L0x7fffffffc84f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb8f4; Value = 0x5d3f0def731e2c63; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb8f4, L0x7ffff78bb8f5, L0x7ffff78bb8f6, L0x7ffff78bb8f7,
           L0x7ffff78bb8f8, L0x7ffff78bb8f9, L0x7ffff78bb8fa, L0x7ffff78bb8fb,
           L0x7ffff78bb8fc, L0x7ffff78bb8fd, L0x7ffff78bb8fe, L0x7ffff78bb8ff,
           L0x7ffff78bb900, L0x7ffff78bb901, L0x7ffff78bb902, L0x7ffff78bb903];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x0704b54a97931a14; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf6b96827d19e4f00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb904; Value = 0xb1198898088327ce; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb904, L0x7ffff78bb905, L0x7ffff78bb906, L0x7ffff78bb907,
           L0x7ffff78bb908, L0x7ffff78bb909, L0x7ffff78bb90a, L0x7ffff78bb90b,
           L0x7ffff78bb90c, L0x7ffff78bb90d, L0x7ffff78bb90e, L0x7ffff78bb90f,
           L0x7ffff78bb910, L0x7ffff78bb911, L0x7ffff78bb912, L0x7ffff78bb913];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x74998462a43c0939; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf6b96827d19e4f00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb914; Value = 0x0877ce633fd918f1; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb914, L0x7ffff78bb915, L0x7ffff78bb916, L0x7ffff78bb917,
           L0x7ffff78bb918, L0x7ffff78bb919, L0x7ffff78bb91a, L0x7ffff78bb91b,
           L0x7ffff78bb91c, L0x7ffff78bb91d, L0x7ffff78bb91e, L0x7ffff78bb91f,
           L0x7ffff78bb920, L0x7ffff78bb921, L0x7ffff78bb922, L0x7ffff78bb923];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x279e0d2030a6c325; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf6b96827d19e4f00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb924; Value = 0x9b1e76a109e94df6; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb924, L0x7ffff78bb925, L0x7ffff78bb926, L0x7ffff78bb927,
           L0x7ffff78bb928, L0x7ffff78bb929, L0x7ffff78bb92a, L0x7ffff78bb92b,
           L0x7ffff78bb92c, L0x7ffff78bb92d, L0x7ffff78bb92e, L0x7ffff78bb92f,
           L0x7ffff78bb930, L0x7ffff78bb931, L0x7ffff78bb932, L0x7ffff78bb933];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x3223eec217158b6d; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf6b96827d19e4f00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb934; Value = 0xffee245604533b70; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb934,L0x7ffff78bb935,L0x7ffff78bb936,L0x7ffff78bb937,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb934; Value = 0xffee245604533b70; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb934,L0x7ffff78bb935,L0x7ffff78bb936,L0x7ffff78bb937,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000004533b70; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xf6b96827d19e4f00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x2cf28b5579a7de00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000022b3cf96; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc850; Value = 0x64a2f3355197c600; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc850, L0x7fffffffc851, L0x7fffffffc852, L0x7fffffffc853,
           L0x7fffffffc854, L0x7fffffffc855, L0x7fffffffc856, L0x7fffffffc857,
           L0x7fffffffc858, L0x7fffffffc859, L0x7fffffffc85a, L0x7fffffffc85b,
           L0x7fffffffc85c, L0x7fffffffc85d, L0x7fffffffc85e, L0x7fffffffc85f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc860; Value = 0x1acea97d67b3d400; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc860, L0x7fffffffc861, L0x7fffffffc862, L0x7fffffffc863,
           L0x7fffffffc864, L0x7fffffffc865, L0x7fffffffc866, L0x7fffffffc867,
           L0x7fffffffc868, L0x7fffffffc869, L0x7fffffffc86a, L0x7fffffffc86b,
           L0x7fffffffc86c, L0x7fffffffc86d, L0x7fffffffc86e, L0x7fffffffc86f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb938; Value = 0x6a29db1effee2456; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb938, L0x7ffff78bb939, L0x7ffff78bb93a, L0x7ffff78bb93b,
           L0x7ffff78bb93c, L0x7ffff78bb93d, L0x7ffff78bb93e, L0x7ffff78bb93f,
           L0x7ffff78bb940, L0x7ffff78bb941, L0x7ffff78bb942, L0x7ffff78bb943,
           L0x7ffff78bb944, L0x7ffff78bb945, L0x7ffff78bb946, L0x7ffff78bb947];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x4e53943b18847bd4; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1acea97d67b3d400; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb948; Value = 0x12a6364ac628dad7; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb948, L0x7ffff78bb949, L0x7ffff78bb94a, L0x7ffff78bb94b,
           L0x7ffff78bb94c, L0x7ffff78bb94d, L0x7ffff78bb94e, L0x7ffff78bb94f,
           L0x7ffff78bb950, L0x7ffff78bb951, L0x7ffff78bb952, L0x7ffff78bb953,
           L0x7ffff78bb954, L0x7ffff78bb955, L0x7ffff78bb956, L0x7ffff78bb957];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x35a260c90e0bbb08; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1acea97d67b3d400; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb958; Value = 0x2d9ab3680a0fa6cb; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb958, L0x7ffff78bb959, L0x7ffff78bb95a, L0x7ffff78bb95b,
           L0x7ffff78bb95c, L0x7ffff78bb95d, L0x7ffff78bb95e, L0x7ffff78bb95f,
           L0x7ffff78bb960, L0x7ffff78bb961, L0x7ffff78bb962, L0x7ffff78bb963,
           L0x7ffff78bb964, L0x7ffff78bb965, L0x7ffff78bb966, L0x7ffff78bb967];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x8d443ce067f42643; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1acea97d67b3d400; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb968; Value = 0x67a38325f86d60f3; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb968, L0x7ffff78bb969, L0x7ffff78bb96a, L0x7ffff78bb96b,
           L0x7ffff78bb96c, L0x7ffff78bb96d, L0x7ffff78bb96e, L0x7ffff78bb96f,
           L0x7ffff78bb970, L0x7ffff78bb971, L0x7ffff78bb972, L0x7ffff78bb973,
           L0x7ffff78bb974, L0x7ffff78bb975, L0x7ffff78bb976, L0x7ffff78bb977];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xe034eacc63968d27; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1acea97d67b3d400; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb978; Value = 0xf2b55377c319dbfa; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb978,L0x7ffff78bb979,L0x7ffff78bb97a,L0x7ffff78bb97b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb978; Value = 0xf2b55377c319dbfa; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb978,L0x7ffff78bb979,L0x7ffff78bb97a,L0x7ffff78bb97b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000c319dbfa; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x1acea97d67b3d400; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x64a2f3355197c600; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x0000000077a2cd60; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc870; Value = 0xfa0e09fd07f3f400; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc870, L0x7fffffffc871, L0x7fffffffc872, L0x7fffffffc873,
           L0x7fffffffc874, L0x7fffffffc875, L0x7fffffffc876, L0x7fffffffc877,
           L0x7fffffffc878, L0x7fffffffc879, L0x7fffffffc87a, L0x7fffffffc87b,
           L0x7fffffffc87c, L0x7fffffffc87d, L0x7fffffffc87e, L0x7fffffffc87f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc880; Value = 0x39e0904970a9d900; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc880, L0x7fffffffc881, L0x7fffffffc882, L0x7fffffffc883,
           L0x7fffffffc884, L0x7fffffffc885, L0x7fffffffc886, L0x7fffffffc887,
           L0x7fffffffc888, L0x7fffffffc889, L0x7fffffffc88a, L0x7fffffffc88b,
           L0x7fffffffc88c, L0x7fffffffc88d, L0x7fffffffc88e, L0x7fffffffc88f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb97c; Value = 0x9662c964f2b55377; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb97c, L0x7ffff78bb97d, L0x7ffff78bb97e, L0x7ffff78bb97f,
           L0x7ffff78bb980, L0x7ffff78bb981, L0x7ffff78bb982, L0x7ffff78bb983,
           L0x7ffff78bb984, L0x7ffff78bb985, L0x7ffff78bb986, L0x7ffff78bb987,
           L0x7ffff78bb988, L0x7ffff78bb989, L0x7ffff78bb98a, L0x7ffff78bb98b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x7d4cfc27f678fddf; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x39e0904970a9d900; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb98c; Value = 0x16df1c66be5bec16; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb98c, L0x7ffff78bb98d, L0x7ffff78bb98e, L0x7ffff78bb98f,
           L0x7ffff78bb990, L0x7ffff78bb991, L0x7ffff78bb992, L0x7ffff78bb993,
           L0x7ffff78bb994, L0x7ffff78bb995, L0x7ffff78bb996, L0x7ffff78bb997,
           L0x7ffff78bb998, L0x7ffff78bb999, L0x7ffff78bb99a, L0x7ffff78bb99b];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x7649a5492bd2153f; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x39e0904970a9d900; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb99c; Value = 0x72c48cf19df63b1c; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb99c, L0x7ffff78bb99d, L0x7ffff78bb99e, L0x7ffff78bb99f,
           L0x7ffff78bb9a0, L0x7ffff78bb9a1, L0x7ffff78bb9a2, L0x7ffff78bb9a3,
           L0x7ffff78bb9a4, L0x7ffff78bb9a5, L0x7ffff78bb9a6, L0x7ffff78bb9a7,
           L0x7ffff78bb9a8, L0x7ffff78bb9a9, L0x7ffff78bb9aa, L0x7ffff78bb9ab];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xa797f0449afacdff; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x39e0904970a9d900; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb9ac; Value = 0xfe9344bc2ff2081c; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb9ac, L0x7ffff78bb9ad, L0x7ffff78bb9ae, L0x7ffff78bb9af,
           L0x7ffff78bb9b0, L0x7ffff78bb9b1, L0x7ffff78bb9b2, L0x7ffff78bb9b3,
           L0x7ffff78bb9b4, L0x7ffff78bb9b5, L0x7ffff78bb9b6, L0x7ffff78bb9b7,
           L0x7ffff78bb9b8, L0x7ffff78bb9b9, L0x7ffff78bb9ba, L0x7ffff78bb9bb];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x4a2c418ce9c14396; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x39e0904970a9d900; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bb9bc; Value = 0x61d8f274f5ff8330; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bb9bc,L0x7ffff78bb9bd,L0x7ffff78bb9be,L0x7ffff78bb9bf,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bb9bc; Value = 0x61d8f274f5ff8330; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bb9bc,L0x7ffff78bb9bd,L0x7ffff78bb9be,L0x7ffff78bb9bf,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000f5ff8330; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x39e0904970a9d900; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xfa0e09fd07f3f400; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000a1daa57d; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc890; Value = 0x987a47a53ddfe200; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc890, L0x7fffffffc891, L0x7fffffffc892, L0x7fffffffc893,
           L0x7fffffffc894, L0x7fffffffc895, L0x7fffffffc896, L0x7fffffffc897,
           L0x7fffffffc898, L0x7fffffffc899, L0x7fffffffc89a, L0x7fffffffc89b,
           L0x7fffffffc89c, L0x7fffffffc89d, L0x7fffffffc89e, L0x7fffffffc89f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8a0; Value = 0x43e11cbefd5fa200; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8a0, L0x7fffffffc8a1, L0x7fffffffc8a2, L0x7fffffffc8a3,
           L0x7fffffffc8a4, L0x7fffffffc8a5, L0x7fffffffc8a6, L0x7fffffffc8a7,
           L0x7fffffffc8a8, L0x7fffffffc8a9, L0x7fffffffc8aa, L0x7fffffffc8ab,
           L0x7fffffffc8ac, L0x7fffffffc8ad, L0x7fffffffc8ae, L0x7fffffffc8af];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bb9c0; Value = 0xbbcd3f7c61d8f274; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bb9c0, L0x7ffff78bb9c1, L0x7ffff78bb9c2, L0x7ffff78bb9c3,
           L0x7ffff78bb9c4, L0x7ffff78bb9c5, L0x7ffff78bb9c6, L0x7ffff78bb9c7,
           L0x7ffff78bb9c8, L0x7ffff78bb9c9, L0x7ffff78bb9ca, L0x7ffff78bb9cb,
           L0x7ffff78bb9cc, L0x7ffff78bb9cd, L0x7ffff78bb9ce, L0x7ffff78bb9cf];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x385f323aae936a1c; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x43e11cbefd5fa200; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bb9d0; Value = 0x41fedec16782965b; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bb9d0, L0x7ffff78bb9d1, L0x7ffff78bb9d2, L0x7ffff78bb9d3,
           L0x7ffff78bb9d4, L0x7ffff78bb9d5, L0x7ffff78bb9d6, L0x7ffff78bb9d7,
           L0x7ffff78bb9d8, L0x7ffff78bb9d9, L0x7ffff78bb9da, L0x7ffff78bb9db,
           L0x7ffff78bb9dc, L0x7ffff78bb9dd, L0x7ffff78bb9de, L0x7ffff78bb9df];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xa15060a726a47be8; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x43e11cbefd5fa200; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bb9e0; Value = 0x0150b07b2b2119b7; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bb9e0, L0x7ffff78bb9e1, L0x7ffff78bb9e2, L0x7ffff78bb9e3,
           L0x7ffff78bb9e4, L0x7ffff78bb9e5, L0x7ffff78bb9e6, L0x7ffff78bb9e7,
           L0x7ffff78bb9e8, L0x7ffff78bb9e9, L0x7ffff78bb9ea, L0x7ffff78bb9eb,
           L0x7ffff78bb9ec, L0x7ffff78bb9ed, L0x7ffff78bb9ee, L0x7ffff78bb9ef];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x6db17e1b395f5b3a; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x43e11cbefd5fa200; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bb9f0; Value = 0x8ccad877e2e34189; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bb9f0, L0x7ffff78bb9f1, L0x7ffff78bb9f2, L0x7ffff78bb9f3,
           L0x7ffff78bb9f4, L0x7ffff78bb9f5, L0x7ffff78bb9f6, L0x7ffff78bb9f7,
           L0x7ffff78bb9f8, L0x7ffff78bb9f9, L0x7ffff78bb9fa, L0x7ffff78bb9fb,
           L0x7ffff78bb9fc, L0x7ffff78bb9fd, L0x7ffff78bb9fe, L0x7ffff78bb9ff];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x0e60f5725b99a253; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x43e11cbefd5fa200; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bba00; Value = 0x473de47a8349af11; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bba00,L0x7ffff78bba01,L0x7ffff78bba02,L0x7ffff78bba03,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bba00; Value = 0x473de47a8349af11; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bba00,L0x7ffff78bba01,L0x7ffff78bba02,L0x7ffff78bba03,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x000000008349af11; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x43e11cbefd5fa200; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x987a47a53ddfe200; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000036a300d; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8b0; Value = 0x2743ef8bacc86400; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8b0, L0x7fffffffc8b1, L0x7fffffffc8b2, L0x7fffffffc8b3,
           L0x7fffffffc8b4, L0x7fffffffc8b5, L0x7fffffffc8b6, L0x7fffffffc8b7,
           L0x7fffffffc8b8, L0x7fffffffc8b9, L0x7fffffffc8ba, L0x7fffffffc8bb,
           L0x7fffffffc8bc, L0x7fffffffc8bd, L0x7fffffffc8be, L0x7fffffffc8bf];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8c0; Value = 0x465c72682e341a00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8c0, L0x7fffffffc8c1, L0x7fffffffc8c2, L0x7fffffffc8c3,
           L0x7fffffffc8c4, L0x7fffffffc8c5, L0x7fffffffc8c6, L0x7fffffffc8c7,
           L0x7fffffffc8c8, L0x7fffffffc8c9, L0x7fffffffc8ca, L0x7fffffffc8cb,
           L0x7fffffffc8cc, L0x7fffffffc8cd, L0x7fffffffc8ce, L0x7fffffffc8cf];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bba04; Value = 0x83edb3da473de47a; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bba04, L0x7ffff78bba05, L0x7ffff78bba06, L0x7ffff78bba07,
           L0x7ffff78bba08, L0x7ffff78bba09, L0x7ffff78bba0a, L0x7ffff78bba0b,
           L0x7ffff78bba0c, L0x7ffff78bba0d, L0x7ffff78bba0e, L0x7ffff78bba0f,
           L0x7ffff78bba10, L0x7ffff78bba11, L0x7ffff78bba12, L0x7ffff78bba13];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xce90068dadb991fa; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x465c72682e341a00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bba14; Value = 0x5d097dc75b1c7832; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bba14, L0x7ffff78bba15, L0x7ffff78bba16, L0x7ffff78bba17,
           L0x7ffff78bba18, L0x7ffff78bba19, L0x7ffff78bba1a, L0x7ffff78bba1b,
           L0x7ffff78bba1c, L0x7ffff78bba1d, L0x7ffff78bba1e, L0x7ffff78bba1f,
           L0x7ffff78bba20, L0x7ffff78bba21, L0x7ffff78bba22, L0x7ffff78bba23];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xfd5f309c5f1cc498; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x465c72682e341a00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bba24; Value = 0xa07133e212b4b54e; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bba24, L0x7ffff78bba25, L0x7ffff78bba26, L0x7ffff78bba27,
           L0x7ffff78bba28, L0x7ffff78bba29, L0x7ffff78bba2a, L0x7ffff78bba2b,
           L0x7ffff78bba2c, L0x7ffff78bba2d, L0x7ffff78bba2e, L0x7ffff78bba2f,
           L0x7ffff78bba30, L0x7ffff78bba31, L0x7ffff78bba32, L0x7ffff78bba33];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x8fade4340ae24a38; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x465c72682e341a00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bba34; Value = 0xad08d531ec6600b2; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bba34, L0x7ffff78bba35, L0x7ffff78bba36, L0x7ffff78bba37,
           L0x7ffff78bba38, L0x7ffff78bba39, L0x7ffff78bba3a, L0x7ffff78bba3b,
           L0x7ffff78bba3c, L0x7ffff78bba3d, L0x7ffff78bba3e, L0x7ffff78bba3f,
           L0x7ffff78bba40, L0x7ffff78bba41, L0x7ffff78bba42, L0x7ffff78bba43];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x9d37dfa90222fe87; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x465c72682e341a00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bba44; Value = 0x02447bc2e80219f8; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bba44,L0x7ffff78bba45,L0x7ffff78bba46,L0x7ffff78bba47,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bba44; Value = 0x02447bc2e80219f8; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bba44,L0x7ffff78bba45,L0x7ffff78bba46,L0x7ffff78bba47,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000e80219f8; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x465c72682e341a00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x2743ef8bacc86400; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000005967c14d; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8d0; Value = 0xa69cd2e84e743a00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8d0, L0x7fffffffc8d1, L0x7fffffffc8d2, L0x7fffffffc8d3,
           L0x7fffffffc8d4, L0x7fffffffc8d5, L0x7fffffffc8d6, L0x7fffffffc8d7,
           L0x7fffffffc8d8, L0x7fffffffc8d9, L0x7fffffffc8da, L0x7fffffffc8db,
           L0x7fffffffc8dc, L0x7fffffffc8dd, L0x7fffffffc8de, L0x7fffffffc8df];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc8e0; Value = 0x8e038f028c018d00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc8e0, L0x7fffffffc8e1, L0x7fffffffc8e2, L0x7fffffffc8e3,
           L0x7fffffffc8e4, L0x7fffffffc8e5, L0x7fffffffc8e6, L0x7fffffffc8e7,
           L0x7fffffffc8e8, L0x7fffffffc8e9, L0x7fffffffc8ea, L0x7fffffffc8eb,
           L0x7fffffffc8ec, L0x7fffffffc8ed, L0x7fffffffc8ee, L0x7fffffffc8ef];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bba48; Value = 0xe284437902447bc2; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bba48, L0x7ffff78bba49, L0x7ffff78bba4a, L0x7ffff78bba4b,
           L0x7ffff78bba4c, L0x7ffff78bba4d, L0x7ffff78bba4e, L0x7ffff78bba4f,
           L0x7ffff78bba50, L0x7ffff78bba51, L0x7ffff78bba52, L0x7ffff78bba53,
           L0x7ffff78bba54, L0x7ffff78bba55, L0x7ffff78bba56, L0x7ffff78bba57];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xb2fe54eae2759679; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x8e038f028c018d00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bba58; Value = 0x6d5108adc8d1a99a; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bba58, L0x7ffff78bba59, L0x7ffff78bba5a, L0x7ffff78bba5b,
           L0x7ffff78bba5c, L0x7ffff78bba5d, L0x7ffff78bba5e, L0x7ffff78bba5f,
           L0x7ffff78bba60, L0x7ffff78bba61, L0x7ffff78bba62, L0x7ffff78bba63,
           L0x7ffff78bba64, L0x7ffff78bba65, L0x7ffff78bba66, L0x7ffff78bba67];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x6d3694038c808f7e; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x8e038f028c018d00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bba68; Value = 0xa06881a955a03d0f; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bba68, L0x7ffff78bba69, L0x7ffff78bba6a, L0x7ffff78bba6b,
           L0x7ffff78bba6c, L0x7ffff78bba6d, L0x7ffff78bba6e, L0x7ffff78bba6f,
           L0x7ffff78bba70, L0x7ffff78bba71, L0x7ffff78bba72, L0x7ffff78bba73,
           L0x7ffff78bba74, L0x7ffff78bba75, L0x7ffff78bba76, L0x7ffff78bba77];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x6b8f6670d8975b1e; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x8e038f028c018d00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bba78; Value = 0xd4226e877f7f23ea; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bba78, L0x7ffff78bba79, L0x7ffff78bba7a, L0x7ffff78bba7b,
           L0x7ffff78bba7c, L0x7ffff78bba7d, L0x7ffff78bba7e, L0x7ffff78bba7f,
           L0x7ffff78bba80, L0x7ffff78bba81, L0x7ffff78bba82, L0x7ffff78bba83,
           L0x7ffff78bba84, L0x7ffff78bba85, L0x7ffff78bba86, L0x7ffff78bba87];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0x9b3a92e3083dfeb1; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x8e038f028c018d00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bba88; Value = 0xbb2b484019453d36; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bba88,L0x7ffff78bba89,L0x7ffff78bba8a,L0x7ffff78bba8b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bba88; Value = 0xbb2b484019453d36; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bba88,L0x7ffff78bba89,L0x7ffff78bba8a,L0x7ffff78bba8b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x0000000019453d36; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x8e038f028c018d00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xa69cd2e84e743a00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000d8afb2d6; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc8f0; Value = 0xb488ccf044783c00; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc8f0, L0x7fffffffc8f1, L0x7fffffffc8f2, L0x7fffffffc8f3,
           L0x7fffffffc8f4, L0x7fffffffc8f5, L0x7fffffffc8f6, L0x7fffffffc8f7,
           L0x7fffffffc8f8, L0x7fffffffc8f9, L0x7fffffffc8fa, L0x7fffffffc8fb,
           L0x7fffffffc8fc, L0x7fffffffc8fd, L0x7fffffffc8fe, L0x7fffffffc8ff];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc900; Value = 0xb55874992cc1ed00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc900, L0x7fffffffc901, L0x7fffffffc902, L0x7fffffffc903,
           L0x7fffffffc904, L0x7fffffffc905, L0x7fffffffc906, L0x7fffffffc907,
           L0x7fffffffc908, L0x7fffffffc909, L0x7fffffffc90a, L0x7fffffffc90b,
           L0x7fffffffc90c, L0x7fffffffc90d, L0x7fffffffc90e, L0x7fffffffc90f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bba8c; Value = 0x65e17620bb2b4840; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bba8c, L0x7ffff78bba8d, L0x7ffff78bba8e, L0x7ffff78bba8f,
           L0x7ffff78bba90, L0x7ffff78bba91, L0x7ffff78bba92, L0x7ffff78bba93,
           L0x7ffff78bba94, L0x7ffff78bba95, L0x7ffff78bba96, L0x7ffff78bba97,
           L0x7ffff78bba98, L0x7ffff78bba99, L0x7ffff78bba9a, L0x7ffff78bba9b];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xc1121895969f9d0b; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb55874992cc1ed00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bba9c; Value = 0x0771ca4784823ceb; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bba9c, L0x7ffff78bba9d, L0x7ffff78bba9e, L0x7ffff78bba9f,
           L0x7ffff78bbaa0, L0x7ffff78bbaa1, L0x7ffff78bbaa2, L0x7ffff78bbaa3,
           L0x7ffff78bbaa4, L0x7ffff78bbaa5, L0x7ffff78bbaa6, L0x7ffff78bbaa7,
           L0x7ffff78bbaa8, L0x7ffff78bbaa9, L0x7ffff78bbaaa, L0x7ffff78bbaab];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x77835f1f41317b48; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb55874992cc1ed00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bbaac; Value = 0x3795f1c1ad576494; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bbaac, L0x7ffff78bbaad, L0x7ffff78bbaae, L0x7ffff78bbaaf,
           L0x7ffff78bbab0, L0x7ffff78bbab1, L0x7ffff78bbab2, L0x7ffff78bbab3,
           L0x7ffff78bbab4, L0x7ffff78bbab5, L0x7ffff78bbab6, L0x7ffff78bbab7,
           L0x7ffff78bbab8, L0x7ffff78bbab9, L0x7ffff78bbaba, L0x7ffff78bbabb];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x6e4758848592ce73; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb55874992cc1ed00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bbabc; Value = 0xc75d14a68b4e9d14; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bbabc, L0x7ffff78bbabd, L0x7ffff78bbabe, L0x7ffff78bbabf,
           L0x7ffff78bbac0, L0x7ffff78bbac1, L0x7ffff78bbac2, L0x7ffff78bbac3,
           L0x7ffff78bbac4, L0x7ffff78bbac5, L0x7ffff78bbac6, L0x7ffff78bbac7,
           L0x7ffff78bbac8, L0x7ffff78bbac9, L0x7ffff78bbaca, L0x7ffff78bbacb];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xf84fc641ebdeb109; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb55874992cc1ed00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bbacc; Value = 0x6f38a512d170f688; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bbacc,L0x7ffff78bbacd,L0x7ffff78bbace,L0x7ffff78bbacf,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bbacc; Value = 0x6f38a512d170f688; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bbacc,L0x7ffff78bbacd,L0x7ffff78bbace,L0x7ffff78bbacf,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000d170f688; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xb55874992cc1ed00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0xb488ccf044783c00; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000a47f27c6; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc910; Value = 0x1dc8ac7964b1d500; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc910, L0x7fffffffc911, L0x7fffffffc912, L0x7fffffffc913,
           L0x7fffffffc914, L0x7fffffffc915, L0x7fffffffc916, L0x7fffffffc917,
           L0x7fffffffc918, L0x7fffffffc919, L0x7fffffffc91a, L0x7fffffffc91b,
           L0x7fffffffc91c, L0x7fffffffc91d, L0x7fffffffc91e, L0x7fffffffc91f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc920; Value = 0xcb342ed11ae5ff00; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc920, L0x7fffffffc921, L0x7fffffffc922, L0x7fffffffc923,
           L0x7fffffffc924, L0x7fffffffc925, L0x7fffffffc926, L0x7fffffffc927,
           L0x7fffffffc928, L0x7fffffffc929, L0x7fffffffc92a, L0x7fffffffc92b,
           L0x7fffffffc92c, L0x7fffffffc92d, L0x7fffffffc92e, L0x7fffffffc92f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbad0; Value = 0xc0c18f696f38a512; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bbad0, L0x7ffff78bbad1, L0x7ffff78bbad2, L0x7ffff78bbad3,
           L0x7ffff78bbad4, L0x7ffff78bbad5, L0x7ffff78bbad6, L0x7ffff78bbad7,
           L0x7ffff78bbad8, L0x7ffff78bbad9, L0x7ffff78bbada, L0x7ffff78bbadb,
           L0x7ffff78bbadc, L0x7ffff78bbadd, L0x7ffff78bbade, L0x7ffff78bbadf];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x555f25542ce1ff92; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbae0; Value = 0x7aa49246eba54bfa; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bbae0, L0x7ffff78bbae1, L0x7ffff78bbae2, L0x7ffff78bbae3,
           L0x7ffff78bbae4, L0x7ffff78bbae5, L0x7ffff78bbae6, L0x7ffff78bbae7,
           L0x7ffff78bbae8, L0x7ffff78bbae9, L0x7ffff78bbaea, L0x7ffff78bbaeb,
           L0x7ffff78bbaec, L0x7ffff78bbaed, L0x7ffff78bbaee, L0x7ffff78bbaef];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0xc30a6c3298605c86; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bbaf0; Value = 0xa02f91e38d212f30; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bbaf0, L0x7ffff78bbaf1, L0x7ffff78bbaf2, L0x7ffff78bbaf3,
           L0x7ffff78bbaf4, L0x7ffff78bbaf5, L0x7ffff78bbaf6, L0x7ffff78bbaf7,
           L0x7ffff78bbaf8, L0x7ffff78bbaf9, L0x7ffff78bbafa, L0x7ffff78bbafb,
           L0x7ffff78bbafc, L0x7ffff78bbafd, L0x7ffff78bbafe, L0x7ffff78bbaff];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xf64ff8085a526647; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bbb00; Value = 0xdc995c925f713be1; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bbb00, L0x7ffff78bbb01, L0x7ffff78bbb02, L0x7ffff78bbb03,
           L0x7ffff78bbb04, L0x7ffff78bbb05, L0x7ffff78bbb06, L0x7ffff78bbb07,
           L0x7ffff78bbb08, L0x7ffff78bbb09, L0x7ffff78bbb0a, L0x7ffff78bbb0b,
           L0x7ffff78bbb0c, L0x7ffff78bbb0d, L0x7ffff78bbb0e, L0x7ffff78bbb0f];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xfc0cdb217d344214; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bbb10; Value = 0xcdad6b3aa58d0722; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bbb10,L0x7ffff78bbb11,L0x7ffff78bbb12,L0x7ffff78bbb13,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bbb10; Value = 0xcdad6b3aa58d0722; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bbb10,L0x7ffff78bbb11,L0x7ffff78bbb12,L0x7ffff78bbb13,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000a58d0722; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x1dc8ac7964b1d500; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000c5ca3314; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc930; Value = 0x269357e2c471b500; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc930, L0x7fffffffc931, L0x7fffffffc932, L0x7fffffffc933,
           L0x7fffffffc934, L0x7fffffffc935, L0x7fffffffc936, L0x7fffffffc937,
           L0x7fffffffc938, L0x7fffffffc939, L0x7fffffffc93a, L0x7fffffffc93b,
           L0x7fffffffc93c, L0x7fffffffc93d, L0x7fffffffc93e, L0x7fffffffc93f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc940; Value = 0x56f307a2f451a500; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc940, L0x7fffffffc941, L0x7fffffffc942, L0x7fffffffc943,
           L0x7fffffffc944, L0x7fffffffc945, L0x7fffffffc946, L0x7fffffffc947,
           L0x7fffffffc948, L0x7fffffffc949, L0x7fffffffc94a, L0x7fffffffc94b,
           L0x7fffffffc94c, L0x7fffffffc94d, L0x7fffffffc94e, L0x7fffffffc94f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbb14; Value = 0xd57ea77acdad6b3a; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bbb14, L0x7ffff78bbb15, L0x7ffff78bbb16, L0x7ffff78bbb17,
           L0x7ffff78bbb18, L0x7ffff78bbb19, L0x7ffff78bbb1a, L0x7ffff78bbb1b,
           L0x7ffff78bbb1c, L0x7ffff78bbb1d, L0x7ffff78bbb1e, L0x7ffff78bbb1f,
           L0x7ffff78bbb20, L0x7ffff78bbb21, L0x7ffff78bbb22, L0x7ffff78bbb23];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x3de27347f7090fdc; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x56f307a2f451a500; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbb24; Value = 0x3a1472f379335b46; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bbb24, L0x7ffff78bbb25, L0x7ffff78bbb26, L0x7ffff78bbb27,
           L0x7ffff78bbb28, L0x7ffff78bbb29, L0x7ffff78bbb2a, L0x7ffff78bbb2b,
           L0x7ffff78bbb2c, L0x7ffff78bbb2d, L0x7ffff78bbb2e, L0x7ffff78bbb2f,
           L0x7ffff78bbb30, L0x7ffff78bbb31, L0x7ffff78bbb32, L0x7ffff78bbb33];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x4b2f9b2b83901bb7; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x56f307a2f451a500; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bbb34; Value = 0xa474fa34ed0e4521; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bbb34, L0x7ffff78bbb35, L0x7ffff78bbb36, L0x7ffff78bbb37,
           L0x7ffff78bbb38, L0x7ffff78bbb39, L0x7ffff78bbb3a, L0x7ffff78bbb3b,
           L0x7ffff78bbb3c, L0x7ffff78bbb3d, L0x7ffff78bbb3e, L0x7ffff78bbb3f,
           L0x7ffff78bbb40, L0x7ffff78bbb41, L0x7ffff78bbb42, L0x7ffff78bbb43];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0xaa456be1bd626c5d; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x56f307a2f451a500; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bbb44; Value = 0x573db895ab1e5505; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bbb44, L0x7ffff78bbb45, L0x7ffff78bbb46, L0x7ffff78bbb47,
           L0x7ffff78bbb48, L0x7ffff78bbb49, L0x7ffff78bbb4a, L0x7ffff78bbb4b,
           L0x7ffff78bbb4c, L0x7ffff78bbb4d, L0x7ffff78bbb4e, L0x7ffff78bbb4f,
           L0x7ffff78bbb50, L0x7ffff78bbb51, L0x7ffff78bbb52, L0x7ffff78bbb53];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xe06d7ed6bc2ace4c; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x56f307a2f451a500; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bbb54; Value = 0x53103e13ad720541; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bbb54,L0x7ffff78bbb55,L0x7ffff78bbb56,L0x7ffff78bbb57,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bbb54; Value = 0x53103e13ad720541; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bbb54,L0x7ffff78bbb55,L0x7ffff78bbb56,L0x7ffff78bbb57,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000ad720541; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x56f307a2f451a500; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x269357e2c471b500; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000352d2e40; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc950; Value = 0x219552e6c773b400; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc950, L0x7fffffffc951, L0x7fffffffc952, L0x7fffffffc953,
           L0x7fffffffc954, L0x7fffffffc955, L0x7fffffffc956, L0x7fffffffc957,
           L0x7fffffffc958, L0x7fffffffc959, L0x7fffffffc95a, L0x7fffffffc95b,
           L0x7fffffffc95c, L0x7fffffffc95d, L0x7fffffffc95e, L0x7fffffffc95f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc960; Value = 0x269357e2c471b500; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc960, L0x7fffffffc961, L0x7fffffffc962, L0x7fffffffc963,
           L0x7fffffffc964, L0x7fffffffc965, L0x7fffffffc966, L0x7fffffffc967,
           L0x7fffffffc968, L0x7fffffffc969, L0x7fffffffc96a, L0x7fffffffc96b,
           L0x7fffffffc96c, L0x7fffffffc96d, L0x7fffffffc96e, L0x7fffffffc96f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbb58; Value = 0x0469a7c253103e13; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bbb58, L0x7ffff78bbb59, L0x7ffff78bbb5a, L0x7ffff78bbb5b,
           L0x7ffff78bbb5c, L0x7ffff78bbb5d, L0x7ffff78bbb5e, L0x7ffff78bbb5f,
           L0x7ffff78bbb60, L0x7ffff78bbb61, L0x7ffff78bbb62, L0x7ffff78bbb63,
           L0x7ffff78bbb64, L0x7ffff78bbb65, L0x7ffff78bbb66, L0x7ffff78bbb67];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0x32f85bbf828fe786; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbb68; Value = 0xff643daa4af6996a; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bbb68, L0x7ffff78bbb69, L0x7ffff78bbb6a, L0x7ffff78bbb6b,
           L0x7ffff78bbb6c, L0x7ffff78bbb6d, L0x7ffff78bbb6e, L0x7ffff78bbb6f,
           L0x7ffff78bbb70, L0x7ffff78bbb71, L0x7ffff78bbb72, L0x7ffff78bbb73,
           L0x7ffff78bbb74, L0x7ffff78bbb75, L0x7ffff78bbb76, L0x7ffff78bbb77];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x1168bce6bfa00786; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bbb78; Value = 0x6e699a6b509ecba1; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bbb78, L0x7ffff78bbb79, L0x7ffff78bbb7a, L0x7ffff78bbb7b,
           L0x7ffff78bbb7c, L0x7ffff78bbb7d, L0x7ffff78bbb7e, L0x7ffff78bbb7f,
           L0x7ffff78bbb80, L0x7ffff78bbb81, L0x7ffff78bbb82, L0x7ffff78bbb83,
           L0x7ffff78bbb84, L0x7ffff78bbb85, L0x7ffff78bbb86, L0x7ffff78bbb87];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x46f1ccf7992e99b9; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bbb88; Value = 0x705e1c72710c7657; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bbb88, L0x7ffff78bbb89, L0x7ffff78bbb8a, L0x7ffff78bbb8b,
           L0x7ffff78bbb8c, L0x7ffff78bbb8d, L0x7ffff78bbb8e, L0x7ffff78bbb8f,
           L0x7ffff78bbb90, L0x7ffff78bbb91, L0x7ffff78bbb92, L0x7ffff78bbb93,
           L0x7ffff78bbb94, L0x7ffff78bbb95, L0x7ffff78bbb96, L0x7ffff78bbb97];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xc1110a7ba9c39e1b; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bbb98; Value = 0x219f12a9a5390ec3; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bbb98,L0x7ffff78bbb99,L0x7ffff78bbb9a,L0x7ffff78bbb9b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bbb98; Value = 0x219f12a9a5390ec3; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bbb98,L0x7ffff78bbb99,L0x7ffff78bbb9a,L0x7ffff78bbb9b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000a5390ec3; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x219552e6c773b400; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x00000000b30a7957; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* movdqa (%r14),%xmm3                             #! EA = L0x7fffffffc970; Value = 0x219552e6c773b400; PC = 0x55555555aab0 *)
mov %xmm3 [L0x7fffffffc970, L0x7fffffffc971, L0x7fffffffc972, L0x7fffffffc973,
           L0x7fffffffc974, L0x7fffffffc975, L0x7fffffffc976, L0x7fffffffc977,
           L0x7fffffffc978, L0x7fffffffc979, L0x7fffffffc97a, L0x7fffffffc97b,
           L0x7fffffffc97c, L0x7fffffffc97d, L0x7fffffffc97e, L0x7fffffffc97f];
(* movdqa 0x10(%r14),%xmm1                         #! EA = L0x7fffffffc980; Value = 0x269357e2c471b500; PC = 0x55555555aab5 *)
mov %xmm1 [L0x7fffffffc980, L0x7fffffffc981, L0x7fffffffc982, L0x7fffffffc983,
           L0x7fffffffc984, L0x7fffffffc985, L0x7fffffffc986, L0x7fffffffc987,
           L0x7fffffffc988, L0x7fffffffc989, L0x7fffffffc98a, L0x7fffffffc98b,
           L0x7fffffffc98c, L0x7fffffffc98d, L0x7fffffffc98e, L0x7fffffffc98f];
(* movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7fffffffc700; PC = 0x55555555aabf *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm3;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aac6 = 0x55555555aac6;
(* movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbb9c; Value = 0xb1e8a53d219f12a9; PC = 0x55555555aacc *)
mov %xmm2 [L0x7ffff78bbb9c, L0x7ffff78bbb9d, L0x7ffff78bbb9e, L0x7ffff78bbb9f,
           L0x7ffff78bbba0, L0x7ffff78bbba1, L0x7ffff78bbba2, L0x7ffff78bbba3,
           L0x7ffff78bbba4, L0x7ffff78bbba5, L0x7ffff78bbba6, L0x7ffff78bbba7,
           L0x7ffff78bbba8, L0x7ffff78bbba9, L0x7ffff78bbbaa, L0x7ffff78bbbab];
(* movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2 *)
mov %xmm0 %xmm3;
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555aad6 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada *)
mov %xmm5 %xmm3;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555aade = 0x55555555aade;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   (%rbx),%xmm0                             #! EA = L0x7fffffffc790; Value = 0xd408d4f1123a61f4; PC = 0x55555555aae3 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555aaeb *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,(%rbx)                             #! EA = L0x7fffffffc790; PC = 0x55555555aaf0 *)
mov [L0x7fffffffc790,L0x7fffffffc791,L0x7fffffffc792,L0x7fffffffc793,
     L0x7fffffffc794,L0x7fffffffc795,L0x7fffffffc796,L0x7fffffffc797,
     L0x7fffffffc798,L0x7fffffffc799,L0x7fffffffc79a,L0x7fffffffc79b,
     L0x7fffffffc79c,L0x7fffffffc79d,L0x7fffffffc79e,L0x7fffffffc79f] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555aaf3 = 0x55555555aaf3;
(* movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbbac; Value = 0x58653d4b561b9128; PC = 0x55555555aaf9 *)
mov %xmm2 [L0x7ffff78bbbac, L0x7ffff78bbbad, L0x7ffff78bbbae, L0x7ffff78bbbaf,
           L0x7ffff78bbbb0, L0x7ffff78bbbb1, L0x7ffff78bbbb2, L0x7ffff78bbbb3,
           L0x7ffff78bbbb4, L0x7ffff78bbbb5, L0x7ffff78bbbb6, L0x7ffff78bbbb7,
           L0x7ffff78bbbb8, L0x7ffff78bbbb9, L0x7ffff78bbbba, L0x7ffff78bbbbb];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab04 = 0x55555555ab04;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x10(%rbx),%xmm0                         #! EA = L0x7fffffffc7a0; Value = 0x1e1dfdecf9cc0eb1; PC = 0x55555555ab09 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555ab12 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x10(%rbx)                         #! EA = L0x7fffffffc7a0; PC = 0x55555555ab17 *)
mov [L0x7fffffffc7a0,L0x7fffffffc7a1,L0x7fffffffc7a2,L0x7fffffffc7a3,
     L0x7fffffffc7a4,L0x7fffffffc7a5,L0x7fffffffc7a6,L0x7fffffffc7a7,
     L0x7fffffffc7a8,L0x7fffffffc7a9,L0x7fffffffc7aa,L0x7fffffffc7ab,
     L0x7fffffffc7ac,L0x7fffffffc7ad,L0x7fffffffc7ae,L0x7fffffffc7af] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab1b = 0x55555555ab1b;
(* movdqu 0x20(%r12),%xmm2                         #! EA = L0x7ffff78bbbbc; Value = 0xd35bda425b72dc26; PC = 0x55555555ab21 *)
mov %xmm2 [L0x7ffff78bbbbc, L0x7ffff78bbbbd, L0x7ffff78bbbbe, L0x7ffff78bbbbf,
           L0x7ffff78bbbc0, L0x7ffff78bbbc1, L0x7ffff78bbbc2, L0x7ffff78bbbc3,
           L0x7ffff78bbbc4, L0x7ffff78bbbc5, L0x7ffff78bbbc6, L0x7ffff78bbbc7,
           L0x7ffff78bbbc8, L0x7ffff78bbbc9, L0x7ffff78bbbca, L0x7ffff78bbbcb];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab28 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab2c *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab2c = 0x55555555ab2c;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x20(%rbx),%xmm0                         #! EA = L0x7fffffffc7b0; Value = 0x97010274ce06b4a3; PC = 0x55555555ab31 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555ab3a *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x20(%rbx)                         #! EA = L0x7fffffffc7b0; PC = 0x55555555ab3f *)
mov [L0x7fffffffc7b0,L0x7fffffffc7b1,L0x7fffffffc7b2,L0x7fffffffc7b3,
     L0x7fffffffc7b4,L0x7fffffffc7b5,L0x7fffffffc7b6,L0x7fffffffc7b7,
     L0x7fffffffc7b8,L0x7fffffffc7b9,L0x7fffffffc7ba,L0x7fffffffc7bb,
     L0x7fffffffc7bc,L0x7fffffffc7bd,L0x7fffffffc7be,L0x7fffffffc7bf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab43 *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab43 = 0x55555555ab43;
(* movdqu 0x30(%r12),%xmm2                         #! EA = L0x7ffff78bbbcc; Value = 0xf09f02b7f217c213; PC = 0x55555555ab49 *)
mov %xmm2 [L0x7ffff78bbbcc, L0x7ffff78bbbcd, L0x7ffff78bbbce, L0x7ffff78bbbcf,
           L0x7ffff78bbbd0, L0x7ffff78bbbd1, L0x7ffff78bbbd2, L0x7ffff78bbbd3,
           L0x7ffff78bbbd4, L0x7ffff78bbbd5, L0x7ffff78bbbd6, L0x7ffff78bbbd7,
           L0x7ffff78bbbd8, L0x7ffff78bbbd9, L0x7ffff78bbbda, L0x7ffff78bbbdb];
(* movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab50 *)
mov %xmm0 %xmm5;
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab54 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ab54 = 0x55555555ab54;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* pxor   0x30(%rbx),%xmm0                         #! EA = L0x7fffffffc7c0; Value = 0xe7048e2e3bf22d6d; PC = 0x55555555ab59 *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf];
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555ab62 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movaps %xmm0,0x30(%rbx)                         #! EA = L0x7fffffffc7c0; PC = 0x55555555ab67 *)
mov [L0x7fffffffc7c0,L0x7fffffffc7c1,L0x7fffffffc7c2,L0x7fffffffc7c3,
     L0x7fffffffc7c4,L0x7fffffffc7c5,L0x7fffffffc7c6,L0x7fffffffc7c7,
     L0x7fffffffc7c8,L0x7fffffffc7c9,L0x7fffffffc7ca,L0x7fffffffc7cb,
     L0x7fffffffc7cc,L0x7fffffffc7cd,L0x7fffffffc7ce,L0x7fffffffc7cf] %xmm0;
(* #je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab6b *)
#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! 0x55555555ab6b = 0x55555555ab6b;
(* #je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe *)
#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! 0x55555555abfe = 0x55555555abfe;
(* mov    -0x68(%rbp),%rax                         #! EA = L0x7fffffffc6d8; Value = 0x0000000000000040; PC = 0x55555555ac00 *)
mov %rax [L0x7fffffffc6d8,L0x7fffffffc6d9,L0x7fffffffc6da,L0x7fffffffc6db,
          L0x7fffffffc6dc,L0x7fffffffc6dd,L0x7fffffffc6de,L0x7fffffffc6df];
(* mov    %r15d,%esi                               #! PC = 0x55555555ac04 *)
mov [m0,m1,m2,m3,_,_,_,_] %r15;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7fffffffc6f0; PC = 0x55555555ac07 *)
mov [L0x7fffffffc6f0,L0x7fffffffc6f1,L0x7fffffffc6f2,L0x7fffffffc6f3,
     L0x7fffffffc6f4,L0x7fffffffc6f5,L0x7fffffffc6f6,L0x7fffffffc6f7,
     L0x7fffffffc6f8,L0x7fffffffc6f9,L0x7fffffffc6fa,L0x7fffffffc6fb,
     L0x7fffffffc6fc,L0x7fffffffc6fd,L0x7fffffffc6fe,L0x7fffffffc6ff] %xmm1;
(* #call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f *)
#call   0x555555556ff0 <_load_xmm>              #! 0x55555555ac0f = 0x55555555ac0f;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* mov    %rax,0x38(%rsp)                          #! EA = L0x7fffffffc6b8; PC = 0x555555557005 *)
mov [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
     L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf] %rax;
(* xor    %eax,%eax                                #! PC = 0x55555555700a *)
mov %rax [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e *)
#je     0x555555557020 <_load_xmm+48>           #! 0x55555555700e = 0x55555555700e;
(* mov    %esi,%edx                                #! PC = 0x555555557013 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rdx [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rdi,%rsi                                #! PC = 0x555555557015 *)
mov %rsi %rdi;
(* mov    %r8,%rdi                                 #! PC = 0x555555557018 *)
mov %rdi %r8;
(* #call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b *)
#call   0x5555555552d0 <memcpy@plt>             #! 0x55555555701b = 0x55555555701b;
(* #! -> SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44 *)
mov %rax %rdi;
(* #jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b *)
#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! 0x7ffff7aebf4b = 0x7ffff7aebf4b;
(* #jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83 *)
#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! 0x7ffff7aebf83 = 0x7ffff7aebf83;
(* #jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88 *)
#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! 0x7ffff7aebf88 = 0x7ffff7aebf88;
(* #jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! PC = 0x7ffff7aebf8e *)
#jae    0x7ffff7aebf74 <__memmove_evex_unaligned_erms+52>#! 0x7ffff7aebf8e = 0x7ffff7aebf8e;
(* mov    (%rsi),%ecx                              #! EA = L0x7ffff78bbbdc; Value = 0xee823df0e6fb3048; PC = 0x7ffff7aebf74 *)
mov %rcx [L0x7ffff78bbbdc,L0x7ffff78bbbdd,L0x7ffff78bbbde,L0x7ffff78bbbdf,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    (%rsi,%rdx,1),%esi                       #! EA = L0x7ffff78bbbdc; Value = 0xee823df0e6fb3048; PC = 0x7ffff7aebf76 *)
mov %rsi [L0x7ffff78bbbdc,L0x7ffff78bbbdd,L0x7ffff78bbbde,L0x7ffff78bbbdf,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf79 *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rcx;
(* mov    %esi,(%rdi,%rdx,1)                       #! EA = L0x7fffffffc680; PC = 0x7ffff7aebf7b *)
mov [L0x7fffffffc680,L0x7fffffffc681,L0x7fffffffc682,L0x7fffffffc683,_,_,_,_]
    %rsi;
(* #! <- SP = 0x7fffffffc678 *)
#! 0x7fffffffc678 = 0x7fffffffc678;
(* #ret                                            #! PC = 0x7ffff7aebf7e *)
#ret                                            #! 0x7ffff7aebf7e = 0x7ffff7aebf7e;
(* movdqa (%rsp),%xmm0                             #! EA = L0x7fffffffc680; Value = 0x00000000e6fb3048; PC = 0x555555557020 *)
mov %xmm0 [L0x7fffffffc680, L0x7fffffffc681, L0x7fffffffc682, L0x7fffffffc683,
           L0x7fffffffc684, L0x7fffffffc685, L0x7fffffffc686, L0x7fffffffc687,
           L0x7fffffffc688, L0x7fffffffc689, L0x7fffffffc68a, L0x7fffffffc68b,
           L0x7fffffffc68c, L0x7fffffffc68d, L0x7fffffffc68e, L0x7fffffffc68f];
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc6b8; Value = 0x843472637f9f7c00; PC = 0x555555557025 *)
mov %rax [L0x7fffffffc6b8,L0x7fffffffc6b9,L0x7fffffffc6ba,L0x7fffffffc6bb,
          L0x7fffffffc6bc,L0x7fffffffc6bd,L0x7fffffffc6be,L0x7fffffffc6bf];
(* #jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033 *)
#jne    0x555555557037 <_load_xmm+71>           #! 0x555555557033 = 0x555555557033;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557036 *)
#ret                                            #! 0x555555557036 = 0x555555557036;
(* movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7fffffffc6f0; Value = 0x269357e2c471b500; PC = 0x55555555ac14 *)
mov %xmm1 [L0x7fffffffc6f0, L0x7fffffffc6f1, L0x7fffffffc6f2, L0x7fffffffc6f3,
           L0x7fffffffc6f4, L0x7fffffffc6f5, L0x7fffffffc6f6, L0x7fffffffc6f7,
           L0x7fffffffc6f8, L0x7fffffffc6f9, L0x7fffffffc6fa, L0x7fffffffc6fb,
           L0x7fffffffc6fc, L0x7fffffffc6fd, L0x7fffffffc6fe, L0x7fffffffc6ff];
(* movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19 *)
mov %xmm2 %xmm0;
(* movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7fffffffc700; Value = 0x219552e6c773b400; PC = 0x55555555ac1d *)
mov %xmm0 [L0x7fffffffc700, L0x7fffffffc701, L0x7fffffffc702, L0x7fffffffc703,
           L0x7fffffffc704, L0x7fffffffc705, L0x7fffffffc706, L0x7fffffffc707,
           L0x7fffffffc708, L0x7fffffffc709, L0x7fffffffc70a, L0x7fffffffc70b,
           L0x7fffffffc70c, L0x7fffffffc70d, L0x7fffffffc70e, L0x7fffffffc70f];
(* #call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22 *)
#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! 0x55555555ac22 = 0x55555555ac22;
(* #! -> SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90 *)
mov %xmm3 [L0x555555566030, L0x555555566031, L0x555555566032, L0x555555566033,
           L0x555555566034, L0x555555566035, L0x555555566036, L0x555555566037,
           L0x555555566038, L0x555555566039, L0x55555556603a, L0x55555556603b,
           L0x55555556603c, L0x55555556603d, L0x55555556603e, L0x55555556603f];
(* movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98 *)
mov %xmm4 %xmm2;
(* psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
join s0 p1 p0; shr s0 s0 0x4@uint16; spl t1 t0 s0 8;
join s1 p3 p2; shr s1 s1 0x4@uint16; spl t3 t2 s1 8;
join s2 p5 p4; shr s2 s2 0x4@uint16; spl t5 t4 s2 8;
join s3 p7 p6; shr s3 s3 0x4@uint16; spl t7 t6 s3 8;
join s4 p9 p8; shr s4 s4 0x4@uint16; spl t9 t8 s4 8;
join s5 pb pa; shr s5 s5 0x4@uint16; spl tb ta s5 8;
join s6 pd pc; shr s6 s6 0x4@uint16; spl td tc s6 8;
join s7 pf pe; shr s7 s7 0x4@uint16; spl tf te s7 8;
mov %xmm2 [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf];
(* pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1 *)
and %xmm4@uint8[16] %xmm4 %xmm3;
(* pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5 *)
and %xmm2@uint8[16] %xmm2 %xmm3;
(* pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9 *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm4;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm0;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm0 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae *)
mov [p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, pa, pb, pc, pd, pe, pf] %xmm2;
mov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %xmm1;
inline vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,
                 p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,pa,pb,pc,pd,pe,pf,
                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);
mov %xmm1 [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df];
(* pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3 *)
xor %xmm0@uint8[16] %xmm0 %xmm1;
(* #! <- SP = 0x7fffffffc6c8 *)
#! 0x7fffffffc6c8 = 0x7fffffffc6c8;
(* #ret                                            #! PC = 0x555555557eb7 *)
#ret                                            #! 0x555555557eb7 = 0x555555557eb7;
(* mov    -0x70(%rbp),%rax                         #! EA = L0x7fffffffc6d0; Value = 0x00007fffffffc7d0; PC = 0x55555555ac27 *)
mov %rax [L0x7fffffffc6d0,L0x7fffffffc6d1,L0x7fffffffc6d2,L0x7fffffffc6d3,
          L0x7fffffffc6d4,L0x7fffffffc6d5,L0x7fffffffc6d6,L0x7fffffffc6d7];
(* pxor   (%rax),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000004fad3bad; PC = 0x55555555ac2b *)
xor %xmm0@uint8[16] %xmm0
    [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df];
(* movaps %xmm0,(%rax)                             #! EA = L0x7fffffffc7d0; PC = 0x55555555ac2f *)
mov [L0x7fffffffc7d0,L0x7fffffffc7d1,L0x7fffffffc7d2,L0x7fffffffc7d3,
     L0x7fffffffc7d4,L0x7fffffffc7d5,L0x7fffffffc7d6,L0x7fffffffc7d7,
     L0x7fffffffc7d8,L0x7fffffffc7d9,L0x7fffffffc7da,L0x7fffffffc7db,
     L0x7fffffffc7dc,L0x7fffffffc7dd,L0x7fffffffc7de,L0x7fffffffc7df] %xmm0;
(* #jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a *)
#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! 0x55555555ac3a = 0x55555555ac3a;
(* #! <- SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* #ret                                            #! PC = 0x55555555ac4e *)
#ret                                            #! 0x55555555ac4e = 0x55555555ac4e;
(* mov    %rbx,%rdx                                #! PC = 0x55555555b2e5 *)
mov %rdx %rbx;
(* mov    %r13d,%esi                               #! PC = 0x55555555b2e8 *)
mov [m0,m1,m2,m3,_,_,_,_] %r13;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %r15,%rdi                                #! PC = 0x55555555b2eb *)
mov %rdi %r15;
(* #call   0x5555555571c0 <storeu_xmm>             #! PC = 0x55555555b2ee *)
#call   0x5555555571c0 <storeu_xmm>             #! 0x55555555b2ee = 0x55555555b2ee;
(* #! -> SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* mov    %esi,%eax                                #! PC = 0x5555555571c0 *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rax [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* #je     0x555555557241 <storeu_xmm+129>         #! PC = 0x5555555571cd *)
#je     0x555555557241 <storeu_xmm+129>         #! 0x5555555571cd = 0x5555555571cd;
(* movdqa (%rdx),%xmm1                             #! EA = L0x7fffffffc790; Value = 0x7b9328b0d7a6a739; PC = 0x5555555571cf *)
mov %xmm1 [L0x7fffffffc790, L0x7fffffffc791, L0x7fffffffc792, L0x7fffffffc793,
           L0x7fffffffc794, L0x7fffffffc795, L0x7fffffffc796, L0x7fffffffc797,
           L0x7fffffffc798, L0x7fffffffc799, L0x7fffffffc79a, L0x7fffffffc79b,
           L0x7fffffffc79c, L0x7fffffffc79d, L0x7fffffffc79e, L0x7fffffffc79f];
(* movups %xmm1,(%rdi)                             #! EA = L0x7fffffffcb80; PC = 0x5555555571d3 *)
mov [L0x7fffffffcb80,L0x7fffffffcb81,L0x7fffffffcb82,L0x7fffffffcb83,
     L0x7fffffffcb84,L0x7fffffffcb85,L0x7fffffffcb86,L0x7fffffffcb87,
     L0x7fffffffcb88,L0x7fffffffcb89,L0x7fffffffcb8a,L0x7fffffffcb8b,
     L0x7fffffffcb8c,L0x7fffffffcb8d,L0x7fffffffcb8e,L0x7fffffffcb8f] %xmm1;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571d8 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571d8 = 0x5555555571d8;
(* movdqa 0x10(%rdx),%xmm2                         #! EA = L0x7fffffffc7a0; Value = 0x9edcbc1e3b69d017; PC = 0x5555555571da *)
mov %xmm2 [L0x7fffffffc7a0, L0x7fffffffc7a1, L0x7fffffffc7a2, L0x7fffffffc7a3,
           L0x7fffffffc7a4, L0x7fffffffc7a5, L0x7fffffffc7a6, L0x7fffffffc7a7,
           L0x7fffffffc7a8, L0x7fffffffc7a9, L0x7fffffffc7aa, L0x7fffffffc7ab,
           L0x7fffffffc7ac, L0x7fffffffc7ad, L0x7fffffffc7ae, L0x7fffffffc7af];
(* movups %xmm2,0x10(%rdi)                         #! EA = L0x7fffffffcb90; PC = 0x5555555571df *)
mov [L0x7fffffffcb90,L0x7fffffffcb91,L0x7fffffffcb92,L0x7fffffffcb93,
     L0x7fffffffcb94,L0x7fffffffcb95,L0x7fffffffcb96,L0x7fffffffcb97,
     L0x7fffffffcb98,L0x7fffffffcb99,L0x7fffffffcb9a,L0x7fffffffcb9b,
     L0x7fffffffcb9c,L0x7fffffffcb9d,L0x7fffffffcb9e,L0x7fffffffcb9f] %xmm2;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571e6 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571e6 = 0x5555555571e6;
(* movdqa 0x20(%rdx),%xmm3                         #! EA = L0x7fffffffc7b0; Value = 0xd8462ee589530d47; PC = 0x5555555571e8 *)
mov %xmm3 [L0x7fffffffc7b0, L0x7fffffffc7b1, L0x7fffffffc7b2, L0x7fffffffc7b3,
           L0x7fffffffc7b4, L0x7fffffffc7b5, L0x7fffffffc7b6, L0x7fffffffc7b7,
           L0x7fffffffc7b8, L0x7fffffffc7b9, L0x7fffffffc7ba, L0x7fffffffc7bb,
           L0x7fffffffc7bc, L0x7fffffffc7bd, L0x7fffffffc7be, L0x7fffffffc7bf];
(* movups %xmm3,0x20(%rdi)                         #! EA = L0x7fffffffcba0; PC = 0x5555555571ed *)
mov [L0x7fffffffcba0,L0x7fffffffcba1,L0x7fffffffcba2,L0x7fffffffcba3,
     L0x7fffffffcba4,L0x7fffffffcba5,L0x7fffffffcba6,L0x7fffffffcba7,
     L0x7fffffffcba8,L0x7fffffffcba9,L0x7fffffffcbaa,L0x7fffffffcbab,
     L0x7fffffffcbac,L0x7fffffffcbad,L0x7fffffffcbae,L0x7fffffffcbaf] %xmm3;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571f4 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x5555555571f4 = 0x5555555571f4;
(* movdqa 0x30(%rdx),%xmm4                         #! EA = L0x7fffffffc7c0; Value = 0x1e98fd14b166631f; PC = 0x5555555571f6 *)
mov %xmm4 [L0x7fffffffc7c0, L0x7fffffffc7c1, L0x7fffffffc7c2, L0x7fffffffc7c3,
           L0x7fffffffc7c4, L0x7fffffffc7c5, L0x7fffffffc7c6, L0x7fffffffc7c7,
           L0x7fffffffc7c8, L0x7fffffffc7c9, L0x7fffffffc7ca, L0x7fffffffc7cb,
           L0x7fffffffc7cc, L0x7fffffffc7cd, L0x7fffffffc7ce, L0x7fffffffc7cf];
(* movups %xmm4,0x30(%rdi)                         #! EA = L0x7fffffffcbb0; PC = 0x5555555571fb *)
mov [L0x7fffffffcbb0,L0x7fffffffcbb1,L0x7fffffffcbb2,L0x7fffffffcbb3,
     L0x7fffffffcbb4,L0x7fffffffcbb5,L0x7fffffffcbb6,L0x7fffffffcbb7,
     L0x7fffffffcbb8,L0x7fffffffcbb9,L0x7fffffffcbba,L0x7fffffffcbbb,
     L0x7fffffffcbbc,L0x7fffffffcbbd,L0x7fffffffcbbe,L0x7fffffffcbbf] %xmm4;
(* #je     0x555555557237 <storeu_xmm+119>         #! PC = 0x555555557202 *)
#je     0x555555557237 <storeu_xmm+119>         #! 0x555555557202 = 0x555555557202;
(* #jne    0x555555557250 <storeu_xmm+144>         #! PC = 0x555555557243 *)
#jne    0x555555557250 <storeu_xmm+144>         #! 0x555555557243 = 0x555555557243;
(* movdqa (%rdx),%xmm0                             #! EA = L0x7fffffffc7d0; Value = 0x000000009644ff98; PC = 0x555555557250 *)
mov %xmm0 [L0x7fffffffc7d0, L0x7fffffffc7d1, L0x7fffffffc7d2, L0x7fffffffc7d3,
           L0x7fffffffc7d4, L0x7fffffffc7d5, L0x7fffffffc7d6, L0x7fffffffc7d7,
           L0x7fffffffc7d8, L0x7fffffffc7d9, L0x7fffffffc7da, L0x7fffffffc7db,
           L0x7fffffffc7dc, L0x7fffffffc7dd, L0x7fffffffc7de, L0x7fffffffc7df];
(* #jmp    0x5555555570f0 <_store_xmm>             #! PC = 0x555555557254 *)
#jmp    0x5555555570f0 <_store_xmm>             #! 0x555555557254 = 0x555555557254;
(* mov    %rdx,0x38(%rsp)                          #! EA = L0x7fffffffc738; PC = 0x555555557105 *)
mov [L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
     L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f] %rdx;
(* xor    %edx,%edx                                #! PC = 0x55555555710a *)
mov %rdx [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8];
(* movaps %xmm0,(%rsp)                             #! EA = L0x7fffffffc700; PC = 0x55555555710c *)
mov [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
     L0x7fffffffc704,L0x7fffffffc705,L0x7fffffffc706,L0x7fffffffc707,
     L0x7fffffffc708,L0x7fffffffc709,L0x7fffffffc70a,L0x7fffffffc70b,
     L0x7fffffffc70c,L0x7fffffffc70d,L0x7fffffffc70e,L0x7fffffffc70f] %xmm0;
(* #je     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557112 *)
#je     0x555555557160 <_store_xmm+112>         #! 0x555555557112 = 0x555555557112;
(* mov    %rdi,%rax                                #! PC = 0x555555557114 *)
mov %rax %rdi;
(* #jb     0x555555557178 <_store_xmm+136>         #! PC = 0x55555555711d *)
#jb     0x555555557178 <_store_xmm+136>         #! 0x55555555711d = 0x55555555711d;
(* #jne    0x55555555719c <_store_xmm+172>         #! PC = 0x55555555717c *)
#jne    0x55555555719c <_store_xmm+172>         #! 0x55555555717c = 0x55555555717c;
(* mov    (%rsp),%ecx                              #! EA = L0x7fffffffc700; Value = 0x000000009644ff98; PC = 0x55555555719c *)
mov %rcx [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %esi,%esi                                #! PC = 0x55555555719f *)
mov [m0,m1,m2,m3,_,_,_,_] %rsi;
mov %rsi [m0,m1,m2,m3,0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %ecx,(%rdi)                              #! EA = L0x7fffffffcbc0; PC = 0x5555555571a1 *)
mov [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,_,_,_,_]
    %rcx;
(* mov    -0x4(%rdx,%rsi,1),%edx                   #! EA = L0x7fffffffc700; Value = 0x000000009644ff98; PC = 0x5555555571a3 *)
mov %rdx [L0x7fffffffc700,L0x7fffffffc701,L0x7fffffffc702,L0x7fffffffc703,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %edx,-0x4(%rdi,%rsi,1)                   #! EA = L0x7fffffffcbc0; PC = 0x5555555571a7 *)
mov [L0x7fffffffcbc0,L0x7fffffffcbc1,L0x7fffffffcbc2,L0x7fffffffcbc3,_,_,_,_]
    %rdx;
(* #jmp    0x555555557160 <_store_xmm+112>         #! PC = 0x5555555571ab *)
#jmp    0x555555557160 <_store_xmm+112>         #! 0x5555555571ab = 0x5555555571ab;
(* mov    0x38(%rsp),%rax                          #! EA = L0x7fffffffc738; Value = 0x843472637f9f7c00; PC = 0x555555557160 *)
mov %rax [L0x7fffffffc738,L0x7fffffffc739,L0x7fffffffc73a,L0x7fffffffc73b,
          L0x7fffffffc73c,L0x7fffffffc73d,L0x7fffffffc73e,L0x7fffffffc73f];
(* #jne    0x5555555571ad <_store_xmm+189>         #! PC = 0x55555555716e *)
#jne    0x5555555571ad <_store_xmm+189>         #! 0x55555555716e = 0x55555555716e;
(* #! <- SP = 0x7fffffffc748 *)
#! 0x7fffffffc748 = 0x7fffffffc748;
(* #ret                                            #! PC = 0x555555557171 *)
#ret                                            #! 0x555555557171 = 0x555555557171;
(* #jne    0x55555555b280 <gf256mat_prod_sse+192>  #! PC = 0x55555555b2f8 *)
#jne    0x55555555b280 <gf256mat_prod_sse+192>  #! 0x55555555b2f8 = 0x55555555b2f8;
(* mov    -0x2c8(%rbp),%eax                        #! EA = L0x7fffffffc788; Value = 0x000000000000000c; PC = 0x55555555b2fa *)
mov %rax [L0x7fffffffc788,L0x7fffffffc789,L0x7fffffffc78a,L0x7fffffffc78b,
          0@uint8,0@uint8,0@uint8,0@uint8];
(* mov    %rax,%rdx                                #! PC = 0x55555555b307 *)
mov %rdx %rax;
(* #jne    0x55555555b230 <gf256mat_prod_sse+112>  #! PC = 0x55555555b31b *)
#jne    0x55555555b230 <gf256mat_prod_sse+112>  #! 0x55555555b31b = 0x55555555b31b;
(* mov    -0x38(%rbp),%rax                         #! EA = L0x7fffffffca18; Value = 0x843472637f9f7c00; PC = 0x55555555b321 *)
mov %rax [L0x7fffffffca18,L0x7fffffffca19,L0x7fffffffca1a,L0x7fffffffca1b,
          L0x7fffffffca1c,L0x7fffffffca1d,L0x7fffffffca1e,L0x7fffffffca1f];
(* #jne    0x55555555b356 <gf256mat_prod_sse+406>  #! PC = 0x55555555b32e *)
#jne    0x55555555b356 <gf256mat_prod_sse+406>  #! 0x55555555b32e = 0x55555555b32e;
(* #! <- SP = 0x7fffffffca58 *)
#! 0x7fffffffca58 = 0x7fffffffca58;
(* #ret                                            #! PC = 0x55555555b33e *)
#ret                                            #! 0x55555555b33e = 0x55555555b33e;

(*************** outputs ***************)

mov c00 L0x7fffffffcb80; mov c01 L0x7fffffffcb81; mov c02 L0x7fffffffcb82;
mov c03 L0x7fffffffcb83; mov c04 L0x7fffffffcb84; mov c05 L0x7fffffffcb85;
mov c06 L0x7fffffffcb86; mov c07 L0x7fffffffcb87; mov c08 L0x7fffffffcb88;
mov c09 L0x7fffffffcb89; mov c0a L0x7fffffffcb8a; mov c0b L0x7fffffffcb8b;
mov c0c L0x7fffffffcb8c; mov c0d L0x7fffffffcb8d; mov c0e L0x7fffffffcb8e;
mov c0f L0x7fffffffcb8f; mov c10 L0x7fffffffcb90; mov c11 L0x7fffffffcb91;
mov c12 L0x7fffffffcb92; mov c13 L0x7fffffffcb93; mov c14 L0x7fffffffcb94;
mov c15 L0x7fffffffcb95; mov c16 L0x7fffffffcb96; mov c17 L0x7fffffffcb97;
mov c18 L0x7fffffffcb98; mov c19 L0x7fffffffcb99; mov c1a L0x7fffffffcb9a;
mov c1b L0x7fffffffcb9b; mov c1c L0x7fffffffcb9c; mov c1d L0x7fffffffcb9d;
mov c1e L0x7fffffffcb9e; mov c1f L0x7fffffffcb9f; mov c20 L0x7fffffffcba0;
mov c21 L0x7fffffffcba1; mov c22 L0x7fffffffcba2; mov c23 L0x7fffffffcba3;
mov c24 L0x7fffffffcba4; mov c25 L0x7fffffffcba5; mov c26 L0x7fffffffcba6;
mov c27 L0x7fffffffcba7; mov c28 L0x7fffffffcba8; mov c29 L0x7fffffffcba9;
mov c2a L0x7fffffffcbaa; mov c2b L0x7fffffffcbab; mov c2c L0x7fffffffcbac;
mov c2d L0x7fffffffcbad; mov c2e L0x7fffffffcbae; mov c2f L0x7fffffffcbaf;
mov c30 L0x7fffffffcbb0; mov c31 L0x7fffffffcbb1; mov c32 L0x7fffffffcbb2;
mov c33 L0x7fffffffcbb3; mov c34 L0x7fffffffcbb4; mov c35 L0x7fffffffcbb5;
mov c36 L0x7fffffffcbb6; mov c37 L0x7fffffffcbb7; mov c38 L0x7fffffffcbb8;
mov c39 L0x7fffffffcbb9; mov c3a L0x7fffffffcbba; mov c3b L0x7fffffffcbbb;
mov c3c L0x7fffffffcbbc; mov c3d L0x7fffffffcbbd; mov c3e L0x7fffffffcbbe;
mov c3f L0x7fffffffcbbf; mov c40 L0x7fffffffcbc0; mov c41 L0x7fffffffcbc1;
mov c42 L0x7fffffffcbc2; mov c43 L0x7fffffffcbc3;



{
  true
  &&
  true
}

