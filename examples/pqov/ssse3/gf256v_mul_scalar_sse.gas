#! $1c(%rbp) = %%EA
#! $1c(%rdi) = %%EA
#! (%rdi) = %%EA
#! $1c(%rip) = %%EA
#! %r$1cd = %r$1c
#! %r$1c = %%r$1c
#! %eax = %rax
#! %rax = %%rax
#! %edx = %rdx
#! %rdx = %%rdx
#! %rdi = %%rdi
#! %sil = %rsi
#! %esi = %rsi
#! %rsi = %%rsi
#! %xmm$1c = %%xmm$1c

#! add $1c, %rsp -> nop
#! add \$0x10, %%rdi -> nop
#! cmp .* -> nop
#! lea \(%%rdi,%%rsi,1\), %%r12 -> nop
#! lea %%EA, %%rdi -> nop
#! leave -> nop
#! mov %rsp, %rbp -> nop
#! mov %fs:0x28,%%rax -> nop
#! nopw 0x0\(%%rax,%%rax,1\) -> nop
#! pop .* -> nop
#! push .* -> nop
#! shr \$0x4, %%rsi -> nop
#! shl \$0x4, %%rsi -> nop
#! sub %fs:0x28,%%rax -> nop
#! sub $1c, %rsp -> nop
#! test %%r13, %%r13 -> nop

#! and $1c, $2v -> and $2v@uint64 $2v $1c@uint64
#! mov $1v, $2v -> mov $2v $1v
#! movzbl $1v, $2v -> mov $2v $1v
#! xor $1v, $1v -> mov $1v 0@uint64

#! movd %%rsi, $2xmm -> mov %$2xmm [rsi,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,\n           0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8]
#! movaps $1xmm, $2ea -> mov [m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, ma, mb, mc, md, me, mf] %$1xmm;\nmov $2ea[+0] m0; mov $2ea[+1] m1; mov $2ea[+2] m2;\nmov $2ea[+3] m3; mov $2ea[+4] m4; mov $2ea[+5] m5;\nmov $2ea[+6] m6; mov $2ea[+7] m7; mov $2ea[+8] m8;\nmov $2ea[+9] m9; mov $2ea[+10] ma; mov $2ea[+11] mb;\nmov $2ea[+12] mc; mov $2ea[+13] md; mov $2ea[+14] me;\nmov $2ea[+15] mf
#! movdqa $1ea, $2xmm -> mov %$2xmm [$1ea[+0], $1ea[+1], $1ea[+2], $1ea[+3],\n           $1ea[+4], $1ea[+5], $1ea[+6], $1ea[+7],\n           $1ea[+8], $1ea[+9], $1ea[+10], $1ea[+11],\n           $1ea[+12], $1ea[+13], $1ea[+14], $1ea[+15]]
#! movdqu $1ea, $2xmm -> mov %$2xmm [$1ea[+0], $1ea[+1], $1ea[+2], $1ea[+3],\n           $1ea[+4], $1ea[+5], $1ea[+6], $1ea[+7],\n           $1ea[+8], $1ea[+9], $1ea[+10], $1ea[+11],\n           $1ea[+12], $1ea[+13], $1ea[+14], $1ea[+15]]
#! movups $1xmm, $2ea -> mov [m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, ma, mb, mc, md, me, mf] %$1xmm;\nmov $2ea[+0] m0; mov $2ea[+1] m1; mov $2ea[+2] m2;\nmov $2ea[+3] m3; mov $2ea[+4] m4; mov $2ea[+5] m5;\nmov $2ea[+6] m6; mov $2ea[+7] m7; mov $2ea[+8] m8;\nmov $2ea[+9] m9; mov $2ea[+10] ma; mov $2ea[+11] mb;\nmov $2ea[+12] mc; mov $2ea[+13] md; mov $2ea[+14] me;\nmov $2ea[+15] mf
#! movdqa $1xmm, $2xmm -> mov %$2xmm %$1xmm
#! pand $1xmm, $2xmm -> and %$2xmm@uint8[16] %$2xmm %$1xmm
#! pcmpeqb $1xmm, $2xmm -> subb %dc %diff %$2xmm %$1xmm;\nsubc %nz %dc [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,\n              0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8]\n             %diff;\ncmov %$2xmm %nz [0xff@uint8,0xff@uint8,0xff@uint8,0xff@uint8,\n                0xff@uint8,0xff@uint8,0xff@uint8,0xff@uint8,\n                0xff@uint8,0xff@uint8,0xff@uint8,0xff@uint8,\n                0xff@uint8,0xff@uint8,0xff@uint8,0xff@uint8]\n           [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,\n            0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8]
#! pshufb $1xmm, $2xmm -> mov [m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, ma, mb, mc, md, me, mf] %$1xmm;\nmov [s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, sa, sb, sc, sd, se, sf] %$2xmm;\ncall vpshufb128 (s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,sa,sb,sc,sd,se,sf,\n                 m0,m1,m2,m3,m4,m5,m6,m7,m8,m9,ma,mb,mc,md,me,mf,\n                 d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,da,db,dc,dd,de,df);\nmov %$2xmm [d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, da, db, dc, dd, de, df]
#! psrlw $1c, $2xmm -> mov [m0, m1, m2, m3, m4, m5, m6, m7, m8, m9, ma, mb, mc, md, me, mf] %$2xmm;\njoin s0 m1 m0; shr s0 s0 $1c@uint16; spl t1 t0 s0 8;\njoin s1 m3 m2; shr s1 s1 $1c@uint16; spl t3 t2 s1 8;\njoin s2 m5 m4; shr s2 s2 $1c@uint16; spl t5 t4 s2 8;\njoin s3 m7 m6; shr s3 s3 $1c@uint16; spl t7 t6 s3 8;\njoin s4 m9 m8; shr s4 s4 $1c@uint16; spl t9 t8 s4 8;\njoin s5 mb ma; shr s5 s5 $1c@uint16; spl tb ta s5 8;\njoin s6 md mc; shr s6 s6 $1c@uint16; spl td tc s6 8;\njoin s7 mf me; shr s7 s7 $1c@uint16; spl tf te s7 8;\nmov %$2xmm [t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, ta, tb, tc, td, te, tf]
#! pxor $1xmm, $1xmm -> mov %$1xmm [0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,\n           0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8,0@uint8]
#! pxor $1xmm, $2xmm -> xor %$2xmm@uint8[16] %$2xmm %$1xmm

#gf256v_mul_scalar_sse:
# %rdi = 0x7fffffffa440
# %rsi = 0xba
# %rdx = 0x30
# %rcx = 0x0
# %r8  = 0x0
# %r9  = 0x11b
	#! -> SP = 0x7fffffffa3c8
	push   %rbp                                     #! EA = L0x7fffffffa3c0; PC = 0x555555556410
	mov    %rdi,%r8                                 #! PC = 0x555555556411
	movzbl %sil,%esi                                #! PC = 0x555555556414
	mov    %rsp,%rbp                                #! PC = 0x555555556418
	sub    $0x30,%rsp                               #! PC = 0x55555555641b
	mov    %fs:0x28,%rax                            #! PC = 0x55555555641f
	mov    %rax,-0x8(%rbp)                          #! EA = L0x7fffffffa3b8; PC = 0x555555556428
	xor    %eax,%eax                                #! PC = 0x55555555642c
	lea    -0x30(%rbp),%rdi                         #! PC = 0x55555555642e
	#call   0x555555556160 <tbl_gf256_multab>       #! PC = 0x555555556432
	#! -> SP = 0x7fffffffa388
	movd   %esi,%xmm1                               #! PC = 0x555555556160
	pxor   %xmm0,%xmm0                              #! PC = 0x555555556164
	mov    %rdi,%rax                                #! PC = 0x555555556168
	movdqa 0xfead(%rip),%xmm5        # 0x555555566020#! EA = L0x555555566020; Value = 0x0101010101010101; PC = 0x55555555616b
	pshufb %xmm0,%xmm1                              #! PC = 0x555555556173
	movdqa 0xfea0(%rip),%xmm3        # 0x555555566020#! EA = L0x555555566020; Value = 0x0101010101010101; PC = 0x555555556178
	movdqa %xmm1,%xmm4                              #! PC = 0x555555556180
	psrlw  $0x1,%xmm1                               #! PC = 0x555555556184
	movdqa %xmm1,%xmm2                              #! PC = 0x555555556189
	psrlw  $0x1,%xmm1                               #! PC = 0x55555555618d
	pand   %xmm5,%xmm4                              #! PC = 0x555555556192
	movdqa %xmm1,%xmm8                              #! PC = 0x555555556196
	psrlw  $0x1,%xmm1                               #! PC = 0x55555555619b
	pand   %xmm5,%xmm2                              #! PC = 0x5555555561a0
	movdqa %xmm1,%xmm7                              #! PC = 0x5555555561a4
	psrlw  $0x1,%xmm1                               #! PC = 0x5555555561a8
	pand   %xmm5,%xmm8                              #! PC = 0x5555555561ad
	movdqa %xmm1,%xmm9                              #! PC = 0x5555555561b2
	psrlw  $0x1,%xmm1                               #! PC = 0x5555555561b7
	pand   %xmm5,%xmm7                              #! PC = 0x5555555561bc
	movdqa %xmm1,%xmm6                              #! PC = 0x5555555561c0
	psrlw  $0x1,%xmm1                               #! PC = 0x5555555561c4
	pand   %xmm5,%xmm9                              #! PC = 0x5555555561c9
	movdqa %xmm1,%xmm0                              #! PC = 0x5555555561ce
	movdqa %xmm1,%xmm10                             #! PC = 0x5555555561d2
	pand   %xmm5,%xmm6                              #! PC = 0x5555555561d7
	movdqu 0x11f0d(%rip),%xmm1        # 0x5555555680f0 <__gf256_mulbase+112>#! EA = L0x5555555680f0; Value = 0xad2db6369b1b8000; PC = 0x5555555561db
	psrlw  $0x1,%xmm0                               #! PC = 0x5555555561e3
	pcmpeqb %xmm3,%xmm7                             #! PC = 0x5555555561e8
	pand   %xmm5,%xmm10                             #! PC = 0x5555555561ec
	pcmpeqb %xmm3,%xmm9                             #! PC = 0x5555555561f1
	pcmpeqb %xmm3,%xmm4                             #! PC = 0x5555555561f6
	pand   %xmm5,%xmm0                              #! PC = 0x5555555561fa
	movdqu 0x11eca(%rip),%xmm5        # 0x5555555680d0 <__gf256_mulbase+80>#! EA = L0x5555555680d0; Value = 0xdb9b5b1bc0804000; PC = 0x5555555561fe
	pcmpeqb %xmm3,%xmm8                             #! PC = 0x555555556206
	pcmpeqb %xmm3,%xmm6                             #! PC = 0x55555555620b
	pcmpeqb %xmm3,%xmm10                            #! PC = 0x55555555620f
	pcmpeqb %xmm3,%xmm2                             #! PC = 0x555555556214
	pand   %xmm7,%xmm1                              #! PC = 0x555555556218
	pcmpeqb %xmm3,%xmm0                             #! PC = 0x55555555621c
	movdqu 0x11ee8(%rip),%xmm3        # 0x555555568110 <__gf256_mulbase+144>#! EA = L0x555555568110; Value = 0x415a776c2d361b00; PC = 0x555555556220
	pand   %xmm8,%xmm5                              #! PC = 0x555555556228
	pand   %xmm9,%xmm3                              #! PC = 0x55555555622d
	pxor   %xmm3,%xmm1                              #! PC = 0x555555556232
	movdqu 0x11e72(%rip),%xmm3        # 0x5555555680b0 <__gf256_mulbase+48>#! EA = L0x5555555680b0; Value = 0xe0c0a08060402000; PC = 0x555555556236
	pand   %xmm2,%xmm3                              #! PC = 0x55555555623e
	pxor   %xmm5,%xmm3                              #! PC = 0x555555556242
	movdqu 0x11f02(%rip),%xmm5        # 0x555555568150 <__gf256_mulbase+208>#! EA = L0x555555568150; Value = 0x1f73c7abb4d86c00; PC = 0x555555556246
	pxor   %xmm3,%xmm1                              #! PC = 0x55555555624e
	movdqu 0x11ed6(%rip),%xmm3        # 0x555555568130 <__gf256_mulbase+176>#! EA = L0x555555568130; Value = 0x82b4eed85a6c3600; PC = 0x555555556252
	pand   %xmm10,%xmm5                             #! PC = 0x55555555625a
	pand   %xmm6,%xmm3                              #! PC = 0x55555555625f
	pxor   %xmm5,%xmm3                              #! PC = 0x555555556263
	movdqu 0x11f01(%rip),%xmm5        # 0x555555568170 <__gf256_mulbase+240>#! EA = L0x555555568170; Value = 0x3ee6954d73abd800; PC = 0x555555556267
	pxor   %xmm3,%xmm1                              #! PC = 0x55555555626f
	movdqu 0x11e15(%rip),%xmm3        # 0x555555568090 <__gf256_mulbase+16>#! EA = L0x555555568090; Value = 0x7060504030201000; PC = 0x555555556273
	pand   %xmm0,%xmm5                              #! PC = 0x55555555627b
	pand   %xmm4,%xmm3                              #! PC = 0x55555555627f
	pxor   %xmm5,%xmm3                              #! PC = 0x555555556283
	movdqu 0x11e11(%rip),%xmm5        # 0x5555555680a0 <__gf256_mulbase+32>#! EA = L0x5555555680a0; Value = 0x0e0c0a0806040200; PC = 0x555555556287
	pxor   %xmm3,%xmm1                              #! PC = 0x55555555628f
	movdqu 0x11e25(%rip),%xmm3        # 0x5555555680c0 <__gf256_mulbase+64>#! EA = L0x5555555680c0; Value = 0x1c1814100c080400; PC = 0x555555556293
	pand   %xmm5,%xmm2                              #! PC = 0x55555555629b
	movdqu 0x11e59(%rip),%xmm5        # 0x555555568100 <__gf256_mulbase+128>#! EA = L0x555555568100; Value = 0x7060504030201000; PC = 0x55555555629f
	movaps %xmm1,0x10(%rdi)                         #! EA = L0x7fffffffa3a0; PC = 0x5555555562a7
	pand   %xmm8,%xmm3                              #! PC = 0x5555555562ab
	pxor   %xmm3,%xmm2                              #! PC = 0x5555555562b0
	movdqu 0x11e24(%rip),%xmm3        # 0x5555555680e0 <__gf256_mulbase+96>#! EA = L0x5555555680e0; Value = 0x3830282018100800; PC = 0x5555555562b4
	pand   %xmm9,%xmm5                              #! PC = 0x5555555562bc
	pand   %xmm7,%xmm3                              #! PC = 0x5555555562c1
	pxor   %xmm5,%xmm3                              #! PC = 0x5555555562c5
	movdqu 0x11e6f(%rip),%xmm5        # 0x555555568140 <__gf256_mulbase+192>#! EA = L0x555555568140; Value = 0xdb9b5b1bc0804000; PC = 0x5555555562c9
	pxor   %xmm3,%xmm2                              #! PC = 0x5555555562d1
	movdqu 0x11e43(%rip),%xmm3        # 0x555555568120 <__gf256_mulbase+160>#! EA = L0x555555568120; Value = 0xe0c0a08060402000; PC = 0x5555555562d5
	pand   %xmm10,%xmm5                             #! PC = 0x5555555562dd
	pand   %xmm6,%xmm3                              #! PC = 0x5555555562e2
	pxor   %xmm5,%xmm3                              #! PC = 0x5555555562e6
	pxor   %xmm3,%xmm2                              #! PC = 0x5555555562ea
	movdqu 0x11d8a(%rip),%xmm3        # 0x555555568080 <__gf256_mulbase>#! EA = L0x555555568080; Value = 0x0706050403020100; PC = 0x5555555562ee
	pand   %xmm4,%xmm3                              #! PC = 0x5555555562f6
	movdqu 0x11e5e(%rip),%xmm4        # 0x555555568160 <__gf256_mulbase+224>#! EA = L0x555555568160; Value = 0xad2db6369b1b8000; PC = 0x5555555562fa
	pand   %xmm4,%xmm0                              #! PC = 0x555555556302
	pxor   %xmm3,%xmm0                              #! PC = 0x555555556306
	pxor   %xmm2,%xmm0                              #! PC = 0x55555555630a
	movaps %xmm0,(%rdi)                             #! EA = L0x7fffffffa390; PC = 0x55555555630e
	#! <- SP = 0x7fffffffa388
	#ret                                            #! PC = 0x555555556311
	mov    -0x8(%rbp),%rax                          #! EA = L0x7fffffffa3b8; Value = 0xec6a3fcb467a1100; PC = 0x555555556437
	sub    %fs:0x28,%rax                            #! PC = 0x55555555643b
	#jne    0x55555555645b <gf256v_mul_scalar_sse+75>#! PC = 0x555555556444
	movdqa -0x20(%rbp),%xmm1                        #! EA = L0x7fffffffa3a0; Value = 0xb0e51a4fffaa5500; PC = 0x555555556446
	movdqa -0x30(%rbp),%xmm0                        #! EA = L0x7fffffffa390; Value = 0x0bb164ded56fba00; PC = 0x55555555644b
	mov    %edx,%esi                                #! PC = 0x555555556450
	mov    %r8,%rdi                                 #! PC = 0x555555556452
	leave                                           #! PC = 0x555555556455
	#jmp    0x555555556350 <linearmap_8x8_sse.constprop.0>#! PC = 0x555555556456
	push   %rbp                                     #! EA = L0x7fffffffa3c0; PC = 0x555555556350
	movdqa %xmm0,%xmm3                              #! PC = 0x555555556351
	mov    %rsp,%rbp                                #! PC = 0x555555556355
	push   %r13                                     #! EA = L0x7fffffffa3b8; PC = 0x555555556358
	mov    %esi,%r13d                               #! PC = 0x55555555635a
	push   %r12                                     #! EA = L0x7fffffffa3b0; PC = 0x55555555635d
	and    $0xf,%r13d                               #! PC = 0x55555555635f
	sub    $0x20,%rsp                               #! PC = 0x555555556363
	shr    $0x4,%esi                                #! PC = 0x555555556367
	#je     0x555555556400 <linearmap_8x8_sse.constprop.0+176>#! PC = 0x55555555636a
	mov    %esi,%esi                                #! PC = 0x555555556370
	shl    $0x4,%rsi                                #! PC = 0x555555556372
	lea    (%rdi,%rsi,1),%r12                       #! PC = 0x555555556376
	nopw   0x0(%rax,%rax,1)                         #! EA = L0x0; PC = 0x55555555637a
	movdqu (%rdi),%xmm2                             #! EA = L0x7fffffffa440; Value = 0x28d93813ba66e276; PC = 0x555555556380
	movdqa %xmm3,%xmm0                              #! PC = 0x555555556384
	movaps %xmm1,-0x30(%rbp)                        #! EA = L0x7fffffffa390; PC = 0x555555556388
	add    $0x10,%rdi                               #! PC = 0x55555555638c
	movaps %xmm3,-0x20(%rbp)                        #! EA = L0x7fffffffa3a0; PC = 0x555555556390
	#call   0x555555556320 <linear_transform_8x8_128b.constprop.0>#! PC = 0x555555556394
	#! -> SP = 0x7fffffffa388
	movdqa 0xfd08(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555556320
	movdqa %xmm2,%xmm4                              #! PC = 0x555555556328
	psrlw  $0x4,%xmm2                               #! PC = 0x55555555632c
	pand   %xmm3,%xmm4                              #! PC = 0x555555556331
	pand   %xmm3,%xmm2                              #! PC = 0x555555556335
	pshufb %xmm4,%xmm0                              #! PC = 0x555555556339
	pshufb %xmm2,%xmm1                              #! PC = 0x55555555633e
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556343
	#! <- SP = 0x7fffffffa388
	#ret                                            #! PC = 0x555555556347
	movdqa -0x20(%rbp),%xmm3                        #! EA = L0x7fffffffa3a0; Value = 0x0bb164ded56fba00; PC = 0x555555556399
	movdqa -0x30(%rbp),%xmm1                        #! EA = L0x7fffffffa390; Value = 0xb0e51a4fffaa5500; PC = 0x55555555639e
	movups %xmm0,-0x10(%rdi)                        #! EA = L0x7fffffffa440; PC = 0x5555555563a3
	cmp    %r12,%rdi                                #! PC = 0x5555555563a7
	#jne    0x555555556380 <linearmap_8x8_sse.constprop.0+48>#! PC = 0x5555555563aa
	movdqu (%rdi),%xmm2                             #! EA = L0x7fffffffa450; Value = 0x69cb9a859269e9c5; PC = 0x555555556380
	movdqa %xmm3,%xmm0                              #! PC = 0x555555556384
	movaps %xmm1,-0x30(%rbp)                        #! EA = L0x7fffffffa390; PC = 0x555555556388
	add    $0x10,%rdi                               #! PC = 0x55555555638c
	movaps %xmm3,-0x20(%rbp)                        #! EA = L0x7fffffffa3a0; PC = 0x555555556390
	#call   0x555555556320 <linear_transform_8x8_128b.constprop.0>#! PC = 0x555555556394
	#! -> SP = 0x7fffffffa388
	movdqa 0xfd08(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555556320
	movdqa %xmm2,%xmm4                              #! PC = 0x555555556328
	psrlw  $0x4,%xmm2                               #! PC = 0x55555555632c
	pand   %xmm3,%xmm4                              #! PC = 0x555555556331
	pand   %xmm3,%xmm2                              #! PC = 0x555555556335
	pshufb %xmm4,%xmm0                              #! PC = 0x555555556339
	pshufb %xmm2,%xmm1                              #! PC = 0x55555555633e
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556343
	#! <- SP = 0x7fffffffa388
	#ret                                            #! PC = 0x555555556347
	movdqa -0x20(%rbp),%xmm3                        #! EA = L0x7fffffffa3a0; Value = 0x0bb164ded56fba00; PC = 0x555555556399
	movdqa -0x30(%rbp),%xmm1                        #! EA = L0x7fffffffa390; Value = 0xb0e51a4fffaa5500; PC = 0x55555555639e
	movups %xmm0,-0x10(%rdi)                        #! EA = L0x7fffffffa450; PC = 0x5555555563a3
	cmp    %r12,%rdi                                #! PC = 0x5555555563a7
	#jne    0x555555556380 <linearmap_8x8_sse.constprop.0+48>#! PC = 0x5555555563aa
	movdqu (%rdi),%xmm2                             #! EA = L0x7fffffffa460; Value = 0x1840d01d46f38356; PC = 0x555555556380
	movdqa %xmm3,%xmm0                              #! PC = 0x555555556384
	movaps %xmm1,-0x30(%rbp)                        #! EA = L0x7fffffffa390; PC = 0x555555556388
	add    $0x10,%rdi                               #! PC = 0x55555555638c
	movaps %xmm3,-0x20(%rbp)                        #! EA = L0x7fffffffa3a0; PC = 0x555555556390
	#call   0x555555556320 <linear_transform_8x8_128b.constprop.0>#! PC = 0x555555556394
	#! -> SP = 0x7fffffffa388
	movdqa 0xfd08(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555556320
	movdqa %xmm2,%xmm4                              #! PC = 0x555555556328
	psrlw  $0x4,%xmm2                               #! PC = 0x55555555632c
	pand   %xmm3,%xmm4                              #! PC = 0x555555556331
	pand   %xmm3,%xmm2                              #! PC = 0x555555556335
	pshufb %xmm4,%xmm0                              #! PC = 0x555555556339
	pshufb %xmm2,%xmm1                              #! PC = 0x55555555633e
	pxor   %xmm1,%xmm0                              #! PC = 0x555555556343
	#! <- SP = 0x7fffffffa388
	#ret                                            #! PC = 0x555555556347
	movdqa -0x20(%rbp),%xmm3                        #! EA = L0x7fffffffa3a0; Value = 0x0bb164ded56fba00; PC = 0x555555556399
	movdqa -0x30(%rbp),%xmm1                        #! EA = L0x7fffffffa390; Value = 0xb0e51a4fffaa5500; PC = 0x55555555639e
	movups %xmm0,-0x10(%rdi)                        #! EA = L0x7fffffffa460; PC = 0x5555555563a3
	cmp    %r12,%rdi                                #! PC = 0x5555555563a7
	#jne    0x555555556380 <linearmap_8x8_sse.constprop.0+48>#! PC = 0x5555555563aa
	test   %r13d,%r13d                              #! PC = 0x5555555563ac
	#jne    0x5555555563c0 <linearmap_8x8_sse.constprop.0+112>#! PC = 0x5555555563af
	add    $0x20,%rsp                               #! PC = 0x5555555563b1
	pop    %r12                                     #! EA = L0x7fffffffa3b0; Value = 0x0000000000000000; PC = 0x5555555563b5
	pop    %r13                                     #! EA = L0x7fffffffa3b8; Value = 0x0000000000000180; PC = 0x5555555563b7
	pop    %rbp                                     #! EA = L0x7fffffffa3c0; Value = 0x00007fffffffa430; PC = 0x5555555563b9
	#! <- SP = 0x7fffffffa3c8
	#ret                                            #! PC = 0x5555555563ba
