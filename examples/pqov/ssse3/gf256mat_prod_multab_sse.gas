gf256mat_prod_multab_sse:
# %rdi = 0x7ffffffe62e0
# %rsi = 0x7ffff78bbbe0
# %rdx = 0x2c
# %rcx = 0x44
# %r8  = 0x7ffffffe63a0
# %r9  = 0x2c
	#! -> SP = 0x7ffffffe6298
	endbr64                                         #! PC = 0x55555555b060
	push   %rbp                                     #! EA = L0x7ffffffe6290; PC = 0x55555555b064
	mov    %rsp,%rbp                                #! PC = 0x55555555b065
	push   %r15                                     #! EA = L0x7ffffffe6288; PC = 0x55555555b068
	push   %r14                                     #! EA = L0x7ffffffe6280; PC = 0x55555555b06a
	push   %r13                                     #! EA = L0x7ffffffe6278; PC = 0x55555555b06c
	push   %r12                                     #! EA = L0x7ffffffe6270; PC = 0x55555555b06e
	mov    %edx,%r12d                               #! PC = 0x55555555b070
	push   %rbx                                     #! EA = L0x7ffffffe6268; PC = 0x55555555b073
	mov    %ecx,%ebx                                #! PC = 0x55555555b074
	sub    $0xc8,%rsp                               #! PC = 0x55555555b076
	mov    %rsi,-0xd0(%rbp)                         #! EA = L0x7ffffffe61c0; PC = 0x55555555b07d
	mov    %edx,%esi                                #! PC = 0x55555555b084
	mov    %rdi,-0xe0(%rbp)                         #! EA = L0x7ffffffe61b0; PC = 0x55555555b086
	mov    %ecx,-0xe4(%rbp)                         #! EA = L0x7ffffffe61ac; PC = 0x55555555b08d
	mov    %r8,-0xd8(%rbp)                          #! EA = L0x7ffffffe61b8; PC = 0x55555555b093
	mov    %fs:0x28,%rax                            #! PC = 0x55555555b09a
	mov    %rax,-0x38(%rbp)                         #! EA = L0x7ffffffe6258; PC = 0x55555555b0a3
	xor    %eax,%eax                                #! PC = 0x55555555b0a7
	#call   0x5555555573e0 <gf256v_set_zero>        #! PC = 0x55555555b0a9
	#! -> SP = 0x7ffffffe6198
	mov    %esi,%edx                                #! PC = 0x5555555573e0
	mov    %rdi,%rsi                                #! PC = 0x5555555573e2
	#jmp    0x555555557260 <gf256v_add_sse>         #! PC = 0x5555555573e5
	mov    %rdi,%rcx                                #! PC = 0x555555557260
	mov    %edx,%edi                                #! PC = 0x555555557263
	cmp    $0xf,%edx                                #! PC = 0x555555557265
	#jbe    0x5555555572a4 <gf256v_add_sse+68>      #! PC = 0x555555557268
	lea    -0x10(%rdx),%edx                         #! PC = 0x55555555726a
	xor    %eax,%eax                                #! PC = 0x55555555726d
	shr    $0x4,%edx                                #! PC = 0x55555555726f
	add    $0x1,%edx                                #! PC = 0x555555557272
	shl    $0x4,%rdx                                #! PC = 0x555555557275
	nopl   0x0(%rax)                                #! EA = L0x0; PC = 0x555555557279
	movdqu (%rsi,%rax,1),%xmm0                      #! EA = L0x7ffffffe62e0; Value = 0x0000000000000000; PC = 0x555555557280
	movdqu (%rcx,%rax,1),%xmm2                      #! EA = L0x7ffffffe62e0; Value = 0x0000000000000000; PC = 0x555555557285
	pxor   %xmm2,%xmm0                              #! PC = 0x55555555728a
	movups %xmm0,(%rcx,%rax,1)                      #! EA = L0x7ffffffe62e0; PC = 0x55555555728e
	add    $0x10,%rax                               #! PC = 0x555555557292
	cmp    %rdx,%rax                                #! PC = 0x555555557296
	#jne    0x555555557280 <gf256v_add_sse+32>      #! PC = 0x555555557299
	movdqu (%rsi,%rax,1),%xmm0                      #! EA = L0x7ffffffe62f0; Value = 0x0000000000000000; PC = 0x555555557280
	movdqu (%rcx,%rax,1),%xmm2                      #! EA = L0x7ffffffe62f0; Value = 0x0000000000000000; PC = 0x555555557285
	pxor   %xmm2,%xmm0                              #! PC = 0x55555555728a
	movups %xmm0,(%rcx,%rax,1)                      #! EA = L0x7ffffffe62f0; PC = 0x55555555728e
	add    $0x10,%rax                               #! PC = 0x555555557292
	cmp    %rdx,%rax                                #! PC = 0x555555557296
	#jne    0x555555557280 <gf256v_add_sse+32>      #! PC = 0x555555557299
	add    %rax,%rcx                                #! PC = 0x55555555729b
	add    %rax,%rsi                                #! PC = 0x55555555729e
	and    $0xf,%edi                                #! PC = 0x5555555572a1
	test   %edi,%edi                                #! PC = 0x5555555572a4
	#je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x5555555572a6
	lea    0x1(%rsi),%rdx                           #! PC = 0x5555555572ac
	mov    %rcx,%rax                                #! PC = 0x5555555572b0
	sub    %rdx,%rax                                #! PC = 0x5555555572b3
	cmp    $0xe,%rax                                #! PC = 0x5555555572b6
	#jbe    0x555555557350 <gf256v_add_sse+240>     #! PC = 0x5555555572ba
	lea    -0x1(%rdi),%eax                          #! PC = 0x5555555572c0
	cmp    $0x6,%eax                                #! PC = 0x5555555572c3
	#jbe    0x555555557350 <gf256v_add_sse+240>     #! PC = 0x5555555572c6
	movq   (%rcx),%xmm0                             #! EA = L0x7ffffffe6300; Value = 0x0000000000000000; PC = 0x5555555572cc
	movq   (%rsi),%xmm1                             #! EA = L0x7ffffffe6300; Value = 0x0000000000000000; PC = 0x5555555572d0
	pxor   %xmm1,%xmm0                              #! PC = 0x5555555572d4
	movq   %xmm0,(%rcx)                             #! EA = L0x7ffffffe6300; PC = 0x5555555572d8
	cmp    $0x8,%edi                                #! PC = 0x5555555572dc
	#je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x5555555572df
	movzbl 0x8(%rsi),%eax                           #! EA = L0x7ffffffe6308; Value = 0x0000000000000000; PC = 0x5555555572e5
	xor    %al,0x8(%rcx)                            #! EA = L0x7ffffffe6308; PC = 0x5555555572e9
	cmp    $0x9,%edi                                #! PC = 0x5555555572ec
	#jbe    0x5555555573be <gf256v_add_sse+350>     #! PC = 0x5555555572ef
	movzbl 0x9(%rsi),%eax                           #! EA = L0x7ffffffe6309; Value = 0x0000000000000000; PC = 0x5555555572f5
	xor    %al,0x9(%rcx)                            #! EA = L0x7ffffffe6309; PC = 0x5555555572f9
	cmp    $0xa,%edi                                #! PC = 0x5555555572fc
	#je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x5555555572ff
	movzbl 0xa(%rsi),%eax                           #! EA = L0x7ffffffe630a; Value = 0x0000000000000000; PC = 0x555555557305
	xor    %al,0xa(%rcx)                            #! EA = L0x7ffffffe630a; PC = 0x555555557309
	cmp    $0xb,%edi                                #! PC = 0x55555555730c
	#je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x55555555730f
	movzbl 0xb(%rsi),%eax                           #! EA = L0x7ffffffe630b; Value = 0x0000000000000000; PC = 0x555555557315
	xor    %al,0xb(%rcx)                            #! EA = L0x7ffffffe630b; PC = 0x555555557319
	cmp    $0xc,%edi                                #! PC = 0x55555555731c
	#je     0x5555555573be <gf256v_add_sse+350>     #! PC = 0x55555555731f
	#! <- SP = 0x7ffffffe6198
	#ret                                            #! PC = 0x5555555573be
	test   %ebx,%ebx                                #! PC = 0x55555555b0ae
	#je     0x55555555b197 <gf256mat_prod_multab_sse+311>#! PC = 0x55555555b0b0
	test   %r12d,%r12d                              #! PC = 0x55555555b0b6
	#je     0x55555555b197 <gf256mat_prod_multab_sse+311>#! PC = 0x55555555b0b9
	lea    -0xc0(%rbp),%rbx                         #! PC = 0x55555555b0bf
	cs nopw 0x0(%rax,%rax,1)                        #! EA = L0x0; PC = 0x55555555b0c6
	mov    -0xe4(%rbp),%eax                         #! EA = L0x7ffffffe61ac; Value = 0xfffe62e000000044; PC = 0x55555555b0d0
	mov    $0x10,%r13d                              #! PC = 0x55555555b0d6
	mov    %r12d,%r14d                              #! PC = 0x55555555b0dc
	cmp    %r13d,%eax                               #! PC = 0x55555555b0df
	cmovbe %eax,%r13d                               #! PC = 0x55555555b0e2
	mov    %r13d,-0xc8(%rbp)                        #! EA = L0x7ffffffe61c8; PC = 0x55555555b0e6
	nopl   (%rax)                                   #! EA = L0x44; PC = 0x55555555b0ed
	mov    $0x80,%r8d                               #! PC = 0x55555555b0f0
	mov    %r12d,%ecx                               #! PC = 0x55555555b0f6
	mov    -0xe0(%rbp),%rax                         #! EA = L0x7ffffffe61b0; Value = 0x00007ffffffe62e0; PC = 0x55555555b0f9
	mov    %rbx,%rdi                                #! PC = 0x55555555b100
	cmp    %r8d,%r14d                               #! PC = 0x55555555b103
	cmovbe %r14d,%r8d                               #! PC = 0x55555555b106
	sub    %r14d,%ecx                               #! PC = 0x55555555b10a
	mov    %ecx,%r10d                               #! PC = 0x55555555b10d
	mov    %ecx,-0xc4(%rbp)                         #! EA = L0x7ffffffe61cc; PC = 0x55555555b110
	lea    (%rax,%r10,1),%r15                       #! PC = 0x55555555b116
	mov    %r8d,%edx                                #! PC = 0x55555555b11a
	mov    %r8d,%r13d                               #! PC = 0x55555555b11d
	mov    %r15,%rsi                                #! PC = 0x55555555b120
	#call   0x555555557040 <loadu_xmm>              #! PC = 0x55555555b123
	#! -> SP = 0x7ffffffe6198
	push   %rbp                                     #! EA = L0x7ffffffe6190; PC = 0x555555557040
	mov    %edx,%eax                                #! PC = 0x555555557041
	shr    $0x4,%eax                                #! PC = 0x555555557043
	mov    %rsp,%rbp                                #! PC = 0x555555557046
	push   %rbx                                     #! EA = L0x7ffffffe6188; PC = 0x555555557049
	mov    %rdi,%rbx                                #! PC = 0x55555555704a
	mov    %rsi,%rdi                                #! PC = 0x55555555704d
	mov    %edx,%esi                                #! PC = 0x555555557050
	and    $0xf,%esi                                #! PC = 0x555555557052
	sub    $0x8,%rsp                                #! PC = 0x555555557055
	test   %eax,%eax                                #! PC = 0x555555557059
	#je     0x5555555570d2 <loadu_xmm+146>          #! PC = 0x55555555705b
	movdqu (%rdi),%xmm1                             #! EA = L0x7ffffffe62e0; Value = 0x0000000000000000; PC = 0x55555555705d
	lea    -0x1(%rax),%edx                          #! PC = 0x555555557061
	movaps %xmm1,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x555555557064
	test   %edx,%edx                                #! PC = 0x555555557067
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557069
	movdqu 0x10(%rdi),%xmm2                         #! EA = L0x7ffffffe62f0; Value = 0x0000000000000000; PC = 0x55555555706b
	movaps %xmm2,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x555555557070
	cmp    $0x2,%eax                                #! PC = 0x555555557074
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557077
	shl    $0x4,%rax                                #! PC = 0x5555555570c8
	add    %rax,%rbx                                #! PC = 0x5555555570cc
	add    %rax,%rdi                                #! PC = 0x5555555570cf
	test   %esi,%esi                                #! PC = 0x5555555570d2
	#je     0x5555555570de <loadu_xmm+158>          #! PC = 0x5555555570d4
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x5555555570d6
	#! -> SP = 0x7ffffffe6178
	push   %rbp                                     #! EA = L0x7ffffffe6170; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe6158; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe6118
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffffffe6304; Value = 0x0000000000000000; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffffffe6300; Value = 0x0000000000000000; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe6120; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe6124; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe6118
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe6120; Value = 0x0000000000000000; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6158; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6178
	#ret                                            #! PC = 0x555555557036
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61f0; PC = 0x5555555570db
	mov    -0x8(%rbp),%rbx                          #! EA = L0x7ffffffe6188; Value = 0x00007ffffffe61d0; PC = 0x5555555570de
	leave                                           #! PC = 0x5555555570e2
	#! <- SP = 0x7ffffffe6198
	#ret                                            #! PC = 0x5555555570e3
	mov    -0xc8(%rbp),%eax                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000010; PC = 0x55555555b128
	sub    $0x8,%rsp                                #! PC = 0x55555555b12e
	mov    -0xd8(%rbp),%r9                          #! EA = L0x7ffffffe61b8; Value = 0x00007ffffffe63a0; PC = 0x55555555b132
	mov    -0xc4(%rbp),%ecx                         #! EA = L0x7ffffffe61cc; Value = 0x0000000000000000; PC = 0x55555555b139
	mov    %r13d,%r8d                               #! PC = 0x55555555b13f
	mov    %r12d,%edx                               #! PC = 0x55555555b142
	mov    %rbx,%rdi                                #! PC = 0x55555555b145
	push   %rax                                     #! EA = L0x7ffffffe6190; PC = 0x55555555b148
	mov    -0xd0(%rbp),%rsi                         #! EA = L0x7ffffffe61c0; Value = 0x00007ffff78bbbe0; PC = 0x55555555b149
	#call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! PC = 0x55555555b150
	#! -> SP = 0x7ffffffe6188
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x55555555aa50
	mov    %r8d,%eax                                #! PC = 0x55555555aa51
	mov    %ecx,%ecx                                #! PC = 0x55555555aa54
	and    $0xfffffff0,%eax                         #! PC = 0x55555555aa56
	mov    %rsp,%rbp                                #! PC = 0x55555555aa59
	push   %r15                                     #! EA = L0x7ffffffe6178; PC = 0x55555555aa5c
	mov    %r8d,%r15d                               #! PC = 0x55555555aa5e
	push   %r14                                     #! EA = L0x7ffffffe6170; PC = 0x55555555aa61
	and    $0xf,%r15d                               #! PC = 0x55555555aa63
	mov    %r9,%r14                                 #! PC = 0x55555555aa67
	push   %r13                                     #! EA = L0x7ffffffe6168; PC = 0x55555555aa6a
	mov    %r8d,%r13d                               #! PC = 0x55555555aa6c
	push   %r12                                     #! EA = L0x7ffffffe6160; PC = 0x55555555aa6f
	shr    $0x4,%r13d                               #! PC = 0x55555555aa71
	lea    (%rsi,%rcx,1),%r12                       #! PC = 0x55555555aa75
	push   %rbx                                     #! EA = L0x7ffffffe6158; PC = 0x55555555aa79
	mov    %rdi,%rbx                                #! PC = 0x55555555aa7a
	sub    $0x48,%rsp                               #! PC = 0x55555555aa7d
	mov    %rax,-0x68(%rbp)                         #! EA = L0x7ffffffe6118; PC = 0x55555555aa81
	mov    %r13d,%eax                               #! PC = 0x55555555aa85
	shl    $0x4,%rax                                #! PC = 0x55555555aa88
	add    %rdi,%rax                                #! PC = 0x55555555aa8c
	mov    %rax,-0x70(%rbp)                         #! EA = L0x7ffffffe6110; PC = 0x55555555aa8f
	mov    %edx,%eax                                #! PC = 0x55555555aa93
	mov    %rax,-0x60(%rbp)                         #! EA = L0x7ffffffe6120; PC = 0x55555555aa95
	mov    0x10(%rbp),%eax                          #! EA = L0x7ffffffe6190; Value = 0x0000000000000010; PC = 0x55555555aa99
	shl    $0x5,%rax                                #! PC = 0x55555555aa9c
	add    %r9,%rax                                 #! PC = 0x55555555aaa0
	mov    %rax,-0x58(%rbp)                         #! EA = L0x7ffffffe6128; PC = 0x55555555aaa3
	nopw   0x0(%rax,%rax,1)                         #! EA = L0xfffffffccb40; PC = 0x55555555aaa7
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe63a0; Value = 0xf5d2bb9c694e2700; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe63b0; Value = 0xc98f4503ca8c4600; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbbe0; Value = 0x02d5432a32591fa2; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x0000000000000000; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc98f4503ca8c4600; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbbf0; Value = 0x0205907e6e384a36; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x0000000000000000; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc98f4503ca8c4600; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbc04; Value = 0x95ebae2457494902; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbc00; Value = 0x5749490229f91397; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x5749490229f91397; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc98f4503ca8c4600; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xf5d2bb9c694e2700; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x0000000000000000; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe63c0; Value = 0xbf39a82e91178600; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe63d0; Value = 0x05bd6ed6d36bb800; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbc0c; Value = 0xa7dd45ceec51deaa; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x4ef86ae1844190c4; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x05bd6ed6d36bb800; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbc1c; Value = 0xe2e1ed2e43aec9fd; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x4ebb40387ee96e18; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x05bd6ed6d36bb800; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbc30; Value = 0x72f39fdf569472b2; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbc2c; Value = 0x569472b29c681c8e; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x569472b29c681c8e; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x05bd6ed6d36bb800; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xbf39a82e91178600; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xb007074e88cb2fb5; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe63e0; Value = 0x2743ef8bacc86400; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe63f0; Value = 0x465c72682e341a00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbc38; Value = 0x15629019e7c2d38a; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x2dd514e5fca92c53; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x465c72682e341a00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbc48; Value = 0xffd79051d15d0c66; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x5337be363950d55e; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x465c72682e341a00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbc5c; Value = 0x3339da0348ed298f; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbc58; Value = 0x48ed298f1c4dd7ad; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x48ed298f1c4dd7ad; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x465c72682e341a00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x2743ef8bacc86400; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xe726153df52ae567; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6400; Value = 0xdc9d5e1fc3824100; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6410; Value = 0x6f1397eb84f87c00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbc64; Value = 0xb6f12c85ce8e8624; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xd841de9657d92246; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x6f1397eb84f87c00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbc74; Value = 0xb6552df77ca61fc1; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xefb27420ffc05341; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x6f1397eb84f87c00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbc88; Value = 0xde1cb1c8b621d518; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbc84; Value = 0xb621d5180dcedc6a; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xb621d5180dcedc6a; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x6f1397eb84f87c00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xdc9d5e1fc3824100; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x824848c769a06061; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6420; Value = 0x5598d4194c81cd00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6430; Value = 0x2743ef8bacc86400; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbc90; Value = 0x392aeda82eee935c; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x0ca20705d2b772a1; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2743ef8bacc86400; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbca0; Value = 0x3e70c9ae12733527; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x3b7bec5eb168cd26; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2743ef8bacc86400; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbcb4; Value = 0x1d1f9a0fb6d5da7d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbcb0; Value = 0xb6d5da7df3fc66f6; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xb6d5da7df3fc66f6; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2743ef8bacc86400; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x5598d4194c81cd00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x56f14c8509251bce; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6440; Value = 0xe11018e908f9f100; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6450; Value = 0x921b9b1280098900; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbcbc; Value = 0xe05314617faefcc0; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x5fd9aff2b0535765; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x921b9b1280098900; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbccc; Value = 0x0f109310b0aab429; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x3d5c95315403b5bb; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x921b9b1280098900; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbce0; Value = 0x7be48dded3bbd779; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbcdc; Value = 0xd3bbd7797a5755ac; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xd3bbd7797a5755ac; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x921b9b1280098900; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xe11018e908f9f100; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x6fc71d446f24c07c; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6460; Value = 0x8709800e89078e00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6470; Value = 0xa890d8e048703800; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbce8; Value = 0x26f8899e8eaeae10; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x604acf180aa7c153; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa890d8e048703800; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbcf8; Value = 0x68e1d2a7f7b500d9; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x15d530b8f01ef88a; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa890d8e048703800; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbd0c; Value = 0x084c56f8e1fdb06e; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbd08; Value = 0xe1fdb06e1e105719; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xe1fdb06e1e105719; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa890d8e048703800; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x8709800e89078e00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xd8a243eecd5e4371; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6480; Value = 0xc155f266a7339400; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6490; Value = 0xa427b93a9e1d8300; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbd14; Value = 0x269c3144933843fd; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x192586eec4197f6b; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa427b93a9e1d8300; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbd24; Value = 0x74bdcfa8ccffea1c; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x99103494040df81b; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa427b93a9e1d8300; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbd38; Value = 0xe4cf3bf8483614e2; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbd34; Value = 0x483614e21edb8ee4; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x483614e21edb8ee4; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa427b93a9e1d8300; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xc155f266a7339400; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x1d4dd06be0661cdb; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe64a0; Value = 0x0d67d9b3bed46a00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe64b0; Value = 0xd02a3fc515effa00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbd40; Value = 0x528d94d3b4bd7d03; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x51788cb2944be285; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd02a3fc515effa00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbd50; Value = 0xbe07c88e31ce7c08; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x5bc47731e0d05432; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd02a3fc515effa00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbd64; Value = 0x2cae4fd22dae36ea; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbd60; Value = 0x2dae36ea03f0b413; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x2dae36ea03f0b413; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd02a3fc515effa00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x0d67d9b3bed46a00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xeb86350bfac0f1ee; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe64c0; Value = 0x1679c8a7b1de6f00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe64d0; Value = 0x7bd1349ee54faa00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbd6c; Value = 0x78e5cf3af963d962; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xba4d54a2a36b963b; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7bd1349ee54faa00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbd7c; Value = 0xd841c61a1cede4f2; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xc5c95eba9f9e4a4f; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7bd1349ee54faa00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbd90; Value = 0x4748805ff70f5068; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbd8c; Value = 0xf70f5068ad39d2d8; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xf70f5068ad39d2d8; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7bd1349ee54faa00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x1679c8a7b1de6f00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xa0e247194481c6aa; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe64e0; Value = 0x94cd267febb25900; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe64f0; Value = 0x836456b132d5e700; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbd98; Value = 0x185fdab5e4267ead; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x9473aeccc50bbf34; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x836456b132d5e700; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbda8; Value = 0x91e053751d0b2895; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x83389e9bc7f51bcd; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x836456b132d5e700; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbdbc; Value = 0x4bc81957fd2d2540; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbdb8; Value = 0xfd2d2540a70074fc; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xfd2d2540a70074fc; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x836456b132d5e700; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x94cd267febb25900; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xeaa1739db15e0bec; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6500; Value = 0x06d6bd6d6bbbd000; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6510; Value = 0x60cf258aea45af00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbdc4; Value = 0xcacc799baa2b5d2a; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x8d4fcda1a7130f40; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x60cf258aea45af00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbdd4; Value = 0xd49d8b56f986189c; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x4425233ef8e03075; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x60cf258aea45af00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbde8; Value = 0x8741ab39a6b7ff18; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbde4; Value = 0xa6b7ff181a39c0cd; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xa6b7ff181a39c0cd; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x60cf258aea45af00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x06d6bd6d6bbbd000; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xc8ac802c895ef797; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6520; Value = 0x67c9208ee947ae00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6530; Value = 0x2a243638121c0e00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbdf0; Value = 0x195355484dc2289e; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x697da7b08ce74d64; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2a243638121c0e00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbe00; Value = 0x2f8b8a0d370a13ec; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x03e29dcd9d394562; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2a243638121c0e00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbe14; Value = 0xee351f54bc8c29ab; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbe10; Value = 0xbc8c29ab0b6fa8bc; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xbc8c29ab0b6fa8bc; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2a243638121c0e00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x67c9208ee947ae00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x544f335947be7275; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6540; Value = 0x4c3daedf93e27100; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6550; Value = 0xacfd0e5ff3a25100; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbe1c; Value = 0x267706f06b785bb7; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xcea2b18f93e856d4; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xacfd0e5ff3a25100; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbe2c; Value = 0x6646451064d73b61; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x7f7cadeae879a2bf; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xacfd0e5ff3a25100; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbe40; Value = 0xe694b4f9c4da5c9c; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbe3c; Value = 0xc4da5c9c21876137; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xc4da5c9c21876137; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xacfd0e5ff3a25100; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x4c3daedf93e27100; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xbfb686dba9fa199e; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6560; Value = 0x1dc8ac7964b1d500; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6570; Value = 0xcb342ed11ae5ff00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbe48; Value = 0x608c23c235477557; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x51428c9d58e16ed5; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xcb342ed11ae5ff00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbe58; Value = 0x3227e80ecafd17be; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xbf1e5cbbca856733; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbe6c; Value = 0xa87e9ab146ff7576; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbe68; Value = 0x46ff7576041df4c1; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x46ff7576041df4c1; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x1dc8ac7964b1d500; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x8141f24e7a089521; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6580; Value = 0x5b94de114a85cf00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6590; Value = 0xc7834f0bcc884400; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbe74; Value = 0xf53cbc529999488e; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x65700d44ee2d09e6; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc7834f0bcc884400; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbe84; Value = 0x436238d551f9fc56; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x14e62381e1a985aa; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc7834f0bcc884400; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbe98; Value = 0x4c01044d5439f13d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbe94; Value = 0x5439f13d04d841c0; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x5439f13d04d841c0; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc7834f0bcc884400; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x5b94de114a85cf00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x98dc954d03a99e9c; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe65a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	add    $0x48,%rsp                               #! PC = 0x55555555ac40
	pop    %rbx                                     #! EA = L0x7ffffffe6158; Value = 0x00007ffffffe61d0; PC = 0x55555555ac44
	pop    %r12                                     #! EA = L0x7ffffffe6160; Value = 0x000000000000002c; PC = 0x55555555ac45
	pop    %r13                                     #! EA = L0x7ffffffe6168; Value = 0x000000000000002c; PC = 0x55555555ac47
	pop    %r14                                     #! EA = L0x7ffffffe6170; Value = 0x000000000000002c; PC = 0x55555555ac49
	pop    %r15                                     #! EA = L0x7ffffffe6178; Value = 0x00007ffffffe62e0; PC = 0x55555555ac4b
	pop    %rbp                                     #! EA = L0x7ffffffe6180; Value = 0x00007ffffffe6290; PC = 0x55555555ac4d
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x55555555ac4e
	mov    %rbx,%rdx                                #! PC = 0x55555555b155
	mov    %r13d,%esi                               #! PC = 0x55555555b158
	mov    %r15,%rdi                                #! PC = 0x55555555b15b
	#call   0x5555555571c0 <storeu_xmm>             #! PC = 0x55555555b15e
	#! -> SP = 0x7ffffffe6188
	mov    %esi,%eax                                #! PC = 0x5555555571c0
	and    $0xf,%esi                                #! PC = 0x5555555571c2
	shr    $0x4,%eax                                #! PC = 0x5555555571c5
	lea    -0x1(%rax),%ecx                          #! PC = 0x5555555571c8
	test   %eax,%eax                                #! PC = 0x5555555571cb
	#je     0x555555557241 <storeu_xmm+129>         #! PC = 0x5555555571cd
	movdqa (%rdx),%xmm1                             #! EA = L0x7ffffffe61d0; Value = 0x6a8fe48e51922046; PC = 0x5555555571cf
	movups %xmm1,(%rdi)                             #! EA = L0x7ffffffe62e0; PC = 0x5555555571d3
	test   %ecx,%ecx                                #! PC = 0x5555555571d6
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571d8
	movdqa 0x10(%rdx),%xmm2                         #! EA = L0x7ffffffe61e0; Value = 0x55e0cd0661956771; PC = 0x5555555571da
	movups %xmm2,0x10(%rdi)                         #! EA = L0x7ffffffe62f0; PC = 0x5555555571df
	cmp    $0x2,%eax                                #! PC = 0x5555555571e3
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571e6
	shl    $0x4,%rax                                #! PC = 0x555555557237
	add    %rax,%rdx                                #! PC = 0x55555555723b
	add    %rax,%rdi                                #! PC = 0x55555555723e
	test   %esi,%esi                                #! PC = 0x555555557241
	#jne    0x555555557250 <storeu_xmm+144>         #! PC = 0x555555557243
	movdqa (%rdx),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xc6fd8b7d12d25a81; PC = 0x555555557250
	#jmp    0x5555555570f0 <_store_xmm>             #! PC = 0x555555557254
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x5555555570f0
	mov    %rsp,%rbp                                #! PC = 0x5555555570f1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x5555555570f4
	sub    $0x40,%rsp                               #! PC = 0x5555555570f8
	mov    %fs:0x28,%rdx                            #! PC = 0x5555555570fc
	mov    %rdx,0x38(%rsp)                          #! EA = L0x7ffffffe6178; PC = 0x555555557105
	xor    %edx,%edx                                #! PC = 0x55555555710a
	movaps %xmm0,(%rsp)                             #! EA = L0x7ffffffe6140; PC = 0x55555555710c
	test   %esi,%esi                                #! PC = 0x555555557110
	#je     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557112
	mov    %rdi,%rax                                #! PC = 0x555555557114
	mov    %rsp,%rdx                                #! PC = 0x555555557117
	cmp    $0x8,%esi                                #! PC = 0x55555555711a
	#jb     0x555555557178 <_store_xmm+136>         #! PC = 0x55555555711d
	mov    (%rsp),%rcx                              #! EA = L0x7ffffffe6140; Value = 0xc6fd8b7d12d25a81; PC = 0x55555555711f
	mov    %rcx,(%rdi)                              #! EA = L0x7ffffffe6300; PC = 0x555555557123
	mov    %esi,%ecx                                #! PC = 0x555555557126
	mov    -0x8(%rdx,%rcx,1),%rdi                   #! EA = L0x7ffffffe6144; Value = 0x1c61323cc6fd8b7d; PC = 0x555555557128
	mov    %rdi,-0x8(%rax,%rcx,1)                   #! EA = L0x7ffffffe6304; PC = 0x55555555712d
	lea    0x8(%rax),%rdi                           #! PC = 0x555555557132
	and    $0xfffffffffffffff8,%rdi                 #! PC = 0x555555557136
	sub    %rdi,%rax                                #! PC = 0x55555555713a
	add    %eax,%esi                                #! PC = 0x55555555713d
	sub    %rax,%rdx                                #! PC = 0x55555555713f
	and    $0xfffffff8,%esi                         #! PC = 0x555555557142
	cmp    $0x8,%esi                                #! PC = 0x555555557145
	#jb     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557148
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6178; Value = 0x09baaae9a9287f00; PC = 0x555555557160
	sub    %fs:0x28,%rax                            #! PC = 0x555555557165
	#jne    0x5555555571ad <_store_xmm+189>         #! PC = 0x55555555716e
	leave                                           #! PC = 0x555555557170
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x555555557171
	pop    %rax                                     #! EA = L0x7ffffffe6190; Value = 0x0000000000000010; PC = 0x55555555b163
	pop    %rdx                                     #! EA = L0x7ffffffe6198; Value = 0x000055555555b128; PC = 0x55555555b164
	sub    %r13d,%r14d                              #! PC = 0x55555555b165
	#jne    0x55555555b0f0 <gf256mat_prod_multab_sse+144>#! PC = 0x55555555b168
	mov    -0xc8(%rbp),%edx                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000010; PC = 0x55555555b16a
	mov    %edx,%eax                                #! PC = 0x55555555b170
	imul   %r12d,%eax                               #! PC = 0x55555555b172
	add    %rax,-0xd0(%rbp)                         #! EA = L0x7ffffffe61c0; PC = 0x55555555b176
	lea    (%rdx,%rdx,1),%eax                       #! PC = 0x55555555b17d
	shl    $0x4,%rax                                #! PC = 0x55555555b180
	add    %rax,-0xd8(%rbp)                         #! EA = L0x7ffffffe61b8; PC = 0x55555555b184
	sub    %edx,-0xe4(%rbp)                         #! EA = L0x7ffffffe61ac; PC = 0x55555555b18b
	#jne    0x55555555b0d0 <gf256mat_prod_multab_sse+112>#! PC = 0x55555555b191
	mov    -0xe4(%rbp),%eax                         #! EA = L0x7ffffffe61ac; Value = 0xfffe62e000000034; PC = 0x55555555b0d0
	mov    $0x10,%r13d                              #! PC = 0x55555555b0d6
	mov    %r12d,%r14d                              #! PC = 0x55555555b0dc
	cmp    %r13d,%eax                               #! PC = 0x55555555b0df
	cmovbe %eax,%r13d                               #! PC = 0x55555555b0e2
	mov    %r13d,-0xc8(%rbp)                        #! EA = L0x7ffffffe61c8; PC = 0x55555555b0e6
	nopl   (%rax)                                   #! EA = L0x34; PC = 0x55555555b0ed
	mov    $0x80,%r8d                               #! PC = 0x55555555b0f0
	mov    %r12d,%ecx                               #! PC = 0x55555555b0f6
	mov    -0xe0(%rbp),%rax                         #! EA = L0x7ffffffe61b0; Value = 0x00007ffffffe62e0; PC = 0x55555555b0f9
	mov    %rbx,%rdi                                #! PC = 0x55555555b100
	cmp    %r8d,%r14d                               #! PC = 0x55555555b103
	cmovbe %r14d,%r8d                               #! PC = 0x55555555b106
	sub    %r14d,%ecx                               #! PC = 0x55555555b10a
	mov    %ecx,%r10d                               #! PC = 0x55555555b10d
	mov    %ecx,-0xc4(%rbp)                         #! EA = L0x7ffffffe61cc; PC = 0x55555555b110
	lea    (%rax,%r10,1),%r15                       #! PC = 0x55555555b116
	mov    %r8d,%edx                                #! PC = 0x55555555b11a
	mov    %r8d,%r13d                               #! PC = 0x55555555b11d
	mov    %r15,%rsi                                #! PC = 0x55555555b120
	#call   0x555555557040 <loadu_xmm>              #! PC = 0x55555555b123
	#! -> SP = 0x7ffffffe6198
	push   %rbp                                     #! EA = L0x7ffffffe6190; PC = 0x555555557040
	mov    %edx,%eax                                #! PC = 0x555555557041
	shr    $0x4,%eax                                #! PC = 0x555555557043
	mov    %rsp,%rbp                                #! PC = 0x555555557046
	push   %rbx                                     #! EA = L0x7ffffffe6188; PC = 0x555555557049
	mov    %rdi,%rbx                                #! PC = 0x55555555704a
	mov    %rsi,%rdi                                #! PC = 0x55555555704d
	mov    %edx,%esi                                #! PC = 0x555555557050
	and    $0xf,%esi                                #! PC = 0x555555557052
	sub    $0x8,%rsp                                #! PC = 0x555555557055
	test   %eax,%eax                                #! PC = 0x555555557059
	#je     0x5555555570d2 <loadu_xmm+146>          #! PC = 0x55555555705b
	movdqu (%rdi),%xmm1                             #! EA = L0x7ffffffe62e0; Value = 0x6a8fe48e51922046; PC = 0x55555555705d
	lea    -0x1(%rax),%edx                          #! PC = 0x555555557061
	movaps %xmm1,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x555555557064
	test   %edx,%edx                                #! PC = 0x555555557067
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557069
	movdqu 0x10(%rdi),%xmm2                         #! EA = L0x7ffffffe62f0; Value = 0x55e0cd0661956771; PC = 0x55555555706b
	movaps %xmm2,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x555555557070
	cmp    $0x2,%eax                                #! PC = 0x555555557074
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557077
	shl    $0x4,%rax                                #! PC = 0x5555555570c8
	add    %rax,%rbx                                #! PC = 0x5555555570cc
	add    %rax,%rdi                                #! PC = 0x5555555570cf
	test   %esi,%esi                                #! PC = 0x5555555570d2
	#je     0x5555555570de <loadu_xmm+158>          #! PC = 0x5555555570d4
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x5555555570d6
	#! -> SP = 0x7ffffffe6178
	push   %rbp                                     #! EA = L0x7ffffffe6170; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe6158; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe6118
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffffffe6304; Value = 0x1c61323cc6fd8b7d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffffffe6300; Value = 0xc6fd8b7d12d25a81; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe6120; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe6124; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe6118
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe6120; Value = 0xc6fd8b7d12d25a81; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6158; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6178
	#ret                                            #! PC = 0x555555557036
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61f0; PC = 0x5555555570db
	mov    -0x8(%rbp),%rbx                          #! EA = L0x7ffffffe6188; Value = 0x00007ffffffe61d0; PC = 0x5555555570de
	leave                                           #! PC = 0x5555555570e2
	#! <- SP = 0x7ffffffe6198
	#ret                                            #! PC = 0x5555555570e3
	mov    -0xc8(%rbp),%eax                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000010; PC = 0x55555555b128
	sub    $0x8,%rsp                                #! PC = 0x55555555b12e
	mov    -0xd8(%rbp),%r9                          #! EA = L0x7ffffffe61b8; Value = 0x00007ffffffe65a0; PC = 0x55555555b132
	mov    -0xc4(%rbp),%ecx                         #! EA = L0x7ffffffe61cc; Value = 0x5192204600000000; PC = 0x55555555b139
	mov    %r13d,%r8d                               #! PC = 0x55555555b13f
	mov    %r12d,%edx                               #! PC = 0x55555555b142
	mov    %rbx,%rdi                                #! PC = 0x55555555b145
	push   %rax                                     #! EA = L0x7ffffffe6190; PC = 0x55555555b148
	mov    -0xd0(%rbp),%rsi                         #! EA = L0x7ffffffe61c0; Value = 0x00007ffff78bbea0; PC = 0x55555555b149
	#call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! PC = 0x55555555b150
	#! -> SP = 0x7ffffffe6188
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x55555555aa50
	mov    %r8d,%eax                                #! PC = 0x55555555aa51
	mov    %ecx,%ecx                                #! PC = 0x55555555aa54
	and    $0xfffffff0,%eax                         #! PC = 0x55555555aa56
	mov    %rsp,%rbp                                #! PC = 0x55555555aa59
	push   %r15                                     #! EA = L0x7ffffffe6178; PC = 0x55555555aa5c
	mov    %r8d,%r15d                               #! PC = 0x55555555aa5e
	push   %r14                                     #! EA = L0x7ffffffe6170; PC = 0x55555555aa61
	and    $0xf,%r15d                               #! PC = 0x55555555aa63
	mov    %r9,%r14                                 #! PC = 0x55555555aa67
	push   %r13                                     #! EA = L0x7ffffffe6168; PC = 0x55555555aa6a
	mov    %r8d,%r13d                               #! PC = 0x55555555aa6c
	push   %r12                                     #! EA = L0x7ffffffe6160; PC = 0x55555555aa6f
	shr    $0x4,%r13d                               #! PC = 0x55555555aa71
	lea    (%rsi,%rcx,1),%r12                       #! PC = 0x55555555aa75
	push   %rbx                                     #! EA = L0x7ffffffe6158; PC = 0x55555555aa79
	mov    %rdi,%rbx                                #! PC = 0x55555555aa7a
	sub    $0x48,%rsp                               #! PC = 0x55555555aa7d
	mov    %rax,-0x68(%rbp)                         #! EA = L0x7ffffffe6118; PC = 0x55555555aa81
	mov    %r13d,%eax                               #! PC = 0x55555555aa85
	shl    $0x4,%rax                                #! PC = 0x55555555aa88
	add    %rdi,%rax                                #! PC = 0x55555555aa8c
	mov    %rax,-0x70(%rbp)                         #! EA = L0x7ffffffe6110; PC = 0x55555555aa8f
	mov    %edx,%eax                                #! PC = 0x55555555aa93
	mov    %rax,-0x60(%rbp)                         #! EA = L0x7ffffffe6120; PC = 0x55555555aa95
	mov    0x10(%rbp),%eax                          #! EA = L0x7ffffffe6190; Value = 0x0000000000000010; PC = 0x55555555aa99
	shl    $0x5,%rax                                #! PC = 0x55555555aa9c
	add    %r9,%rax                                 #! PC = 0x55555555aaa0
	mov    %rax,-0x58(%rbp)                         #! EA = L0x7ffffffe6128; PC = 0x55555555aaa3
	nopw   0x0(%rax,%rax,1)                         #! EA = L0xfffffffccf40; PC = 0x55555555aaa7
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe65a0; Value = 0xcb342ed11ae5ff00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe65b0; Value = 0x046dd6bfbbd26900; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbea0; Value = 0x66c48c1e95be0765; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x6a8fe48e51922046; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x046dd6bfbbd26900; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbeb0; Value = 0xfac1c1f66eeb3da0; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x55e0cd0661956771; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x046dd6bfbbd26900; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbec4; Value = 0xd16281e2bce74c96; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbec0; Value = 0xbce74c96f059de50; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xbce74c96f059de50; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x046dd6bfbbd26900; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xcb342ed11ae5ff00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xc6fd8b7d12d25a81; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe65c0; Value = 0x5ff908aef157a600; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe65d0; Value = 0x8709800e89078e00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbecc; Value = 0x795716e9670360e7; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x3384e96a73c1eb05; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x8709800e89078e00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbedc; Value = 0x4ca45d7333d2b772; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x68c5e853813e4bc6; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x8709800e89078e00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbef0; Value = 0x962791f4ea4005a2; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbeec; Value = 0xea4005a2e639f3bc; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xea4005a2e639f3bc; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x8709800e89078e00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x5ff908aef157a600; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x703e5c4573426457; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe65e0; Value = 0xb488ccf044783c00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe65f0; Value = 0xb55874992cc1ed00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbef8; Value = 0x0c57dc2d3977194d; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x555b9e9e2530e24f; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb55874992cc1ed00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbf08; Value = 0x2c522a753a0d982d; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x8f702725f9f58116; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb55874992cc1ed00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbf1c; Value = 0xddbb7e40ba19a9de; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbf18; Value = 0xba19a9de5edad573; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xba19a9de5edad573; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb55874992cc1ed00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xb488ccf044783c00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x753054099f2a0e2b; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6600; Value = 0xb9ef1543faac5600; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6610; Value = 0x65724b5c392e1700; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbf24; Value = 0x7d89300ab5f2d215; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x5e9bc868ce31c8e1; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x65724b5c392e1700; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbf34; Value = 0x94832767cb6ef084; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x457c655c56c2bee0; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x65724b5c392e1700; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbf48; Value = 0x90955d36245324b8; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbf44; Value = 0x245324b8031b10ae; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x245324b8031b10ae; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x65724b5c392e1700; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xb9ef1543faac5600; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xf31a7b2798f49fda; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6620; Value = 0x046dd6bfbbd26900; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6630; Value = 0x408acf05458fca00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbf50; Value = 0xa494bd30b337b04e; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xa8f3f1425a4097e3; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x408acf05458fca00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbf60; Value = 0x9477c14510642149; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xa93ef297ced9631b; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x408acf05458fca00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbf74; Value = 0x68af7a398e0378f2; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbf70; Value = 0x8e0378f2751a8a1a; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x8e0378f2751a8a1a; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x408acf05458fca00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x046dd6bfbbd26900; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x9eab1620629f8825; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6640; Value = 0x800f850a8a058f00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6650; Value = 0xd8f088a078502800; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbf7c; Value = 0xa7b9fc52a20480ec; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x928c0d07ae01d8ee; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd8f088a078502800; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbf8c; Value = 0x0c8d1ac6cfe49055; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xd67a944404ec8512; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd8f088a078502800; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbfa0; Value = 0x5ffcfa5757544ad3; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbf9c; Value = 0x57544ad3306a1a67; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x57544ad3306a1a67; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd8f088a078502800; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x800f850a8a058f00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x9c1033b8f4e23558; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6660; Value = 0xf06fd54aba259f00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6670; Value = 0x99aaffcc55663300; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbfa8; Value = 0x44cacf30e0da6b1e; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x1934908aa00b835b; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x99aaffcc55663300; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbfb8; Value = 0x890edd62fe77facd; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xc8b0adb06b4df61f; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x99aaffcc55663300; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbfcc; Value = 0xa1ed6bbe91f7a040; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbfc8; Value = 0x91f7a040d3122f97; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x91f7a040d3122f97; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x99aaffcc55663300; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xf06fd54aba259f00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x949282e18c030c28; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6680; Value = 0x8a6e59bd37d3e400; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6690; Value = 0x78bae7255d9fc200; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bbfd4; Value = 0x1c3a0d3dd1aa1eb5; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x9fcabbdf89c60793; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x78bae7255d9fc200; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bbfe4; Value = 0x52c2de927ea99513; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x404b903f8a245d11; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x78bae7255d9fc200; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bbff8; Value = 0xb630490e0ad58250; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bbff4; Value = 0x0ad58250d4a6c864; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x0ad58250d4a6c864; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x78bae7255d9fc200; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x8a6e59bd37d3e400; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xbb78672d4a150e68; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe66a0; Value = 0x1679c8a7b1de6f00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe66b0; Value = 0x7bd1349ee54faa00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc000; Value = 0xbafeac4c30820193; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x812583bac0a1cadd; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7bd1349ee54faa00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc010; Value = 0x77f95cca5f6525b5; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x74f73264fd748ce4; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7bd1349ee54faa00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc024; Value = 0xf352ecd468d72790; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc020; Value = 0x68d7279007de7dcf; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x68d7279007de7dcf; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7bd1349ee54faa00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x1679c8a7b1de6f00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x098cfeca5aae006f; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe66c0; Value = 0x7bd1349ee54faa00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe66d0; Value = 0xf1bf6d23d29c4e00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc02c; Value = 0x06b43bd416970f78; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xc85519d62558a5e1; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xf1bf6d23d29c4e00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc03c; Value = 0x60a8c40946254f7e; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x1991f4568a6d0bee; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xf1bf6d23d29c4e00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc050; Value = 0x4572c9d56ef3c793; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc04c; Value = 0x6ef3c793ad019b52; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x6ef3c793ad019b52; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xf1bf6d23d29c4e00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x7bd1349ee54faa00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x8d89a7474c91e695; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe66e0; Value = 0xce894007c98e4700; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe66f0; Value = 0x54486c7024381c00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc058; Value = 0xc6582e92defa3258; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x195f0963ba2bf937; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x54486c7024381c00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc068; Value = 0x8aeac689c0416aeb; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xa66c0fdb78c574e9; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x54486c7024381c00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc07c; Value = 0x09906f043ea40e73; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc078; Value = 0x3ea40e736a257336; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x3ea40e736a257336; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x54486c7024381c00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xce894007c98e4700; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xc4dbb9aa853b2cb7; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6700; Value = 0x5723bfcb9ce87400; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6710; Value = 0x0706050403020100; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc084; Value = 0x3e6fb23f307ed101; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x003db611b11f5355; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x0706050403020100; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc094; Value = 0xcfaf542def3cce6c; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xc6441672e8f2bc86; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x0706050403020100; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc0a8; Value = 0xe25a56119d5bf3b3; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc0a4; Value = 0x9d5bf3b3ae1e5172; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x9d5bf3b3ae1e5172; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x0706050403020100; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x5723bfcb9ce87400; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x67043e374d43b11a; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6720; Value = 0x17a970ced967be00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6730; Value = 0x6b7e41543f2a1500; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc0b0; Value = 0xde8967156e059480; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xade155c8b2b62a21; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x6b7e41543f2a1500; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc0c0; Value = 0x284194bc3f198afc; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x1094d8423cb71ec6; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x6b7e41543f2a1500; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc0d4; Value = 0xde5c7ebc30f8e9b1; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc0d0; Value = 0x30f8e9b17e8d9f31; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x30f8e9b17e8d9f31; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x6b7e41543f2a1500; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x17a970ced967be00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x5c10ada0e9ecc0f5; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6740; Value = 0x85b2ebdc596e3700; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6750; Value = 0x88d5326fe7ba5d00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc0dc; Value = 0xdcda539772c9e565; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x6a703cade2c65989; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x88d5326fe7ba5d00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc0ec; Value = 0xc6e1e39f26b6a3ac; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xbd7eab9c939b564c; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x88d5326fe7ba5d00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc100; Value = 0x537eb46ec0d80024; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc0fc; Value = 0xc0d80024b98628bd; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xc0d80024b98628bd; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x88d5326fe7ba5d00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x85b2ebdc596e3700; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x63544289acb3ed74; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6760; Value = 0xe6161ded0bfbf000; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6770; Value = 0xe27bcb52b0299900; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc108; Value = 0x865bb1707516dc98; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xf95157ab04e3b9b7; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xe27bcb52b0299900; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc118; Value = 0xff9d5452fcff3ec6; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xbe42f9399b106b57; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xe27bcb52b0299900; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc12c; Value = 0xcc67a597a68925b0; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc128; Value = 0xa68925b0bc43eb84; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xa68925b0bc43eb84; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xe27bcb52b0299900; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xe6161ded0bfbf000; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xd21b42ef01dff405; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6780; Value = 0xa940608920c9e900; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6790; Value = 0x7e6c5a4836241200; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc134; Value = 0xc6bb16e0e3abc43f; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x4b50b349fb6cfa4b; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7e6c5a4836241200; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc144; Value = 0xe8419a3507cc8353; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xdfa3df09f1710cb7; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7e6c5a4836241200; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc158; Value = 0x105e9fb39bd614ec; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc154; Value = 0x9bd614ec6627529a; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x9bd614ec6627529a; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7e6c5a4836241200; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xa940608920c9e900; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x498e76fb3986e14c; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe67a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	add    $0x48,%rsp                               #! PC = 0x55555555ac40
	pop    %rbx                                     #! EA = L0x7ffffffe6158; Value = 0x00007ffffffe61d0; PC = 0x55555555ac44
	pop    %r12                                     #! EA = L0x7ffffffe6160; Value = 0x000000000000002c; PC = 0x55555555ac45
	pop    %r13                                     #! EA = L0x7ffffffe6168; Value = 0x000000000000002c; PC = 0x55555555ac47
	pop    %r14                                     #! EA = L0x7ffffffe6170; Value = 0x000000000000002c; PC = 0x55555555ac49
	pop    %r15                                     #! EA = L0x7ffffffe6178; Value = 0x00007ffffffe62e0; PC = 0x55555555ac4b
	pop    %rbp                                     #! EA = L0x7ffffffe6180; Value = 0x00007ffffffe6290; PC = 0x55555555ac4d
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x55555555ac4e
	mov    %rbx,%rdx                                #! PC = 0x55555555b155
	mov    %r13d,%esi                               #! PC = 0x55555555b158
	mov    %r15,%rdi                                #! PC = 0x55555555b15b
	#call   0x5555555571c0 <storeu_xmm>             #! PC = 0x55555555b15e
	#! -> SP = 0x7ffffffe6188
	mov    %esi,%eax                                #! PC = 0x5555555571c0
	and    $0xf,%esi                                #! PC = 0x5555555571c2
	shr    $0x4,%eax                                #! PC = 0x5555555571c5
	lea    -0x1(%rax),%ecx                          #! PC = 0x5555555571c8
	test   %eax,%eax                                #! PC = 0x5555555571cb
	#je     0x555555557241 <storeu_xmm+129>         #! PC = 0x5555555571cd
	movdqa (%rdx),%xmm1                             #! EA = L0x7ffffffe61d0; Value = 0xd3dfe1b527f1abdd; PC = 0x5555555571cf
	movups %xmm1,(%rdi)                             #! EA = L0x7ffffffe62e0; PC = 0x5555555571d3
	test   %ecx,%ecx                                #! PC = 0x5555555571d6
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571d8
	movdqa 0x10(%rdx),%xmm2                         #! EA = L0x7ffffffe61e0; Value = 0x2a029d5f5829bccd; PC = 0x5555555571da
	movups %xmm2,0x10(%rdi)                         #! EA = L0x7ffffffe62f0; PC = 0x5555555571df
	cmp    $0x2,%eax                                #! PC = 0x5555555571e3
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571e6
	shl    $0x4,%rax                                #! PC = 0x555555557237
	add    %rax,%rdx                                #! PC = 0x55555555723b
	add    %rax,%rdi                                #! PC = 0x55555555723e
	test   %esi,%esi                                #! PC = 0x555555557241
	#jne    0x555555557250 <storeu_xmm+144>         #! PC = 0x555555557243
	movdqa (%rdx),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xe204ed87150b720e; PC = 0x555555557250
	#jmp    0x5555555570f0 <_store_xmm>             #! PC = 0x555555557254
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x5555555570f0
	mov    %rsp,%rbp                                #! PC = 0x5555555570f1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x5555555570f4
	sub    $0x40,%rsp                               #! PC = 0x5555555570f8
	mov    %fs:0x28,%rdx                            #! PC = 0x5555555570fc
	mov    %rdx,0x38(%rsp)                          #! EA = L0x7ffffffe6178; PC = 0x555555557105
	xor    %edx,%edx                                #! PC = 0x55555555710a
	movaps %xmm0,(%rsp)                             #! EA = L0x7ffffffe6140; PC = 0x55555555710c
	test   %esi,%esi                                #! PC = 0x555555557110
	#je     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557112
	mov    %rdi,%rax                                #! PC = 0x555555557114
	mov    %rsp,%rdx                                #! PC = 0x555555557117
	cmp    $0x8,%esi                                #! PC = 0x55555555711a
	#jb     0x555555557178 <_store_xmm+136>         #! PC = 0x55555555711d
	mov    (%rsp),%rcx                              #! EA = L0x7ffffffe6140; Value = 0xe204ed87150b720e; PC = 0x55555555711f
	mov    %rcx,(%rdi)                              #! EA = L0x7ffffffe6300; PC = 0x555555557123
	mov    %esi,%ecx                                #! PC = 0x555555557126
	mov    -0x8(%rdx,%rcx,1),%rdi                   #! EA = L0x7ffffffe6144; Value = 0x3f2a9356e204ed87; PC = 0x555555557128
	mov    %rdi,-0x8(%rax,%rcx,1)                   #! EA = L0x7ffffffe6304; PC = 0x55555555712d
	lea    0x8(%rax),%rdi                           #! PC = 0x555555557132
	and    $0xfffffffffffffff8,%rdi                 #! PC = 0x555555557136
	sub    %rdi,%rax                                #! PC = 0x55555555713a
	add    %eax,%esi                                #! PC = 0x55555555713d
	sub    %rax,%rdx                                #! PC = 0x55555555713f
	and    $0xfffffff8,%esi                         #! PC = 0x555555557142
	cmp    $0x8,%esi                                #! PC = 0x555555557145
	#jb     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557148
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6178; Value = 0x09baaae9a9287f00; PC = 0x555555557160
	sub    %fs:0x28,%rax                            #! PC = 0x555555557165
	#jne    0x5555555571ad <_store_xmm+189>         #! PC = 0x55555555716e
	leave                                           #! PC = 0x555555557170
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x555555557171
	pop    %rax                                     #! EA = L0x7ffffffe6190; Value = 0x0000000000000010; PC = 0x55555555b163
	pop    %rdx                                     #! EA = L0x7ffffffe6198; Value = 0x000055555555b128; PC = 0x55555555b164
	sub    %r13d,%r14d                              #! PC = 0x55555555b165
	#jne    0x55555555b0f0 <gf256mat_prod_multab_sse+144>#! PC = 0x55555555b168
	mov    -0xc8(%rbp),%edx                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000010; PC = 0x55555555b16a
	mov    %edx,%eax                                #! PC = 0x55555555b170
	imul   %r12d,%eax                               #! PC = 0x55555555b172
	add    %rax,-0xd0(%rbp)                         #! EA = L0x7ffffffe61c0; PC = 0x55555555b176
	lea    (%rdx,%rdx,1),%eax                       #! PC = 0x55555555b17d
	shl    $0x4,%rax                                #! PC = 0x55555555b180
	add    %rax,-0xd8(%rbp)                         #! EA = L0x7ffffffe61b8; PC = 0x55555555b184
	sub    %edx,-0xe4(%rbp)                         #! EA = L0x7ffffffe61ac; PC = 0x55555555b18b
	#jne    0x55555555b0d0 <gf256mat_prod_multab_sse+112>#! PC = 0x55555555b191
	mov    -0xe4(%rbp),%eax                         #! EA = L0x7ffffffe61ac; Value = 0xfffe62e000000024; PC = 0x55555555b0d0
	mov    $0x10,%r13d                              #! PC = 0x55555555b0d6
	mov    %r12d,%r14d                              #! PC = 0x55555555b0dc
	cmp    %r13d,%eax                               #! PC = 0x55555555b0df
	cmovbe %eax,%r13d                               #! PC = 0x55555555b0e2
	mov    %r13d,-0xc8(%rbp)                        #! EA = L0x7ffffffe61c8; PC = 0x55555555b0e6
	nopl   (%rax)                                   #! EA = L0x24; PC = 0x55555555b0ed
	mov    $0x80,%r8d                               #! PC = 0x55555555b0f0
	mov    %r12d,%ecx                               #! PC = 0x55555555b0f6
	mov    -0xe0(%rbp),%rax                         #! EA = L0x7ffffffe61b0; Value = 0x00007ffffffe62e0; PC = 0x55555555b0f9
	mov    %rbx,%rdi                                #! PC = 0x55555555b100
	cmp    %r8d,%r14d                               #! PC = 0x55555555b103
	cmovbe %r14d,%r8d                               #! PC = 0x55555555b106
	sub    %r14d,%ecx                               #! PC = 0x55555555b10a
	mov    %ecx,%r10d                               #! PC = 0x55555555b10d
	mov    %ecx,-0xc4(%rbp)                         #! EA = L0x7ffffffe61cc; PC = 0x55555555b110
	lea    (%rax,%r10,1),%r15                       #! PC = 0x55555555b116
	mov    %r8d,%edx                                #! PC = 0x55555555b11a
	mov    %r8d,%r13d                               #! PC = 0x55555555b11d
	mov    %r15,%rsi                                #! PC = 0x55555555b120
	#call   0x555555557040 <loadu_xmm>              #! PC = 0x55555555b123
	#! -> SP = 0x7ffffffe6198
	push   %rbp                                     #! EA = L0x7ffffffe6190; PC = 0x555555557040
	mov    %edx,%eax                                #! PC = 0x555555557041
	shr    $0x4,%eax                                #! PC = 0x555555557043
	mov    %rsp,%rbp                                #! PC = 0x555555557046
	push   %rbx                                     #! EA = L0x7ffffffe6188; PC = 0x555555557049
	mov    %rdi,%rbx                                #! PC = 0x55555555704a
	mov    %rsi,%rdi                                #! PC = 0x55555555704d
	mov    %edx,%esi                                #! PC = 0x555555557050
	and    $0xf,%esi                                #! PC = 0x555555557052
	sub    $0x8,%rsp                                #! PC = 0x555555557055
	test   %eax,%eax                                #! PC = 0x555555557059
	#je     0x5555555570d2 <loadu_xmm+146>          #! PC = 0x55555555705b
	movdqu (%rdi),%xmm1                             #! EA = L0x7ffffffe62e0; Value = 0xd3dfe1b527f1abdd; PC = 0x55555555705d
	lea    -0x1(%rax),%edx                          #! PC = 0x555555557061
	movaps %xmm1,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x555555557064
	test   %edx,%edx                                #! PC = 0x555555557067
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557069
	movdqu 0x10(%rdi),%xmm2                         #! EA = L0x7ffffffe62f0; Value = 0x2a029d5f5829bccd; PC = 0x55555555706b
	movaps %xmm2,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x555555557070
	cmp    $0x2,%eax                                #! PC = 0x555555557074
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557077
	shl    $0x4,%rax                                #! PC = 0x5555555570c8
	add    %rax,%rbx                                #! PC = 0x5555555570cc
	add    %rax,%rdi                                #! PC = 0x5555555570cf
	test   %esi,%esi                                #! PC = 0x5555555570d2
	#je     0x5555555570de <loadu_xmm+158>          #! PC = 0x5555555570d4
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x5555555570d6
	#! -> SP = 0x7ffffffe6178
	push   %rbp                                     #! EA = L0x7ffffffe6170; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe6158; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe6118
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffffffe6304; Value = 0x3f2a9356e204ed87; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffffffe6300; Value = 0xe204ed87150b720e; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe6120; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe6124; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe6118
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe6120; Value = 0xe204ed87150b720e; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6158; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6178
	#ret                                            #! PC = 0x555555557036
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61f0; PC = 0x5555555570db
	mov    -0x8(%rbp),%rbx                          #! EA = L0x7ffffffe6188; Value = 0x00007ffffffe61d0; PC = 0x5555555570de
	leave                                           #! PC = 0x5555555570e2
	#! <- SP = 0x7ffffffe6198
	#ret                                            #! PC = 0x5555555570e3
	mov    -0xc8(%rbp),%eax                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000010; PC = 0x55555555b128
	sub    $0x8,%rsp                                #! PC = 0x55555555b12e
	mov    -0xd8(%rbp),%r9                          #! EA = L0x7ffffffe61b8; Value = 0x00007ffffffe67a0; PC = 0x55555555b132
	mov    -0xc4(%rbp),%ecx                         #! EA = L0x7ffffffe61cc; Value = 0x27f1abdd00000000; PC = 0x55555555b139
	mov    %r13d,%r8d                               #! PC = 0x55555555b13f
	mov    %r12d,%edx                               #! PC = 0x55555555b142
	mov    %rbx,%rdi                                #! PC = 0x55555555b145
	push   %rax                                     #! EA = L0x7ffffffe6190; PC = 0x55555555b148
	mov    -0xd0(%rbp),%rsi                         #! EA = L0x7ffffffe61c0; Value = 0x00007ffff78bc160; PC = 0x55555555b149
	#call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! PC = 0x55555555b150
	#! -> SP = 0x7ffffffe6188
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x55555555aa50
	mov    %r8d,%eax                                #! PC = 0x55555555aa51
	mov    %ecx,%ecx                                #! PC = 0x55555555aa54
	and    $0xfffffff0,%eax                         #! PC = 0x55555555aa56
	mov    %rsp,%rbp                                #! PC = 0x55555555aa59
	push   %r15                                     #! EA = L0x7ffffffe6178; PC = 0x55555555aa5c
	mov    %r8d,%r15d                               #! PC = 0x55555555aa5e
	push   %r14                                     #! EA = L0x7ffffffe6170; PC = 0x55555555aa61
	and    $0xf,%r15d                               #! PC = 0x55555555aa63
	mov    %r9,%r14                                 #! PC = 0x55555555aa67
	push   %r13                                     #! EA = L0x7ffffffe6168; PC = 0x55555555aa6a
	mov    %r8d,%r13d                               #! PC = 0x55555555aa6c
	push   %r12                                     #! EA = L0x7ffffffe6160; PC = 0x55555555aa6f
	shr    $0x4,%r13d                               #! PC = 0x55555555aa71
	lea    (%rsi,%rcx,1),%r12                       #! PC = 0x55555555aa75
	push   %rbx                                     #! EA = L0x7ffffffe6158; PC = 0x55555555aa79
	mov    %rdi,%rbx                                #! PC = 0x55555555aa7a
	sub    $0x48,%rsp                               #! PC = 0x55555555aa7d
	mov    %rax,-0x68(%rbp)                         #! EA = L0x7ffffffe6118; PC = 0x55555555aa81
	mov    %r13d,%eax                               #! PC = 0x55555555aa85
	shl    $0x4,%rax                                #! PC = 0x55555555aa88
	add    %rdi,%rax                                #! PC = 0x55555555aa8c
	mov    %rax,-0x70(%rbp)                         #! EA = L0x7ffffffe6110; PC = 0x55555555aa8f
	mov    %edx,%eax                                #! PC = 0x55555555aa93
	mov    %rax,-0x60(%rbp)                         #! EA = L0x7ffffffe6120; PC = 0x55555555aa95
	mov    0x10(%rbp),%eax                          #! EA = L0x7ffffffe6190; Value = 0x0000000000000010; PC = 0x55555555aa99
	shl    $0x5,%rax                                #! PC = 0x55555555aa9c
	add    %r9,%rax                                 #! PC = 0x55555555aaa0
	mov    %rax,-0x58(%rbp)                         #! EA = L0x7ffffffe6128; PC = 0x55555555aaa3
	nopw   0x0(%rax,%rax,1)                         #! EA = L0xfffffffcd340; PC = 0x55555555aaa7
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe67a0; Value = 0xd8f088a078502800; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe67b0; Value = 0x2f9958eec177b600; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc160; Value = 0x3bcf993b0b657039; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xd3dfe1b527f1abdd; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2f9958eec177b600; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc170; Value = 0xe109f3733d7aff20; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x2a029d5f5829bccd; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2f9958eec177b600; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc184; Value = 0xa90adc79f23158a2; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc180; Value = 0xf23158a2352126cd; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xf23158a2352126cd; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2f9958eec177b600; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xd8f088a078502800; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xe204ed87150b720e; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe67c0; Value = 0x415a776c2d361b00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe67d0; Value = 0x7cd7319ae64dab00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc18c; Value = 0xb6ce3159454fa881; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x3175e35704e0846f; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7cd7319ae64dab00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc19c; Value = 0x10308cdcef4edd79; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x5c710d084a0dd7ba; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7cd7319ae64dab00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc1b0; Value = 0xd70e7ed78492520f; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc1ac; Value = 0x8492520fb065451f; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x8492520fb065451f; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7cd7319ae64dab00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x415a776c2d361b00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x5aedee675c54f5f4; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe67e0; Value = 0x1f73c7abb4d86c00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe67f0; Value = 0xeb71c45eb52f9a00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc1b8; Value = 0xf93ef1cf3d800e4b; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xa2421ea5e9e33e5b; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xeb71c45eb52f9a00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc1c8; Value = 0x307319aea6c991af; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xf79796a22b156605; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xeb71c45eb52f9a00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc1dc; Value = 0x518403e50d235225; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc1d8; Value = 0x0d235225efa6d2c0; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x0d235225efa6d2c0; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xeb71c45eb52f9a00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x1f73c7abb4d86c00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x195fe9fe95f418c6; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6800; Value = 0xb83fad2a92158700; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6810; Value = 0x75dd3e96e34ba800; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc1e4; Value = 0x2cc3f379fc31a1d0; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xd4c92515d65f00fc; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x75dd3e96e34ba800; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc1f4; Value = 0x14965308aa16334b; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x42c82d0fcbd62cc4; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x75dd3e96e34ba800; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc208; Value = 0x7619d978160c1c20; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc204; Value = 0x160c1c200c29e1ad; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x160c1c200c29e1ad; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x75dd3e96e34ba800; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xb83fad2a92158700; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x93c4f5160a14b824; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6820; Value = 0x4850786028301800; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6830; Value = 0xec77c15ab62d9b00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc210; Value = 0xdf33b8f0642cc234; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xe1faf5b3ea3bfbf5; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xec77c15ab62d9b00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc220; Value = 0xf2207f8ebee9b047; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xc068815bf6415d94; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xec77c15ab62d9b00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc234; Value = 0xc99dbc6bfda68d93; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc230; Value = 0xfda68d935774abb2; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xfda68d935774abb2; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xec77c15ab62d9b00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x4850786028301800; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x04ba235d748cd5a1; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6840; Value = 0x117fcda3b2dc6e00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6850; Value = 0x0bb164ded56fba00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc23c; Value = 0xf7abc0b96d3daf68; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x1c6437ebfdb62523; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x0bb164ded56fba00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc24c; Value = 0xbb8d5fd59c5e94ee; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xa845e57f645a5f86; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x0bb164ded56fba00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc260; Value = 0x7f796bbd4cdc744a; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc25c; Value = 0x4cdc744a5eb72aee; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x4cdc744a5eb72aee; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x0bb164ded56fba00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x117fcda3b2dc6e00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xe4732f5afd00a493; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6860; Value = 0x8e038f028c018d00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6870; Value = 0x3830282018100800; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc268; Value = 0xbc35d770a4ce3709; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xa1434eaadcf3a1cf; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x3830282018100800; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc278; Value = 0x6a68dee6320e11e5; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x3572cd71871ce1b2; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x3830282018100800; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc28c; Value = 0xee0a23302c4451b8; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc288; Value = 0x2c4451b8d56e8315; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x2c4451b8d56e8315; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x3830282018100800; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x8e038f028c018d00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xc44e8705bb634aa7; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6880; Value = 0xc85ffd6aa2359700; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6890; Value = 0x348749face7db300; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc294; Value = 0x377462ef4123f337; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xffd4a8928e943746; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x348749face7db300; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc2a4; Value = 0xbea132241a651c74; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x0046a2029e1b644d; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x348749face7db300; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc2b8; Value = 0x93cc3f954f8e94f7; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc2b4; Value = 0x4f8e94f7dba63c86; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x4f8e94f7dba63c86; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x348749face7db300; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xc85ffd6aa2359700; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xd26c22595c548620; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe68a0; Value = 0xc4e89cb074582c00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe68b0; Value = 0xf40203f501f7f600; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc2c0; Value = 0x3f6081878044a2d4; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xf98a1ae6e34b4e40; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xf40203f501f7f600; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc2d0; Value = 0xa4a1bcc1baba4a74; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xaa435915cc616913; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xf40203f501f7f600; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc2e4; Value = 0xec4f132720f4e89b; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc2e0; Value = 0x20f4e89ba1d4ebb3; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x20f4e89ba1d4ebb3; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xf40203f501f7f600; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xc4e89cb074582c00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x3408144a8c99f690; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe68c0; Value = 0xacfd0e5ff3a25100; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe68d0; Value = 0x2e49e087a9ce6700; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc2ec; Value = 0x0f0067c20c18dd28; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x4788c7d3120e1002; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2e49e087a9ce6700; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc2fc; Value = 0x93cb76300d023f56; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x1c69623d1fb2bf57; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2e49e087a9ce6700; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc310; Value = 0x404a64b3afa73b5b; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc30c; Value = 0xafa73b5b903d8b05; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xafa73b5b903d8b05; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x2e49e087a9ce6700; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xacfd0e5ff3a25100; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xc3bd9c42a6db0a14; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe68e0; Value = 0x3557f193a6c46200; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe68f0; Value = 0x7d0789f38ef47a00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc318; Value = 0x4e2288e4c9b6ee94; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x558822e3f3d75572; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7d0789f38ef47a00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc328; Value = 0x573112c88366bd79; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x9db6b194af10044a; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7d0789f38ef47a00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc33c; Value = 0x8df9a197da501890; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc338; Value = 0xda5018907dc073ad; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xda5018907dc073ad; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x7d0789f38ef47a00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x3557f193a6c46200; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x0aca78efd4c2521a; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6900; Value = 0xc155f266a7339400; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6910; Value = 0xa427b93a9e1d8300; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc344; Value = 0x9be41d3e5e6ed107; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xccb8e28aa2f3c566; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa427b93a9e1d8300; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc354; Value = 0x06d3dbabed8199d8; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x215a0fa7f440bb68; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa427b93a9e1d8300; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc368; Value = 0x53928e0f59a06aa8; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc364; Value = 0x59a06aa8ccaf2b9e; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x59a06aa8ccaf2b9e; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xa427b93a9e1d8300; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xc155f266a7339400; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x87433f6865cc89df; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6920; Value = 0x232e3934171a0d00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6930; Value = 0x06d6bd6d6bbbd000; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc370; Value = 0x19243a3575253baf; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x508d5f8d824d9ca7; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x06d6bd6d6bbbd000; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc380; Value = 0xb4fb11e75f39ca84; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x7430a9a599a01469; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x06d6bd6d6bbbd000; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc394; Value = 0xb28f2dc6a424bb4f; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc390; Value = 0xa424bb4f94a6bf64; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xa424bb4f94a6bf64; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x06d6bd6d6bbbd000; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x232e3934171a0d00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x662ae7cd81a8ffb1; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6940; Value = 0x846253b531d7e600; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6950; Value = 0x987a47a53ddfe200; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc39c; Value = 0x035c125629beb54e; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xe50246dfbdcf888d; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x987a47a53ddfe200; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc3ac; Value = 0x4b109d2a6fa2b6d0; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xf193748a6faed187; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x987a47a53ddfe200; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc3c0; Value = 0x03116a9ebd70dca0; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc3bc; Value = 0xbd70dca09e79c00b; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xbd70dca09e79c00b; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x987a47a53ddfe200; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x846253b531d7e600; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x33a529ebbfe70553; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6960; Value = 0x1c1814100c080400; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6970; Value = 0xdb9b5b1bc0804000; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc3c8; Value = 0xcb3be5696f51772c; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xd48173faf5b0b73b; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xdb9b5b1bc0804000; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc3d8; Value = 0x9727f5707eec73ff; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x1471e5f3e0f7df91; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xdb9b5b1bc0804000; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc3ec; Value = 0x860861a5c51c716d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc3e8; Value = 0xc51c716d0a3fdfd5; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xc51c716d0a3fdfd5; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xdb9b5b1bc0804000; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x1c1814100c080400; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x7d3dfb651fe8f113; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6980; Value = 0xbf39a82e91178600; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6990; Value = 0x05bd6ed6d36bb800; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc3f4; Value = 0xefde4d220a32ed3d; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xd56dca4552ef708b; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x05bd6ed6d36bb800; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc404; Value = 0x36e0d2cc1f4b7c3f; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x7eed1c28036a0840; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x05bd6ed6d36bb800; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc418; Value = 0x4f85dad475599643; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc414; Value = 0x755996431b1a0683; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x755996431b1a0683; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x05bd6ed6d36bb800; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xbf39a82e91178600; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x444d24ca3714a06a; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe69a0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	add    $0x48,%rsp                               #! PC = 0x55555555ac40
	pop    %rbx                                     #! EA = L0x7ffffffe6158; Value = 0x00007ffffffe61d0; PC = 0x55555555ac44
	pop    %r12                                     #! EA = L0x7ffffffe6160; Value = 0x000000000000002c; PC = 0x55555555ac45
	pop    %r13                                     #! EA = L0x7ffffffe6168; Value = 0x000000000000002c; PC = 0x55555555ac47
	pop    %r14                                     #! EA = L0x7ffffffe6170; Value = 0x000000000000002c; PC = 0x55555555ac49
	pop    %r15                                     #! EA = L0x7ffffffe6178; Value = 0x00007ffffffe62e0; PC = 0x55555555ac4b
	pop    %rbp                                     #! EA = L0x7ffffffe6180; Value = 0x00007ffffffe6290; PC = 0x55555555ac4d
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x55555555ac4e
	mov    %rbx,%rdx                                #! PC = 0x55555555b155
	mov    %r13d,%esi                               #! PC = 0x55555555b158
	mov    %r15,%rdi                                #! PC = 0x55555555b15b
	#call   0x5555555571c0 <storeu_xmm>             #! PC = 0x55555555b15e
	#! -> SP = 0x7ffffffe6188
	mov    %esi,%eax                                #! PC = 0x5555555571c0
	and    $0xf,%esi                                #! PC = 0x5555555571c2
	shr    $0x4,%eax                                #! PC = 0x5555555571c5
	lea    -0x1(%rax),%ecx                          #! PC = 0x5555555571c8
	test   %eax,%eax                                #! PC = 0x5555555571cb
	#je     0x555555557241 <storeu_xmm+129>         #! PC = 0x5555555571cd
	movdqa (%rdx),%xmm1                             #! EA = L0x7ffffffe61d0; Value = 0x3cd1e839192b8eac; PC = 0x5555555571cf
	movups %xmm1,(%rdi)                             #! EA = L0x7ffffffe62e0; PC = 0x5555555571d3
	test   %ecx,%ecx                                #! PC = 0x5555555571d6
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571d8
	movdqa 0x10(%rdx),%xmm2                         #! EA = L0x7ffffffe61e0; Value = 0x94e7d23b58717f70; PC = 0x5555555571da
	movups %xmm2,0x10(%rdi)                         #! EA = L0x7ffffffe62f0; PC = 0x5555555571df
	cmp    $0x2,%eax                                #! PC = 0x5555555571e3
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571e6
	shl    $0x4,%rax                                #! PC = 0x555555557237
	add    %rax,%rdx                                #! PC = 0x55555555723b
	add    %rax,%rdi                                #! PC = 0x55555555723e
	test   %esi,%esi                                #! PC = 0x555555557241
	#jne    0x555555557250 <storeu_xmm+144>         #! PC = 0x555555557243
	movdqa (%rdx),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xe9f9128d42e7994c; PC = 0x555555557250
	#jmp    0x5555555570f0 <_store_xmm>             #! PC = 0x555555557254
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x5555555570f0
	mov    %rsp,%rbp                                #! PC = 0x5555555570f1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x5555555570f4
	sub    $0x40,%rsp                               #! PC = 0x5555555570f8
	mov    %fs:0x28,%rdx                            #! PC = 0x5555555570fc
	mov    %rdx,0x38(%rsp)                          #! EA = L0x7ffffffe6178; PC = 0x555555557105
	xor    %edx,%edx                                #! PC = 0x55555555710a
	movaps %xmm0,(%rsp)                             #! EA = L0x7ffffffe6140; PC = 0x55555555710c
	test   %esi,%esi                                #! PC = 0x555555557110
	#je     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557112
	mov    %rdi,%rax                                #! PC = 0x555555557114
	mov    %rsp,%rdx                                #! PC = 0x555555557117
	cmp    $0x8,%esi                                #! PC = 0x55555555711a
	#jb     0x555555557178 <_store_xmm+136>         #! PC = 0x55555555711d
	mov    (%rsp),%rcx                              #! EA = L0x7ffffffe6140; Value = 0xe9f9128d42e7994c; PC = 0x55555555711f
	mov    %rcx,(%rdi)                              #! EA = L0x7ffffffe6300; PC = 0x555555557123
	mov    %esi,%ecx                                #! PC = 0x555555557126
	mov    -0x8(%rdx,%rcx,1),%rdi                   #! EA = L0x7ffffffe6144; Value = 0xa8aefc15e9f9128d; PC = 0x555555557128
	mov    %rdi,-0x8(%rax,%rcx,1)                   #! EA = L0x7ffffffe6304; PC = 0x55555555712d
	lea    0x8(%rax),%rdi                           #! PC = 0x555555557132
	and    $0xfffffffffffffff8,%rdi                 #! PC = 0x555555557136
	sub    %rdi,%rax                                #! PC = 0x55555555713a
	add    %eax,%esi                                #! PC = 0x55555555713d
	sub    %rax,%rdx                                #! PC = 0x55555555713f
	and    $0xfffffff8,%esi                         #! PC = 0x555555557142
	cmp    $0x8,%esi                                #! PC = 0x555555557145
	#jb     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557148
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6178; Value = 0x09baaae9a9287f00; PC = 0x555555557160
	sub    %fs:0x28,%rax                            #! PC = 0x555555557165
	#jne    0x5555555571ad <_store_xmm+189>         #! PC = 0x55555555716e
	leave                                           #! PC = 0x555555557170
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x555555557171
	pop    %rax                                     #! EA = L0x7ffffffe6190; Value = 0x0000000000000010; PC = 0x55555555b163
	pop    %rdx                                     #! EA = L0x7ffffffe6198; Value = 0x000055555555b128; PC = 0x55555555b164
	sub    %r13d,%r14d                              #! PC = 0x55555555b165
	#jne    0x55555555b0f0 <gf256mat_prod_multab_sse+144>#! PC = 0x55555555b168
	mov    -0xc8(%rbp),%edx                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000010; PC = 0x55555555b16a
	mov    %edx,%eax                                #! PC = 0x55555555b170
	imul   %r12d,%eax                               #! PC = 0x55555555b172
	add    %rax,-0xd0(%rbp)                         #! EA = L0x7ffffffe61c0; PC = 0x55555555b176
	lea    (%rdx,%rdx,1),%eax                       #! PC = 0x55555555b17d
	shl    $0x4,%rax                                #! PC = 0x55555555b180
	add    %rax,-0xd8(%rbp)                         #! EA = L0x7ffffffe61b8; PC = 0x55555555b184
	sub    %edx,-0xe4(%rbp)                         #! EA = L0x7ffffffe61ac; PC = 0x55555555b18b
	#jne    0x55555555b0d0 <gf256mat_prod_multab_sse+112>#! PC = 0x55555555b191
	mov    -0xe4(%rbp),%eax                         #! EA = L0x7ffffffe61ac; Value = 0xfffe62e000000014; PC = 0x55555555b0d0
	mov    $0x10,%r13d                              #! PC = 0x55555555b0d6
	mov    %r12d,%r14d                              #! PC = 0x55555555b0dc
	cmp    %r13d,%eax                               #! PC = 0x55555555b0df
	cmovbe %eax,%r13d                               #! PC = 0x55555555b0e2
	mov    %r13d,-0xc8(%rbp)                        #! EA = L0x7ffffffe61c8; PC = 0x55555555b0e6
	nopl   (%rax)                                   #! EA = L0x14; PC = 0x55555555b0ed
	mov    $0x80,%r8d                               #! PC = 0x55555555b0f0
	mov    %r12d,%ecx                               #! PC = 0x55555555b0f6
	mov    -0xe0(%rbp),%rax                         #! EA = L0x7ffffffe61b0; Value = 0x00007ffffffe62e0; PC = 0x55555555b0f9
	mov    %rbx,%rdi                                #! PC = 0x55555555b100
	cmp    %r8d,%r14d                               #! PC = 0x55555555b103
	cmovbe %r14d,%r8d                               #! PC = 0x55555555b106
	sub    %r14d,%ecx                               #! PC = 0x55555555b10a
	mov    %ecx,%r10d                               #! PC = 0x55555555b10d
	mov    %ecx,-0xc4(%rbp)                         #! EA = L0x7ffffffe61cc; PC = 0x55555555b110
	lea    (%rax,%r10,1),%r15                       #! PC = 0x55555555b116
	mov    %r8d,%edx                                #! PC = 0x55555555b11a
	mov    %r8d,%r13d                               #! PC = 0x55555555b11d
	mov    %r15,%rsi                                #! PC = 0x55555555b120
	#call   0x555555557040 <loadu_xmm>              #! PC = 0x55555555b123
	#! -> SP = 0x7ffffffe6198
	push   %rbp                                     #! EA = L0x7ffffffe6190; PC = 0x555555557040
	mov    %edx,%eax                                #! PC = 0x555555557041
	shr    $0x4,%eax                                #! PC = 0x555555557043
	mov    %rsp,%rbp                                #! PC = 0x555555557046
	push   %rbx                                     #! EA = L0x7ffffffe6188; PC = 0x555555557049
	mov    %rdi,%rbx                                #! PC = 0x55555555704a
	mov    %rsi,%rdi                                #! PC = 0x55555555704d
	mov    %edx,%esi                                #! PC = 0x555555557050
	and    $0xf,%esi                                #! PC = 0x555555557052
	sub    $0x8,%rsp                                #! PC = 0x555555557055
	test   %eax,%eax                                #! PC = 0x555555557059
	#je     0x5555555570d2 <loadu_xmm+146>          #! PC = 0x55555555705b
	movdqu (%rdi),%xmm1                             #! EA = L0x7ffffffe62e0; Value = 0x3cd1e839192b8eac; PC = 0x55555555705d
	lea    -0x1(%rax),%edx                          #! PC = 0x555555557061
	movaps %xmm1,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x555555557064
	test   %edx,%edx                                #! PC = 0x555555557067
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557069
	movdqu 0x10(%rdi),%xmm2                         #! EA = L0x7ffffffe62f0; Value = 0x94e7d23b58717f70; PC = 0x55555555706b
	movaps %xmm2,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x555555557070
	cmp    $0x2,%eax                                #! PC = 0x555555557074
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557077
	shl    $0x4,%rax                                #! PC = 0x5555555570c8
	add    %rax,%rbx                                #! PC = 0x5555555570cc
	add    %rax,%rdi                                #! PC = 0x5555555570cf
	test   %esi,%esi                                #! PC = 0x5555555570d2
	#je     0x5555555570de <loadu_xmm+158>          #! PC = 0x5555555570d4
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x5555555570d6
	#! -> SP = 0x7ffffffe6178
	push   %rbp                                     #! EA = L0x7ffffffe6170; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe6158; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe6118
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffffffe6304; Value = 0xa8aefc15e9f9128d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffffffe6300; Value = 0xe9f9128d42e7994c; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe6120; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe6124; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe6118
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe6120; Value = 0xe9f9128d42e7994c; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6158; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6178
	#ret                                            #! PC = 0x555555557036
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61f0; PC = 0x5555555570db
	mov    -0x8(%rbp),%rbx                          #! EA = L0x7ffffffe6188; Value = 0x00007ffffffe61d0; PC = 0x5555555570de
	leave                                           #! PC = 0x5555555570e2
	#! <- SP = 0x7ffffffe6198
	#ret                                            #! PC = 0x5555555570e3
	mov    -0xc8(%rbp),%eax                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000010; PC = 0x55555555b128
	sub    $0x8,%rsp                                #! PC = 0x55555555b12e
	mov    -0xd8(%rbp),%r9                          #! EA = L0x7ffffffe61b8; Value = 0x00007ffffffe69a0; PC = 0x55555555b132
	mov    -0xc4(%rbp),%ecx                         #! EA = L0x7ffffffe61cc; Value = 0x192b8eac00000000; PC = 0x55555555b139
	mov    %r13d,%r8d                               #! PC = 0x55555555b13f
	mov    %r12d,%edx                               #! PC = 0x55555555b142
	mov    %rbx,%rdi                                #! PC = 0x55555555b145
	push   %rax                                     #! EA = L0x7ffffffe6190; PC = 0x55555555b148
	mov    -0xd0(%rbp),%rsi                         #! EA = L0x7ffffffe61c0; Value = 0x00007ffff78bc420; PC = 0x55555555b149
	#call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! PC = 0x55555555b150
	#! -> SP = 0x7ffffffe6188
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x55555555aa50
	mov    %r8d,%eax                                #! PC = 0x55555555aa51
	mov    %ecx,%ecx                                #! PC = 0x55555555aa54
	and    $0xfffffff0,%eax                         #! PC = 0x55555555aa56
	mov    %rsp,%rbp                                #! PC = 0x55555555aa59
	push   %r15                                     #! EA = L0x7ffffffe6178; PC = 0x55555555aa5c
	mov    %r8d,%r15d                               #! PC = 0x55555555aa5e
	push   %r14                                     #! EA = L0x7ffffffe6170; PC = 0x55555555aa61
	and    $0xf,%r15d                               #! PC = 0x55555555aa63
	mov    %r9,%r14                                 #! PC = 0x55555555aa67
	push   %r13                                     #! EA = L0x7ffffffe6168; PC = 0x55555555aa6a
	mov    %r8d,%r13d                               #! PC = 0x55555555aa6c
	push   %r12                                     #! EA = L0x7ffffffe6160; PC = 0x55555555aa6f
	shr    $0x4,%r13d                               #! PC = 0x55555555aa71
	lea    (%rsi,%rcx,1),%r12                       #! PC = 0x55555555aa75
	push   %rbx                                     #! EA = L0x7ffffffe6158; PC = 0x55555555aa79
	mov    %rdi,%rbx                                #! PC = 0x55555555aa7a
	sub    $0x48,%rsp                               #! PC = 0x55555555aa7d
	mov    %rax,-0x68(%rbp)                         #! EA = L0x7ffffffe6118; PC = 0x55555555aa81
	mov    %r13d,%eax                               #! PC = 0x55555555aa85
	shl    $0x4,%rax                                #! PC = 0x55555555aa88
	add    %rdi,%rax                                #! PC = 0x55555555aa8c
	mov    %rax,-0x70(%rbp)                         #! EA = L0x7ffffffe6110; PC = 0x55555555aa8f
	mov    %edx,%eax                                #! PC = 0x55555555aa93
	mov    %rax,-0x60(%rbp)                         #! EA = L0x7ffffffe6120; PC = 0x55555555aa95
	mov    0x10(%rbp),%eax                          #! EA = L0x7ffffffe6190; Value = 0x0000000000000010; PC = 0x55555555aa99
	shl    $0x5,%rax                                #! PC = 0x55555555aa9c
	add    %r9,%rax                                 #! PC = 0x55555555aaa0
	mov    %rax,-0x58(%rbp)                         #! EA = L0x7ffffffe6128; PC = 0x55555555aaa3
	nopw   0x0(%rax,%rax,1)                         #! EA = L0xfffffffcd740; PC = 0x55555555aaa7
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe69a0; Value = 0x7766554433221100; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe69b0; Value = 0x313a272c1d160b00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc420; Value = 0xd2914204a6299f63; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x3cd1e839192b8eac; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x313a272c1d160b00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc430; Value = 0x983deb2e28c76b76; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x94e7d23b58717f70; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x313a272c1d160b00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc444; Value = 0x4c8c79e1cff9ab07; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc440; Value = 0xcff9ab078fc212c0; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xcff9ab078fc212c0; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x313a272c1d160b00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x7766554433221100; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xe9f9128d42e7994c; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe69c0; Value = 0x97a6f5c453623100; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe69d0; Value = 0xb38ec9f4477a3d00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc44c; Value = 0x1f2805e5e6f727a1; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x6193e67d31a422a5; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb38ec9f4477a3d00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc45c; Value = 0xab26c70f266d2cac; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x4f270bc3c672fe27; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb38ec9f4477a3d00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc470; Value = 0x751909b97082f83d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc46c; Value = 0x7082f83db9a3c3ad; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x7082f83db9a3c3ad; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb38ec9f4477a3d00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x97a6f5c453623100; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x6209e7fae5b1b038; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe69e0; Value = 0x269357e2c471b500; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe69f0; Value = 0x56f307a2f451a500; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc478; Value = 0xa5b7c7fcdb35ff99; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x587a13f5ea73cf1d; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x56f307a2f451a500; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc488; Value = 0x987e0bc93563ba69; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x06fb9bc71a9ad3f9; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x56f307a2f451a500; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc49c; Value = 0x954c7f8ea29ede3b; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc498; Value = 0xa29ede3b6c3f5ce0; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xa29ede3b6c3f5ce0; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x56f307a2f451a500; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x269357e2c471b500; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xd19834dbf36be4d7; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6a00; Value = 0x6c7844503c281400; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6a10; Value = 0x9ac12c77edb65b00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc4a4; Value = 0x296029396adc71e8; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x01f7c8c1a9d03f8d; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x9ac12c77edb65b00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc4b4; Value = 0xa26d36d36db5f0a3; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x23e18050b9add660; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x9ac12c77edb65b00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc4c8; Value = 0x57af9c14025d2017; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc4c4; Value = 0x025d2017a751de50; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x025d2017a751de50; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x9ac12c77edb65b00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x6c7844503c281400; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xae2e20343d66de7b; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6a20; Value = 0x81df3d63e2bc5e00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6a30; Value = 0xc85ffd6aa2359700; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc4d0; Value = 0xdbb53c3383c57cf4; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x0336ca98e0e2b102; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc85ffd6aa2359700; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc4e0; Value = 0x257e3851f1f1926d; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x53c415ae9ceaa204; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc85ffd6aa2359700; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc4f4; Value = 0x7f5fdaea15bea5c7; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc4f0; Value = 0x15bea5c72255f83f; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x15bea5c72255f83f; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc85ffd6aa2359700; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x81df3d63e2bc5e00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x86e69603095ec457; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6a40; Value = 0x3830282018100800; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6a50; Value = 0xad2db6369b1b8000; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc4fc; Value = 0x539a57c517d8a62c; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x0e7dcdd8d661dc7d; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xad2db6369b1b8000; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc50c; Value = 0x3685083036821dfd; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x5b15710ddea85da0; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xad2db6369b1b8000; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc520; Value = 0x4a58b399d36d5f2c; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc51c; Value = 0xd36d5f2cc62a447a; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xd36d5f2cc62a447a; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xad2db6369b1b8000; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x3830282018100800; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x2c894a3c809e1eb2; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6a60; Value = 0xb9ef1543faac5600; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6a70; Value = 0x65724b5c392e1700; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc528; Value = 0xa6956831aa7b3ca6; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xa0c143aa6efb9b06; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x65724b5c392e1700; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc538; Value = 0x946095b1166f4871; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xf051319675d4b509; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x65724b5c392e1700; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc54c; Value = 0xf2d9e921f8d247d6; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc548; Value = 0xf8d247d639aedee5; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xf8d247d639aedee5; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x65724b5c392e1700; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xb9ef1543faac5600; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xeecc8447ead5084f; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6a80; Value = 0x2e49e087a9ce6700; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6a90; Value = 0xd6fc82a87e542a00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc554; Value = 0x3cb1e3f0c374e3aa; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xd97bb7c5d2e2677f; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd6fc82a87e542a00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc564; Value = 0x275e33b3353f2966; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x1c238b418d996f3a; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd6fc82a87e542a00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc578; Value = 0xeab27456de79e98c; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc574; Value = 0xde79e98c45fc616e; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xde79e98c45fc616e; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd6fc82a87e542a00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x2e49e087a9ce6700; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xb593615b032a9290; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6aa0; Value = 0x289f5deac275b700; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6ab0; Value = 0xb633a72294118500; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc580; Value = 0xb1672f675f0e6b7a; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x3529a95898b379bb; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb633a72294118500; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc590; Value = 0x969313e1c2e3b454; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x66fd5cdd13dc498f; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb633a72294118500; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc5a4; Value = 0xba06621337b2c313; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc5a0; Value = 0x37b2c31345299e37; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x37b2c31345299e37; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb633a72294118500; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x289f5deac275b700; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x2037a4824b250930; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6ac0; Value = 0xe4ad763fdb924900; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6ad0; Value = 0xc23e21dd1fe3fc00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc5ac; Value = 0xf7371242ac541f51; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x52325f43d8e347b7; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc23e21dd1fe3fc00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc5bc; Value = 0x2110614348426f58; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x38fe1b1d006973c2; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc23e21dd1fe3fc00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc5d0; Value = 0xe980f6a821ba6051; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc5cc; Value = 0x21ba60513922af32; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x21ba60513922af32; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xc23e21dd1fe3fc00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xe4ad763fdb924900; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x9c9200c5344c988c; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6ae0; Value = 0x43e11cbefd5fa200; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6af0; Value = 0x5c92db154987ce00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc5d8; Value = 0x7fcb0f749e8fb547; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xd5c9310cdbfd21df; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x5c92db154987ce00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc5e8; Value = 0xc410906992b767d0; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x92026c1ba326d79d; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x5c92db154987ce00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc5fc; Value = 0xcc2847ee7a72426d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc5f8; Value = 0x7a72426d812eb402; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x7a72426d812eb402; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x5c92db154987ce00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x43e11cbefd5fa200; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x36c03ead1c3d4001; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6b00; Value = 0x4aeb13b2f859a100; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6b10; Value = 0xcc322bd519e7fe00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc604; Value = 0xec277acf4b595722; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xad6c15eeb9f35e89; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xcc322bd519e7fe00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc614; Value = 0x167c6014c5e9737f; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x13cc884c1806066c; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xcc322bd519e7fe00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc628; Value = 0x748e57afbf3f71c4; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc624; Value = 0xbf3f71c4154373e1; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xbf3f71c4154373e1; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xcc322bd519e7fe00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x4aeb13b2f859a100; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x52c37444943c9d5e; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6b20; Value = 0x4ded16b6fb5ba000; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6b30; Value = 0xbc527b9529c7ee00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc630; Value = 0x606c4263dadc5b45; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xe3c1ffbfeb063f37; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xbc527b9529c7ee00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc640; Value = 0x8c2e7ce5f87f8344; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x06cdba006f5b3295; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xbc527b9529c7ee00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc654; Value = 0x58cd323c54bb29a7; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc650; Value = 0x54bb29a7c4e8cc1f; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x54bb29a7c4e8cc1f; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xbc527b9529c7ee00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x4ded16b6fb5ba000; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xcfef19927911a97c; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6b40; Value = 0xd02a3fc515effa00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6b50; Value = 0xaf96dde44b723900; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc65c; Value = 0xaad2d17d35ea9a37; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xb15231168d8dc8b4; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xaf96dde44b723900; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc66c; Value = 0x2276fa57605257f0; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0xf690c77595ddf8b6; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xaf96dde44b723900; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc680; Value = 0xa0b9921bdd264113; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc67c; Value = 0xdd264113fa0b8f4e; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xdd264113fa0b8f4e; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xaf96dde44b723900; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xd02a3fc515effa00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x027b09296b05cca8; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6b60; Value = 0x796a5f4c35261300; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6b70; Value = 0xd1fa87ac7d562b00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc688; Value = 0x301ea52e603ca450; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x6eb3c517f9b65c2f; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd1fa87ac7d562b00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc698; Value = 0x96b5f2262887cfbc; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x6b15c57803eff5ca; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd1fa87ac7d562b00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc6ac; Value = 0x89e37662e0fd695d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc6a8; Value = 0xe0fd695da798a642; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0xe0fd695da798a642; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xd1fa87ac7d562b00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x796a5f4c35261300; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0xa223170569815ef7; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6b80; Value = 0xec77c15ab62d9b00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6b90; Value = 0x4231a4d795e67300; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc6b4; Value = 0xb28ce9612eb86eb2; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x136a8fb3031f05a8; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x4231a4d795e67300; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc6c4; Value = 0x4e082ce6e42696d5; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x69747144cdd5fb20; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x4231a4d795e67300; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc6d8; Value = 0xf3d078733a9d444d; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc6d4; Value = 0x3a9d444d6eb1d6a9; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x3a9d444d6eb1d6a9; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x4231a4d795e67300; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0xec77c15ab62d9b00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x1b7666450571217d; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6ba0; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	add    $0x48,%rsp                               #! PC = 0x55555555ac40
	pop    %rbx                                     #! EA = L0x7ffffffe6158; Value = 0x00007ffffffe61d0; PC = 0x55555555ac44
	pop    %r12                                     #! EA = L0x7ffffffe6160; Value = 0x000000000000002c; PC = 0x55555555ac45
	pop    %r13                                     #! EA = L0x7ffffffe6168; Value = 0x000000000000002c; PC = 0x55555555ac47
	pop    %r14                                     #! EA = L0x7ffffffe6170; Value = 0x000000000000002c; PC = 0x55555555ac49
	pop    %r15                                     #! EA = L0x7ffffffe6178; Value = 0x00007ffffffe62e0; PC = 0x55555555ac4b
	pop    %rbp                                     #! EA = L0x7ffffffe6180; Value = 0x00007ffffffe6290; PC = 0x55555555ac4d
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x55555555ac4e
	mov    %rbx,%rdx                                #! PC = 0x55555555b155
	mov    %r13d,%esi                               #! PC = 0x55555555b158
	mov    %r15,%rdi                                #! PC = 0x55555555b15b
	#call   0x5555555571c0 <storeu_xmm>             #! PC = 0x55555555b15e
	#! -> SP = 0x7ffffffe6188
	mov    %esi,%eax                                #! PC = 0x5555555571c0
	and    $0xf,%esi                                #! PC = 0x5555555571c2
	shr    $0x4,%eax                                #! PC = 0x5555555571c5
	lea    -0x1(%rax),%ecx                          #! PC = 0x5555555571c8
	test   %eax,%eax                                #! PC = 0x5555555571cb
	#je     0x555555557241 <storeu_xmm+129>         #! PC = 0x5555555571cd
	movdqa (%rdx),%xmm1                             #! EA = L0x7ffffffe61d0; Value = 0x1e312419268bf7a5; PC = 0x5555555571cf
	movups %xmm1,(%rdi)                             #! EA = L0x7ffffffe62e0; PC = 0x5555555571d3
	test   %ecx,%ecx                                #! PC = 0x5555555571d6
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571d8
	movdqa 0x10(%rdx),%xmm2                         #! EA = L0x7ffffffe61e0; Value = 0x7dc079b713444af0; PC = 0x5555555571da
	movups %xmm2,0x10(%rdi)                         #! EA = L0x7ffffffe62f0; PC = 0x5555555571df
	cmp    $0x2,%eax                                #! PC = 0x5555555571e3
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571e6
	shl    $0x4,%rax                                #! PC = 0x555555557237
	add    %rax,%rdx                                #! PC = 0x55555555723b
	add    %rax,%rdi                                #! PC = 0x55555555723e
	test   %esi,%esi                                #! PC = 0x555555557241
	#jne    0x555555557250 <storeu_xmm+144>         #! PC = 0x555555557243
	movdqa (%rdx),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x17c5ebe7f7ca4701; PC = 0x555555557250
	#jmp    0x5555555570f0 <_store_xmm>             #! PC = 0x555555557254
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x5555555570f0
	mov    %rsp,%rbp                                #! PC = 0x5555555570f1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x5555555570f4
	sub    $0x40,%rsp                               #! PC = 0x5555555570f8
	mov    %fs:0x28,%rdx                            #! PC = 0x5555555570fc
	mov    %rdx,0x38(%rsp)                          #! EA = L0x7ffffffe6178; PC = 0x555555557105
	xor    %edx,%edx                                #! PC = 0x55555555710a
	movaps %xmm0,(%rsp)                             #! EA = L0x7ffffffe6140; PC = 0x55555555710c
	test   %esi,%esi                                #! PC = 0x555555557110
	#je     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557112
	mov    %rdi,%rax                                #! PC = 0x555555557114
	mov    %rsp,%rdx                                #! PC = 0x555555557117
	cmp    $0x8,%esi                                #! PC = 0x55555555711a
	#jb     0x555555557178 <_store_xmm+136>         #! PC = 0x55555555711d
	mov    (%rsp),%rcx                              #! EA = L0x7ffffffe6140; Value = 0x17c5ebe7f7ca4701; PC = 0x55555555711f
	mov    %rcx,(%rdi)                              #! EA = L0x7ffffffe6300; PC = 0x555555557123
	mov    %esi,%ecx                                #! PC = 0x555555557126
	mov    -0x8(%rdx,%rcx,1),%rdi                   #! EA = L0x7ffffffe6144; Value = 0x696a6ed517c5ebe7; PC = 0x555555557128
	mov    %rdi,-0x8(%rax,%rcx,1)                   #! EA = L0x7ffffffe6304; PC = 0x55555555712d
	lea    0x8(%rax),%rdi                           #! PC = 0x555555557132
	and    $0xfffffffffffffff8,%rdi                 #! PC = 0x555555557136
	sub    %rdi,%rax                                #! PC = 0x55555555713a
	add    %eax,%esi                                #! PC = 0x55555555713d
	sub    %rax,%rdx                                #! PC = 0x55555555713f
	and    $0xfffffff8,%esi                         #! PC = 0x555555557142
	cmp    $0x8,%esi                                #! PC = 0x555555557145
	#jb     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557148
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6178; Value = 0x09baaae9a9287f00; PC = 0x555555557160
	sub    %fs:0x28,%rax                            #! PC = 0x555555557165
	#jne    0x5555555571ad <_store_xmm+189>         #! PC = 0x55555555716e
	leave                                           #! PC = 0x555555557170
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x555555557171
	pop    %rax                                     #! EA = L0x7ffffffe6190; Value = 0x0000000000000010; PC = 0x55555555b163
	pop    %rdx                                     #! EA = L0x7ffffffe6198; Value = 0x000055555555b128; PC = 0x55555555b164
	sub    %r13d,%r14d                              #! PC = 0x55555555b165
	#jne    0x55555555b0f0 <gf256mat_prod_multab_sse+144>#! PC = 0x55555555b168
	mov    -0xc8(%rbp),%edx                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000010; PC = 0x55555555b16a
	mov    %edx,%eax                                #! PC = 0x55555555b170
	imul   %r12d,%eax                               #! PC = 0x55555555b172
	add    %rax,-0xd0(%rbp)                         #! EA = L0x7ffffffe61c0; PC = 0x55555555b176
	lea    (%rdx,%rdx,1),%eax                       #! PC = 0x55555555b17d
	shl    $0x4,%rax                                #! PC = 0x55555555b180
	add    %rax,-0xd8(%rbp)                         #! EA = L0x7ffffffe61b8; PC = 0x55555555b184
	sub    %edx,-0xe4(%rbp)                         #! EA = L0x7ffffffe61ac; PC = 0x55555555b18b
	#jne    0x55555555b0d0 <gf256mat_prod_multab_sse+112>#! PC = 0x55555555b191
	mov    -0xe4(%rbp),%eax                         #! EA = L0x7ffffffe61ac; Value = 0xfffe62e000000004; PC = 0x55555555b0d0
	mov    $0x10,%r13d                              #! PC = 0x55555555b0d6
	mov    %r12d,%r14d                              #! PC = 0x55555555b0dc
	cmp    %r13d,%eax                               #! PC = 0x55555555b0df
	cmovbe %eax,%r13d                               #! PC = 0x55555555b0e2
	mov    %r13d,-0xc8(%rbp)                        #! EA = L0x7ffffffe61c8; PC = 0x55555555b0e6
	nopl   (%rax)                                   #! EA = L0x4; PC = 0x55555555b0ed
	mov    $0x80,%r8d                               #! PC = 0x55555555b0f0
	mov    %r12d,%ecx                               #! PC = 0x55555555b0f6
	mov    -0xe0(%rbp),%rax                         #! EA = L0x7ffffffe61b0; Value = 0x00007ffffffe62e0; PC = 0x55555555b0f9
	mov    %rbx,%rdi                                #! PC = 0x55555555b100
	cmp    %r8d,%r14d                               #! PC = 0x55555555b103
	cmovbe %r14d,%r8d                               #! PC = 0x55555555b106
	sub    %r14d,%ecx                               #! PC = 0x55555555b10a
	mov    %ecx,%r10d                               #! PC = 0x55555555b10d
	mov    %ecx,-0xc4(%rbp)                         #! EA = L0x7ffffffe61cc; PC = 0x55555555b110
	lea    (%rax,%r10,1),%r15                       #! PC = 0x55555555b116
	mov    %r8d,%edx                                #! PC = 0x55555555b11a
	mov    %r8d,%r13d                               #! PC = 0x55555555b11d
	mov    %r15,%rsi                                #! PC = 0x55555555b120
	#call   0x555555557040 <loadu_xmm>              #! PC = 0x55555555b123
	#! -> SP = 0x7ffffffe6198
	push   %rbp                                     #! EA = L0x7ffffffe6190; PC = 0x555555557040
	mov    %edx,%eax                                #! PC = 0x555555557041
	shr    $0x4,%eax                                #! PC = 0x555555557043
	mov    %rsp,%rbp                                #! PC = 0x555555557046
	push   %rbx                                     #! EA = L0x7ffffffe6188; PC = 0x555555557049
	mov    %rdi,%rbx                                #! PC = 0x55555555704a
	mov    %rsi,%rdi                                #! PC = 0x55555555704d
	mov    %edx,%esi                                #! PC = 0x555555557050
	and    $0xf,%esi                                #! PC = 0x555555557052
	sub    $0x8,%rsp                                #! PC = 0x555555557055
	test   %eax,%eax                                #! PC = 0x555555557059
	#je     0x5555555570d2 <loadu_xmm+146>          #! PC = 0x55555555705b
	movdqu (%rdi),%xmm1                             #! EA = L0x7ffffffe62e0; Value = 0x1e312419268bf7a5; PC = 0x55555555705d
	lea    -0x1(%rax),%edx                          #! PC = 0x555555557061
	movaps %xmm1,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x555555557064
	test   %edx,%edx                                #! PC = 0x555555557067
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557069
	movdqu 0x10(%rdi),%xmm2                         #! EA = L0x7ffffffe62f0; Value = 0x7dc079b713444af0; PC = 0x55555555706b
	movaps %xmm2,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x555555557070
	cmp    $0x2,%eax                                #! PC = 0x555555557074
	#je     0x5555555570c8 <loadu_xmm+136>          #! PC = 0x555555557077
	shl    $0x4,%rax                                #! PC = 0x5555555570c8
	add    %rax,%rbx                                #! PC = 0x5555555570cc
	add    %rax,%rdi                                #! PC = 0x5555555570cf
	test   %esi,%esi                                #! PC = 0x5555555570d2
	#je     0x5555555570de <loadu_xmm+158>          #! PC = 0x5555555570d4
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x5555555570d6
	#! -> SP = 0x7ffffffe6178
	push   %rbp                                     #! EA = L0x7ffffffe6170; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe6158; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe6118
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffffffe6304; Value = 0x696a6ed517c5ebe7; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffffffe6300; Value = 0x17c5ebe7f7ca4701; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe6120; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe6124; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe6118
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe6120; Value = 0x17c5ebe7f7ca4701; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6158; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6178
	#ret                                            #! PC = 0x555555557036
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61f0; PC = 0x5555555570db
	mov    -0x8(%rbp),%rbx                          #! EA = L0x7ffffffe6188; Value = 0x00007ffffffe61d0; PC = 0x5555555570de
	leave                                           #! PC = 0x5555555570e2
	#! <- SP = 0x7ffffffe6198
	#ret                                            #! PC = 0x5555555570e3
	mov    -0xc8(%rbp),%eax                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000004; PC = 0x55555555b128
	sub    $0x8,%rsp                                #! PC = 0x55555555b12e
	mov    -0xd8(%rbp),%r9                          #! EA = L0x7ffffffe61b8; Value = 0x00007ffffffe6ba0; PC = 0x55555555b132
	mov    -0xc4(%rbp),%ecx                         #! EA = L0x7ffffffe61cc; Value = 0x268bf7a500000000; PC = 0x55555555b139
	mov    %r13d,%r8d                               #! PC = 0x55555555b13f
	mov    %r12d,%edx                               #! PC = 0x55555555b142
	mov    %rbx,%rdi                                #! PC = 0x55555555b145
	push   %rax                                     #! EA = L0x7ffffffe6190; PC = 0x55555555b148
	mov    -0xd0(%rbp),%rsi                         #! EA = L0x7ffffffe61c0; Value = 0x00007ffff78bc6e0; PC = 0x55555555b149
	#call   0x55555555aa50 <gf256mat_blockmat_madd_sse>#! PC = 0x55555555b150
	#! -> SP = 0x7ffffffe6188
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x55555555aa50
	mov    %r8d,%eax                                #! PC = 0x55555555aa51
	mov    %ecx,%ecx                                #! PC = 0x55555555aa54
	and    $0xfffffff0,%eax                         #! PC = 0x55555555aa56
	mov    %rsp,%rbp                                #! PC = 0x55555555aa59
	push   %r15                                     #! EA = L0x7ffffffe6178; PC = 0x55555555aa5c
	mov    %r8d,%r15d                               #! PC = 0x55555555aa5e
	push   %r14                                     #! EA = L0x7ffffffe6170; PC = 0x55555555aa61
	and    $0xf,%r15d                               #! PC = 0x55555555aa63
	mov    %r9,%r14                                 #! PC = 0x55555555aa67
	push   %r13                                     #! EA = L0x7ffffffe6168; PC = 0x55555555aa6a
	mov    %r8d,%r13d                               #! PC = 0x55555555aa6c
	push   %r12                                     #! EA = L0x7ffffffe6160; PC = 0x55555555aa6f
	shr    $0x4,%r13d                               #! PC = 0x55555555aa71
	lea    (%rsi,%rcx,1),%r12                       #! PC = 0x55555555aa75
	push   %rbx                                     #! EA = L0x7ffffffe6158; PC = 0x55555555aa79
	mov    %rdi,%rbx                                #! PC = 0x55555555aa7a
	sub    $0x48,%rsp                               #! PC = 0x55555555aa7d
	mov    %rax,-0x68(%rbp)                         #! EA = L0x7ffffffe6118; PC = 0x55555555aa81
	mov    %r13d,%eax                               #! PC = 0x55555555aa85
	shl    $0x4,%rax                                #! PC = 0x55555555aa88
	add    %rdi,%rax                                #! PC = 0x55555555aa8c
	mov    %rax,-0x70(%rbp)                         #! EA = L0x7ffffffe6110; PC = 0x55555555aa8f
	mov    %edx,%eax                                #! PC = 0x55555555aa93
	mov    %rax,-0x60(%rbp)                         #! EA = L0x7ffffffe6120; PC = 0x55555555aa95
	mov    0x10(%rbp),%eax                          #! EA = L0x7ffffffe6190; Value = 0x0000000000000004; PC = 0x55555555aa99
	shl    $0x5,%rax                                #! PC = 0x55555555aa9c
	add    %r9,%rax                                 #! PC = 0x55555555aaa0
	mov    %rax,-0x58(%rbp)                         #! EA = L0x7ffffffe6128; PC = 0x55555555aaa3
	nopw   0x0(%rax,%rax,1)                         #! EA = L0xfffffffcd840; PC = 0x55555555aaa7
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6ba0; Value = 0x9dc72973eeb45a00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6bb0; Value = 0x13c4a67162b5d700; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc6e0; Value = 0xc425c14c1e1bf189; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0x1e312419268bf7a5; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x13c4a67162b5d700; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc6f0; Value = 0x53070fb854901659; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x7dc079b713444af0; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x13c4a67162b5d700; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc704; Value = 0x56bd681791b05ae3; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc700; Value = 0x91b05ae316551394; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x91b05ae316551394; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x13c4a67162b5d700; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x9dc72973eeb45a00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x17c5ebe7f7ca4701; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6c20; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6bc0; Value = 0x7a018cf78df67b00; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6bd0; Value = 0xe11018e908f9f100; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc70c; Value = 0x3096b115c68b721a; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xfeadedfdd0545cfb; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xe11018e908f9f100; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc71c; Value = 0x674b34881b0da8c6; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x355d02d1c6715aea; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xe11018e908f9f100; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc730; Value = 0x8947b1f179e0f4b3; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc72c; Value = 0x79e0f4b35fd0d208; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x79e0f4b35fd0d208; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xe11018e908f9f100; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x7a018cf78df67b00; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x78451f2fe7457e47; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6c20; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6be0; Value = 0x85b2ebdc596e3700; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6bf0; Value = 0x88d5326fe7ba5d00; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc738; Value = 0x031e289efefc7d4c; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xf6945780f1e54b09; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x88d5326fe7ba5d00; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc748; Value = 0xe2710f54b50ef184; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x5fccfded4f089fcb; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x88d5326fe7ba5d00; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc75c; Value = 0xa93fa75a345baefe; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc758; Value = 0x345baefe0a56f2c2; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x345baefe0a56f2c2; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0x88d5326fe7ba5d00; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x85b2ebdc596e3700; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x179cc063709459b2; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6c20; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	movdqa (%r14),%xmm3                             #! EA = L0x7ffffffe6c00; Value = 0x7fbce2215e9dc300; PC = 0x55555555aab0
	movdqa 0x10(%r14),%xmm1                         #! EA = L0x7ffffffe6c10; Value = 0xb135a22697138400; PC = 0x55555555aab5
	add    $0x20,%r14                               #! PC = 0x55555555aabb
	movaps %xmm3,-0x40(%rbp)                        #! EA = L0x7ffffffe6140; PC = 0x55555555aabf
	test   %r13d,%r13d                              #! PC = 0x55555555aac3
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aac6
	movdqu (%r12),%xmm2                             #! EA = L0x7ffff78bc764; Value = 0x83fc143923694445; PC = 0x55555555aacc
	movdqa %xmm3,%xmm0                              #! PC = 0x55555555aad2
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555aad6
	movdqa %xmm3,%xmm5                              #! PC = 0x55555555aada
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555aade
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   (%rbx),%xmm0                             #! EA = L0x7ffffffe61d0; Value = 0xafd84e12b6cc8b19; PC = 0x55555555aae3
	cmp    $0x1,%r13d                               #! PC = 0x55555555aae7
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb135a22697138400; PC = 0x55555555aaeb
	movaps %xmm0,(%rbx)                             #! EA = L0x7ffffffe61d0; PC = 0x55555555aaf0
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555aaf3
	movdqu 0x10(%r12),%xmm2                         #! EA = L0x7ffff78bc774; Value = 0x7e2c3c455a5c94c9; PC = 0x55555555aaf9
	movdqa %xmm5,%xmm0                              #! PC = 0x55555555ab00
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ab04
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	pxor   0x10(%rbx),%xmm0                         #! EA = L0x7ffffffe61e0; Value = 0x3a73db039d19fec9; PC = 0x55555555ab09
	cmp    $0x2,%r13d                               #! PC = 0x55555555ab0e
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb135a22697138400; PC = 0x55555555ab12
	movaps %xmm0,0x10(%rbx)                         #! EA = L0x7ffffffe61e0; PC = 0x55555555ab17
	#je     0x55555555abfb <gf256mat_blockmat_madd_sse+427>#! PC = 0x55555555ab1b
	test   %r15d,%r15d                              #! PC = 0x55555555abfb
	#je     0x55555555ac32 <gf256mat_blockmat_madd_sse+482>#! PC = 0x55555555abfe
	mov    -0x68(%rbp),%rax                         #! EA = L0x7ffffffe6118; Value = 0x0000000000000020; PC = 0x55555555ac00
	mov    %r15d,%esi                               #! PC = 0x55555555ac04
	movaps %xmm1,-0x50(%rbp)                        #! EA = L0x7ffffffe6130; PC = 0x55555555ac07
	lea    (%rax,%r12,1),%rdi                       #! PC = 0x55555555ac0b
	#call   0x555555556ff0 <_load_xmm>              #! PC = 0x55555555ac0f
	#! -> SP = 0x7ffffffe6108
	push   %rbp                                     #! EA = L0x7ffffffe6100; PC = 0x555555556ff0
	mov    %rsp,%rbp                                #! PC = 0x555555556ff1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x555555556ff4
	sub    $0x40,%rsp                               #! PC = 0x555555556ff8
	mov    %fs:0x28,%rax                            #! PC = 0x555555556ffc
	mov    %rax,0x38(%rsp)                          #! EA = L0x7ffffffe60f8; PC = 0x555555557005
	xor    %eax,%eax                                #! PC = 0x55555555700a
	test   %esi,%esi                                #! PC = 0x55555555700c
	#je     0x555555557020 <_load_xmm+48>           #! PC = 0x55555555700e
	mov    %rsp,%r8                                 #! PC = 0x555555557010
	mov    %esi,%edx                                #! PC = 0x555555557013
	mov    %rdi,%rsi                                #! PC = 0x555555557015
	mov    %r8,%rdi                                 #! PC = 0x555555557018
	#call   0x5555555552d0 <memcpy@plt>             #! PC = 0x55555555701b
	#! -> SP = 0x7ffffffe60b8
	endbr64                                         #! PC = 0x5555555552d0
	bnd jmp *0x17cf5(%rip)        # 0x55555556cfd0 <memcpy@got.plt>#! EA = L0x55555556cfd0; PC = 0x5555555552d4
	endbr64                                         #! PC = 0x7ffff7aebf40
	mov    %rdi,%rax                                #! PC = 0x7ffff7aebf44
	cmp    $0x20,%rdx                               #! PC = 0x7ffff7aebf47
	#jb     0x7ffff7aebf80 <__memmove_evex_unaligned_erms+64>#! PC = 0x7ffff7aebf4b
	cmp    $0x10,%edx                               #! PC = 0x7ffff7aebf80
	#jae    0x7ffff7aebfa6 <__memmove_evex_unaligned_erms+102>#! PC = 0x7ffff7aebf83
	cmp    $0x8,%edx                                #! PC = 0x7ffff7aebf85
	#jae    0x7ffff7aebfc0 <__memmove_evex_unaligned_erms+128>#! PC = 0x7ffff7aebf88
	mov    -0x8(%rsi,%rdx,1),%rcx                   #! EA = L0x7ffff78bc788; Value = 0xfd2b4bb99cd1e9e1; PC = 0x7ffff7aebfc0
	mov    (%rsi),%rsi                              #! EA = L0x7ffff78bc784; Value = 0x9cd1e9e1bf7681cf; PC = 0x7ffff7aebfc5
	mov    %rsi,(%rdi)                              #! EA = L0x7ffffffe60c0; PC = 0x7ffff7aebfc8
	mov    %rcx,-0x8(%rdi,%rdx,1)                   #! EA = L0x7ffffffe60c4; PC = 0x7ffff7aebfcb
	#! <- SP = 0x7ffffffe60b8
	#ret                                            #! PC = 0x7ffff7aebfd0
	movdqa (%rsp),%xmm0                             #! EA = L0x7ffffffe60c0; Value = 0x9cd1e9e1bf7681cf; PC = 0x555555557020
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe60f8; Value = 0x09baaae9a9287f00; PC = 0x555555557025
	sub    %fs:0x28,%rax                            #! PC = 0x55555555702a
	#jne    0x555555557037 <_load_xmm+71>           #! PC = 0x555555557033
	leave                                           #! PC = 0x555555557035
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557036
	movdqa -0x50(%rbp),%xmm1                        #! EA = L0x7ffffffe6130; Value = 0xb135a22697138400; PC = 0x55555555ac14
	movdqa %xmm0,%xmm2                              #! PC = 0x55555555ac19
	movdqa -0x40(%rbp),%xmm0                        #! EA = L0x7ffffffe6140; Value = 0x7fbce2215e9dc300; PC = 0x55555555ac1d
	#call   0x555555557e90 <linear_transform_8x8_128b.constprop.0>#! PC = 0x55555555ac22
	#! -> SP = 0x7ffffffe6108
	movdqa 0xe198(%rip),%xmm3        # 0x555555566030#! EA = L0x555555566030; Value = 0x0f0f0f0f0f0f0f0f; PC = 0x555555557e90
	movdqa %xmm2,%xmm4                              #! PC = 0x555555557e98
	psrlw  $0x4,%xmm2                               #! PC = 0x555555557e9c
	pand   %xmm3,%xmm4                              #! PC = 0x555555557ea1
	pand   %xmm3,%xmm2                              #! PC = 0x555555557ea5
	pshufb %xmm4,%xmm0                              #! PC = 0x555555557ea9
	pshufb %xmm2,%xmm1                              #! PC = 0x555555557eae
	pxor   %xmm1,%xmm0                              #! PC = 0x555555557eb3
	#! <- SP = 0x7ffffffe6108
	#ret                                            #! PC = 0x555555557eb7
	mov    -0x70(%rbp),%rax                         #! EA = L0x7ffffffe6110; Value = 0x00007ffffffe61f0; PC = 0x55555555ac27
	pxor   (%rax),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x2c54b524bd14616d; PC = 0x55555555ac2b
	movaps %xmm0,(%rax)                             #! EA = L0x7ffffffe61f0; PC = 0x55555555ac2f
	add    -0x60(%rbp),%r12                         #! EA = L0x7ffffffe6120; Value = 0x000000000000002c; PC = 0x55555555ac32
	cmp    -0x58(%rbp),%r14                         #! EA = L0x7ffffffe6128; Value = 0x00007ffffffe6c20; PC = 0x55555555ac36
	#jne    0x55555555aab0 <gf256mat_blockmat_madd_sse+96>#! PC = 0x55555555ac3a
	add    $0x48,%rsp                               #! PC = 0x55555555ac40
	pop    %rbx                                     #! EA = L0x7ffffffe6158; Value = 0x00007ffffffe61d0; PC = 0x55555555ac44
	pop    %r12                                     #! EA = L0x7ffffffe6160; Value = 0x000000000000002c; PC = 0x55555555ac45
	pop    %r13                                     #! EA = L0x7ffffffe6168; Value = 0x000000000000002c; PC = 0x55555555ac47
	pop    %r14                                     #! EA = L0x7ffffffe6170; Value = 0x000000000000002c; PC = 0x55555555ac49
	pop    %r15                                     #! EA = L0x7ffffffe6178; Value = 0x00007ffffffe62e0; PC = 0x55555555ac4b
	pop    %rbp                                     #! EA = L0x7ffffffe6180; Value = 0x00007ffffffe6290; PC = 0x55555555ac4d
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x55555555ac4e
	mov    %rbx,%rdx                                #! PC = 0x55555555b155
	mov    %r13d,%esi                               #! PC = 0x55555555b158
	mov    %r15,%rdi                                #! PC = 0x55555555b15b
	#call   0x5555555571c0 <storeu_xmm>             #! PC = 0x55555555b15e
	#! -> SP = 0x7ffffffe6188
	mov    %esi,%eax                                #! PC = 0x5555555571c0
	and    $0xf,%esi                                #! PC = 0x5555555571c2
	shr    $0x4,%eax                                #! PC = 0x5555555571c5
	lea    -0x1(%rax),%ecx                          #! PC = 0x5555555571c8
	test   %eax,%eax                                #! PC = 0x5555555571cb
	#je     0x555555557241 <storeu_xmm+129>         #! PC = 0x5555555571cd
	movdqa (%rdx),%xmm1                             #! EA = L0x7ffffffe61d0; Value = 0xbd46eb04fb788cdd; PC = 0x5555555571cf
	movups %xmm1,(%rdi)                             #! EA = L0x7ffffffe62e0; PC = 0x5555555571d3
	test   %ecx,%ecx                                #! PC = 0x5555555571d6
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571d8
	movdqa 0x10(%rdx),%xmm2                         #! EA = L0x7ffffffe61e0; Value = 0x75032fc7e0d81722; PC = 0x5555555571da
	movups %xmm2,0x10(%rdi)                         #! EA = L0x7ffffffe62f0; PC = 0x5555555571df
	cmp    $0x2,%eax                                #! PC = 0x5555555571e3
	#je     0x555555557237 <storeu_xmm+119>         #! PC = 0x5555555571e6
	shl    $0x4,%rax                                #! PC = 0x555555557237
	add    %rax,%rdx                                #! PC = 0x55555555723b
	add    %rax,%rdi                                #! PC = 0x55555555723e
	test   %esi,%esi                                #! PC = 0x555555557241
	#jne    0x555555557250 <storeu_xmm+144>         #! PC = 0x555555557243
	movdqa (%rdx),%xmm0                             #! EA = L0x7ffffffe61f0; Value = 0x87794d9e5b19ee3a; PC = 0x555555557250
	#jmp    0x5555555570f0 <_store_xmm>             #! PC = 0x555555557254
	push   %rbp                                     #! EA = L0x7ffffffe6180; PC = 0x5555555570f0
	mov    %rsp,%rbp                                #! PC = 0x5555555570f1
	and    $0xffffffffffffffe0,%rsp                 #! PC = 0x5555555570f4
	sub    $0x40,%rsp                               #! PC = 0x5555555570f8
	mov    %fs:0x28,%rdx                            #! PC = 0x5555555570fc
	mov    %rdx,0x38(%rsp)                          #! EA = L0x7ffffffe6178; PC = 0x555555557105
	xor    %edx,%edx                                #! PC = 0x55555555710a
	movaps %xmm0,(%rsp)                             #! EA = L0x7ffffffe6140; PC = 0x55555555710c
	test   %esi,%esi                                #! PC = 0x555555557110
	#je     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557112
	mov    %rdi,%rax                                #! PC = 0x555555557114
	mov    %rsp,%rdx                                #! PC = 0x555555557117
	cmp    $0x8,%esi                                #! PC = 0x55555555711a
	#jb     0x555555557178 <_store_xmm+136>         #! PC = 0x55555555711d
	mov    (%rsp),%rcx                              #! EA = L0x7ffffffe6140; Value = 0x87794d9e5b19ee3a; PC = 0x55555555711f
	mov    %rcx,(%rdi)                              #! EA = L0x7ffffffe6300; PC = 0x555555557123
	mov    %esi,%ecx                                #! PC = 0x555555557126
	mov    -0x8(%rdx,%rcx,1),%rdi                   #! EA = L0x7ffffffe6144; Value = 0xe2782d6987794d9e; PC = 0x555555557128
	mov    %rdi,-0x8(%rax,%rcx,1)                   #! EA = L0x7ffffffe6304; PC = 0x55555555712d
	lea    0x8(%rax),%rdi                           #! PC = 0x555555557132
	and    $0xfffffffffffffff8,%rdi                 #! PC = 0x555555557136
	sub    %rdi,%rax                                #! PC = 0x55555555713a
	add    %eax,%esi                                #! PC = 0x55555555713d
	sub    %rax,%rdx                                #! PC = 0x55555555713f
	and    $0xfffffff8,%esi                         #! PC = 0x555555557142
	cmp    $0x8,%esi                                #! PC = 0x555555557145
	#jb     0x555555557160 <_store_xmm+112>         #! PC = 0x555555557148
	mov    0x38(%rsp),%rax                          #! EA = L0x7ffffffe6178; Value = 0x09baaae9a9287f00; PC = 0x555555557160
	sub    %fs:0x28,%rax                            #! PC = 0x555555557165
	#jne    0x5555555571ad <_store_xmm+189>         #! PC = 0x55555555716e
	leave                                           #! PC = 0x555555557170
	#! <- SP = 0x7ffffffe6188
	#ret                                            #! PC = 0x555555557171
	pop    %rax                                     #! EA = L0x7ffffffe6190; Value = 0x0000000000000004; PC = 0x55555555b163
	pop    %rdx                                     #! EA = L0x7ffffffe6198; Value = 0x000055555555b128; PC = 0x55555555b164
	sub    %r13d,%r14d                              #! PC = 0x55555555b165
	#jne    0x55555555b0f0 <gf256mat_prod_multab_sse+144>#! PC = 0x55555555b168
	mov    -0xc8(%rbp),%edx                         #! EA = L0x7ffffffe61c8; Value = 0x0000000000000004; PC = 0x55555555b16a
	mov    %edx,%eax                                #! PC = 0x55555555b170
	imul   %r12d,%eax                               #! PC = 0x55555555b172
	add    %rax,-0xd0(%rbp)                         #! EA = L0x7ffffffe61c0; PC = 0x55555555b176
	lea    (%rdx,%rdx,1),%eax                       #! PC = 0x55555555b17d
	shl    $0x4,%rax                                #! PC = 0x55555555b180
	add    %rax,-0xd8(%rbp)                         #! EA = L0x7ffffffe61b8; PC = 0x55555555b184
	sub    %edx,-0xe4(%rbp)                         #! EA = L0x7ffffffe61ac; PC = 0x55555555b18b
	#jne    0x55555555b0d0 <gf256mat_prod_multab_sse+112>#! PC = 0x55555555b191
	mov    -0x38(%rbp),%rax                         #! EA = L0x7ffffffe6258; Value = 0x09baaae9a9287f00; PC = 0x55555555b197
	sub    %fs:0x28,%rax                            #! PC = 0x55555555b19b
	#jne    0x55555555b1b5 <gf256mat_prod_multab_sse+341>#! PC = 0x55555555b1a4
	lea    -0x28(%rbp),%rsp                         #! PC = 0x55555555b1a6
	pop    %rbx                                     #! EA = L0x7ffffffe6268; Value = 0x00007ffff78d4f18; PC = 0x55555555b1aa
	pop    %r12                                     #! EA = L0x7ffffffe6270; Value = 0x000000000000002c; PC = 0x55555555b1ab
	pop    %r13                                     #! EA = L0x7ffffffe6278; Value = 0x00007ffffffe62e0; PC = 0x55555555b1ad
	pop    %r14                                     #! EA = L0x7ffffffe6280; Value = 0x0000000000000000; PC = 0x55555555b1af
	pop    %r15                                     #! EA = L0x7ffffffe6288; Value = 0x0000000000000001; PC = 0x55555555b1b1
	pop    %rbp                                     #! EA = L0x7ffffffe6290; Value = 0x00007ffffffe6380; PC = 0x55555555b1b3
	#! <- SP = 0x7ffffffe6298
	#ret                                            #! PC = 0x55555555b1b4
